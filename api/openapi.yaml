openapi: 3.0.1
info:
  title: Cinode API
  description: Cinode's Open API
  termsOfService: https://app.cinode.com/policies/terms
  contact:
    name: Cinode Support
    url: https://support.cinode.com/
  license:
    name: Cinode AB
    url: https://www.cinode.com
  version: "0.1"
servers:
- url: https://api.cinode.com
paths:
  /v0.1/companies/{companyId}/users/{companyUserId}/absences/{id}:
    get:
      tags:
      - Absence
      summary: Get absence period by id
      operationId: absence
      parameters:
      - name: companyId
        in: path
        description: Your company id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: The id of the actual user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The id for the requested absence period
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AbsencePeriodModel'
            application/json:
              schema:
                $ref: '#/components/schemas/AbsencePeriodModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AbsencePeriodModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/AbsencePeriodModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/AbsencePeriodModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: Absence
    put:
      tags:
      - Absence
      summary: Update Absence Item for User
      operationId: updateAbsence
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Absence Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileCommitmentAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/absences_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/absences_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/absences_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/absences_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AbsencePeriodModel'
            application/json:
              schema:
                $ref: '#/components/schemas/AbsencePeriodModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AbsencePeriodModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/AbsencePeriodModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/AbsencePeriodModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: Absence
    delete:
      tags:
      - Absence
      summary: Delete absence
      operationId: deleteAbsence
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: Absence
  /v0.1/companies/{companyId}/users/{companyUserId}/absences:
    get:
      tags:
      - Absences
      summary: Get absence period by company user id
      operationId: absences
      parameters:
      - name: companyId
        in: path
        description: Your Cinode Company id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: The id of the actual User
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbsencePeriodDtoModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbsencePeriodDtoModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbsencePeriodDtoModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbsencePeriodDtoModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbsencePeriodDtoModel'
        "400":
          description: Incorrect request
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: Absences
    post:
      tags:
      - Absence
      summary: Create Absence Item for User
      operationId: newAbsence
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileCommitmentAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/companyUserId_absences_body'
          application/json:
            schema:
              $ref: '#/components/schemas/companyUserId_absences_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/companyUserId_absences_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/companyUserId_absences_body_3'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AbsencePeriodModel'
            application/json:
              schema:
                $ref: '#/components/schemas/AbsencePeriodModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AbsencePeriodModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/AbsencePeriodModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/AbsencePeriodModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: Absence
  /v0.1/companies/{companyId}/absence/types:
    get:
      tags:
      - AbsenceType
      summary: Get absence types for company
      operationId: absenceTypes
      parameters:
      - name: companyId
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbsenceTypeModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbsenceTypeModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbsenceTypeModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbsenceTypeModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbsenceTypeModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: AbsenceType
  /v0.1/companies/{companyId}/availability:
    post:
      tags:
      - Availability
      summary: Get availability for company users. Omitting companyUserId gets availability
        for all company users in company.
      operationId: searchAvailability
      parameters:
      - name: companyId
        in: path
        description: Your Cinode Company id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Filter options
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/companyId_availability_body'
          application/json:
            schema:
              $ref: '#/components/schemas/companyId_availability_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/companyId_availability_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/companyId_availability_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityModel'
        "400":
          description: Incorrect request
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: Availability
  /v0.1/companies/{companyId}:
    get:
      tags:
      - Company
      summary: Get company by id
      operationId: company
      parameters:
      - name: companyId
        in: path
        description: CompanyId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: Company
  /v0.1/companies/{companyId}/addresses/{id}/users:
    get:
      tags:
      - CompanyAddressUsers
      summary: Get company users list for an address
      operationId: companyAddressUsers
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Address Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyAddressUsers
  /v0.1/companies/{companyId}/candidates/{id}:
    get:
      tags:
      - CompanyCandidate
      summary: Get Candidate by Id
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: candidate
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Candidate Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCandidateExtendedModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateExtendedModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateExtendedModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateExtendedModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateExtendedModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidate
    delete:
      tags:
      - CompanyCandidate
      summary: "Delete candidate from the system\r\nThis action is irreversible, use\
        \ with caution"
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: deleteCompanyCandidate
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Candidate Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidate
    patch:
      tags:
      - CompanyCandidate
      summary: Patch company candidate
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: patchCompanyCandidate
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Candidate Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: "Only certain properties on the user are patchable. See the generated\
          \ example for a list of available properties, using the `op: \"replace\"\
          ` as example. See the generated schema for `ICompanyCandidatePatchDocument`\
          \ for full type information per property"
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
            example:
            - value: 0
              path: /pipelineid
              op: replace
            - value: 0
              path: /pipelinestageid
              op: replace
            - value: 0
              path: /recruitmentmanagerid
              op: replace
            - value: 0
              path: /state
              op: replace
            - value: 2023-01-25T08:43:04.0750419+01:00
              path: /availablefromdate
              op: replace
            - value: string
              path: /campaigncode
              op: replace
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCandidateExtendedModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateExtendedModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateExtendedModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateExtendedModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateExtendedModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidate
  /v0.1/companies/{companyId}/candidates:
    get:
      tags:
      - CompanyCandidates
      summary: Get Candidates
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: candidates
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidates
    post:
      tags:
      - CompanyCandidate
      summary: Create Candidate
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: addCompanyCandidate
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyCandidateAddModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/companyId_candidates_body'
          application/json:
            schema:
              $ref: '#/components/schemas/companyId_candidates_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/companyId_candidates_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/companyId_candidates_body_3'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCandidateExtendedModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateExtendedModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateExtendedModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateExtendedModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateExtendedModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidate
  /v0.1/companies/{companyId}/candidates/{candidateId}/events/{id}:
    get:
      tags:
      - CompanyCandidateEvent
      summary: Get company candidates event by id
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: companyCandidateEvent
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateEvent
  /v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings/{id}:
    get:
      tags:
      - CompanyCandidateEventMeeting
      summary: Get company candidates meeting event with specified id
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: companyCandidateEventMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventMeetingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventMeetingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventMeetingModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventMeetingModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventMeetingModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateEventMeeting
    put:
      tags:
      - CompanyCandidateEventMeeting
      summary: Update meeting event for company candidate
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: updateCompanyCandidateEventMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: Meeting Event details
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/meetings_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventMeetingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventMeetingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventMeetingModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventMeetingModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventMeetingModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateEventMeeting
    delete:
      tags:
      - CompanyCandidateEventMeeting
      summary: Delete company candidate meeting event
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: deleteCompanyCandidateEventMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateEventMeeting
  /v0.1/companies/{companyId}/candidates/{candidateId}/events/meetings:
    get:
      tags:
      - CompanyCandidateEventMeetings
      summary: Get company candidates events meetings list
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: companyCandidateMeetingEventList
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateEventMeetings
    post:
      tags:
      - CompanyCandidateEventMeeting
      summary: Add new meeting event for company candidate
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: newCompanyCandidateEventMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Meeting Event details
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/events_meetings_body'
          application/json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_3'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventMeetingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventMeetingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventMeetingModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventMeetingModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventMeetingModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateEventMeeting
  /v0.1/companies/{companyId}/candidates/{candidateId}/events/notes/{id}:
    get:
      tags:
      - CompanyCandidateEventNote
      summary: Get company candidates note event with specified id
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: companyCandidateEventNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventNoteModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventNoteModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventNoteModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventNoteModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventNoteModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateEventNote
    put:
      tags:
      - CompanyCandidateEventNote
      summary: Update note event for company candidate
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: updateCompanyCandidateEventNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: Note Event details
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/notes_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/notes_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/notes_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/notes_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventNoteModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventNoteModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventNoteModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventNoteModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventNoteModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateEventNote
    delete:
      tags:
      - CompanyCandidateEventNote
      summary: Delete company candidate note event
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: deleteCompanyCandidateEventNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateEventNote
  /v0.1/companies/{companyId}/candidates/{candidateId}/events/notes:
    get:
      tags:
      - CompanyCandidateEventNotes
      summary: Get company candidates events notes list
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: companyCandidateNoteEventList
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateEventNotes
    post:
      tags:
      - CompanyCandidateEventNote
      summary: Add new note event for company candidate
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: newCompanyCandidateEventNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Note Event details
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/events_notes_body'
          application/json:
            schema:
              $ref: '#/components/schemas/events_notes_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/events_notes_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/events_notes_body_3'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventNoteModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventNoteModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventNoteModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventNoteModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventNoteModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateEventNote
  /v0.1/companies/{companyId}/candidates/{candidateId}/events:
    get:
      tags:
      - CompanyCandidateEvents
      summary: Get company candidates events list
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: companyCandidateEvents
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateEvents
  /v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks/{id}:
    get:
      tags:
      - CompanyCandidateEventTask
      summary: Get company candidates task event with specified id
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: companyCandidateEventTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventTaskModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventTaskModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventTaskModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventTaskModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventTaskModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateEventTask
    put:
      tags:
      - CompanyCandidateEventTask
      summary: Update task event for company candidate
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: updateCompanyCandidateEventTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: Task Event details
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/tasks_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventTaskModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventTaskModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventTaskModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventTaskModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventTaskModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateEventTask
    delete:
      tags:
      - CompanyCandidateEventTask
      summary: Delete company candidate task event
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: deleteCompanyCandidateEventTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateEventTask
  /v0.1/companies/{companyId}/candidates/{candidateId}/events/tasks:
    get:
      tags:
      - CompanyCandidateEventTasks
      summary: Get company candidates events tasks list
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: companyCandidateTaskEventList
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidateEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateEventTasks
    post:
      tags:
      - CompanyCandidateEventTask
      summary: Add new task event for company candidate
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: newCompanyCandidateEventTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Task Event details
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/events_tasks_body'
          application/json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_3'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventTaskModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventTaskModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventTaskModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventTaskModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateEventTaskModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateEventTask
  /v0.1/companies/{companyId}/candidates/{id}/attachments/{attachmentId}:
    get:
      tags:
      - CompanyCandidateFileAttachment
      summary: Get Candidate File Attachment by Id
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: getCandidateAttachment
      parameters:
      - name: id
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: attachmentId
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: string
                format: byte
                x-content-type: text/plain
            application/json:
              schema:
                type: string
                format: byte
            text/json:
              schema:
                type: string
                format: byte
            application/xml:
              schema:
                type: string
                format: byte
            text/xml:
              schema:
                type: string
                format: byte
        "400":
          description: Incorrect request
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateFileAttachment
  /v0.1/companies/{companyId}/candidates/{id}/attachments:
    post:
      tags:
      - CompanyCandidateFileAttachments
      summary: Upload Candidate File Attachment
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: candidateAttachment
      parameters:
      - name: id
        in: path
        description: Candidate Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/id_attachments_body'
            encoding:
              Files:
                style: form
              Title:
                style: form
              Description:
                style: form
      responses:
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCandidateFileAttachmentListModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateFileAttachmentListModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateFileAttachmentListModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateFileAttachmentListModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateFileAttachmentListModel'
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized
        "500":
          description: Server Error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateFileAttachments
  /v0.1/companies/{companyId}/candidates/pipelines:
    get:
      tags:
      - CompanyCandidatePipelines
      summary: Get candidate pipelines
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: candidatePipelines
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidatePipelineModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidatePipelineModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidatePipelineModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidatePipelineModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCandidatePipelineModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidatePipelines
  /v0.1/companies/{companyId}/candidates/{candidateId}/skills:
    post:
      tags:
      - CompanyCandidateSkills
      summary: Add a Skill to company candidate
      description: "Sample request:\r\n\r\n    POST /v0.1/companies/1/candidates/19870/skills\r\
        \n    {\r\n        \"name\": \"SQL\",\r\n        \"companyCandidateId\": 19870,\r\
        \n        \"keywordSynonymId\": 577,\r\n        \"languageId\":1\r\n    }"
      operationId: newCompanyCandidateSkill
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyCandidateSkillAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/candidateId_skills_body'
          application/json:
            schema:
              $ref: '#/components/schemas/candidateId_skills_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/candidateId_skills_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/candidateId_skills_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCandidateSkillModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateSkillModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCandidateSkillModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateSkillModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCandidateSkillModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateSkills
  /v0.1/companies/{companyId}/candidates/{candidateId}/skills/{id}:
    delete:
      tags:
      - CompanyCandidateSkills
      summary: Delete Candidate Skill
      description: "Sample request:\r\n\r\n    DELETE /v0.1/companies/1/candidates/19870/skills/577"
      operationId: deleteCompanyCandidateSkill
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: candidateId
        in: path
        description: CandidateId Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Skill Keyword Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCandidateSkills
  /v0.1/companies/{companyId}/capabilities:
    get:
      tags:
      - CompanyCapabilities
      summary: Get company capabilities
      operationId: companyCapabilities
      parameters:
      - name: companyId
        in: path
        description: CompanyId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCapabilitiesModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCapabilitiesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCapabilitiesModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCapabilitiesModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCapabilitiesModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCapabilities
  /v0.1/companies/{companyId}/currencies:
    get:
      tags:
      - CompanyCurrencies
      summary: Get company currencies
      operationId: companyCurrencies
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CurrencyModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CurrencyModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CurrencyModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CurrencyModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CurrencyModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCurrencies
  /v0.1/companies/{companyId}/customers/{id}:
    get:
      tags:
      - CompanyCustomer
      summary: Get company customer by id
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: customer
      parameters:
      - name: companyId
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomer
    put:
      tags:
      - CompanyCustomer
      summary: Update company customer
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: updateCompanyCustomer
      parameters:
      - name: id
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyCustomerAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/customers_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/customers_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/customers_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/customers_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomer
    delete:
      tags:
      - CompanyCustomer
      summary: Delete customer
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: deleteCompanyCustomer
      parameters:
      - name: id
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyCustomerDeleteModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/customers_id_body_4'
          application/json:
            schema:
              $ref: '#/components/schemas/customers_id_body_5'
          text/json:
            schema:
              $ref: '#/components/schemas/customers_id_body_6'
          application/*+json:
            schema:
              $ref: '#/components/schemas/customers_id_body_7'
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomer
  /v0.1/companies/{companyId}/customers:
    get:
      tags:
      - CompanyCustomers
      summary: Get company customers list
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: companyCustomers
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomers
    post:
      tags:
      - CompanyCustomer
      summary: Add company customer
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: newCompanyCustomer
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyCustomerAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/companyId_customers_body'
          application/json:
            schema:
              $ref: '#/components/schemas/companyId_customers_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/companyId_customers_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/companyId_customers_body_3'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomer
  /v0.1/companies/{companyId}/customers/{customerId}/addresses/{id}:
    get:
      tags:
      - CompanyCustomerAddress
      summary: Get customer address by id
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: customerAddress
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Address Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCustomerAddressModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerAddressModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerAddressModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerAddressModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerAddressModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerAddress
    put:
      tags:
      - CompanyCustomerAddress
      summary: Update customer address
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: editCompanyCustomerAddress
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Customer Address Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyCustomerAddressAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/addresses_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/addresses_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/addresses_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/addresses_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCustomerAddressModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerAddressModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerAddressModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerAddressModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerAddressModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerAddress
    delete:
      tags:
      - CompanyCustomerAddress
      summary: Delete customer address
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: deleteCompanyCustomerAddress
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Address Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerAddress
  /v0.1/companies/{companyId}/customers/{customerId}/addresses:
    post:
      tags:
      - CompanyCustomerAddress
      summary: Add customer address
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: newCompanyCustomerAddress
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyCustomerAddressAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/customerId_addresses_body'
          application/json:
            schema:
              $ref: '#/components/schemas/customerId_addresses_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/customerId_addresses_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/customerId_addresses_body_3'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCustomerAddressModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerAddressModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerAddressModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerAddressModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerAddressModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerAddress
  /v0.1/companies/{companyId}/customers/{customerId}/contacts/{id}:
    get:
      tags:
      - CompanyCustomerContact
      summary: Get customer contact by id
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: contact
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Contact Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCustomerContactModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerContactModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerContactModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerContactModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerContactModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerContact
    put:
      tags:
      - CompanyCustomerContact
      summary: Update customer contact
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: editCompanyCustomerContact
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Contact Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyCustomerContactAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/contacts_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/contacts_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/contacts_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/contacts_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCustomerContactModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerContactModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerContactModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerContactModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerContactModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerContact
    delete:
      tags:
      - CompanyCustomerContact
      summary: Delete customer contact
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: deleteCompanyCustomerContact
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Contact Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerContact
  /v0.1/companies/{companyId}/customers/{customerId}/contacts:
    get:
      tags:
      - CompanyCustomerContacts
      summary: Get customer contact list
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: contacts
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerContactModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerContactModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerContactModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerContactModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerContactModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerContacts
    post:
      tags:
      - CompanyCustomerContact
      summary: Add customer contact
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: newCompanyCustomerContact
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyCustomerContactAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/customerId_contacts_body'
          application/json:
            schema:
              $ref: '#/components/schemas/customerId_contacts_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/customerId_contacts_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/customerId_contacts_body_3'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCustomerContactModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerContactModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerContactModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerContactModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerContactModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerContact
  /v0.1/companies/{companyId}/customers/{customerId}/contacts/{contactId}/tags:
    post:
      tags:
      - CompanyCustomerContactTags
      summary: Edit Tags for CustomerContact
      description: "Note:\r\n\r\n    Posted tags will replace any existing tags for\
        \ the contact.\r\n    A new tag will be created if the Id for a tag is not\
        \ provided.\r\n            \r\nSample request:\r\n\r\n    POST /v0.1/companies/1/customers/19870/contacts/5360/tags\r\
        \n    [\r\n        {\r\n            \"name\": \"tag-name\",\r\n          \
        \  \"id\": 2\r\n        },\r\n        {\r\n            \"name\": \"tag-test\"\
        ,\r\n            \"id\": 1\r\n        },\r\n    ]"
      operationId: editCustomerContactTags
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: contactId
        in: path
        description: CustomerContact Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyTagModel
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyTagModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyTagModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyTagModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyTagModel'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyTagModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyTagModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyTagModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyTagModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyTagModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerContactTags
  /v0.1/companies/{companyId}/customers/{customerId}/events/{id}:
    get:
      tags:
      - CompanyCustomerEvent
      summary: Get customer event by id
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: companyCustomerEvent
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerEventModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEventModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerEventModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerEvent
  /v0.1/companies/{companyId}/customers/{customerId}/events:
    get:
      tags:
      - CompanyCustomerEvents
      summary: Get customer events list
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: companyCustomerEvents
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerEvents
  /v0.1/companies/{companyId}/customers/{customerId}/events/meetings/{id}:
    get:
      tags:
      - CompanyCustomerEventsMeeting
      summary: Get customer event meeting by id
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: companyCustomerEventMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerEventMeetingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEventMeetingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerEventMeetingModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventMeetingModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventMeetingModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerEventsMeeting
    put:
      tags:
      - CompanyCustomerEventsMeeting
      summary: Update customer event meeting
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: updateMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: CustomerEventMeetingAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_4'
          application/json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_5'
          text/json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_6'
          application/*+json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_7'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerEventMeetingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEventMeetingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerEventMeetingModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventMeetingModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventMeetingModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerEventsMeeting
    delete:
      tags:
      - CompanyCustomerEventsMeeting
      summary: Delete customer event meeting
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: deleteMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerEventsMeeting
  /v0.1/companies/{companyId}/customers/{customerId}/events/meetings:
    get:
      tags:
      - CompanyCustomerEventsMeetings
      summary: Get customer event meetings list
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: companyCustomerEventMeetings
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerEventsMeetings
    post:
      tags:
      - CompanyCustomerEventsMeeting
      summary: Add customer event meeting
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: newMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CustomerEventMeetingAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_4'
          application/json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_5'
          text/json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_6'
          application/*+json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_7'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerEventMeetingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEventMeetingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerEventMeetingModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventMeetingModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventMeetingModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerEventsMeeting
  /v0.1/companies/{companyId}/customers/{customerId}/events/notes/{id}:
    get:
      tags:
      - CompanyCustomerEventsNote
      summary: Get customer event note by id
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: companyCustomerEventNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerEventsNote
    put:
      tags:
      - CompanyCustomerEventsNote
      summary: Update customer event note
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: updateNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: CustomerEventMeetingAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/notes_id_body_4'
          application/json:
            schema:
              $ref: '#/components/schemas/notes_id_body_5'
          text/json:
            schema:
              $ref: '#/components/schemas/notes_id_body_6'
          application/*+json:
            schema:
              $ref: '#/components/schemas/notes_id_body_7'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerEventsNote
    delete:
      tags:
      - CompanyCustomerEventsNote
      summary: Delete customer event note
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: deleteNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerEventsNote
  /v0.1/companies/{companyId}/customers/{customerId}/events/notes:
    get:
      tags:
      - CompanyCustomerEventsNotes
      summary: Get customer event notes list
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: companyCustomerEventNotes
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerEventsNotes
    post:
      tags:
      - CompanyCustomerEventsNote
      summary: Add customer event note
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: newNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CustomerEventNoteAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/events_notes_body_4'
          application/json:
            schema:
              $ref: '#/components/schemas/events_notes_body_5'
          text/json:
            schema:
              $ref: '#/components/schemas/events_notes_body_6'
          application/*+json:
            schema:
              $ref: '#/components/schemas/events_notes_body_7'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerEventsNote
  /v0.1/companies/{companyId}/customers/{customerId}/events/tasks/{id}:
    get:
      tags:
      - CompanyCustomerEventsTask
      summary: Get customer event task by id
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: companyCustomerEventTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerEventTaskModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEventTaskModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerEventTaskModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventTaskModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventTaskModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerEventsTask
    put:
      tags:
      - CompanyCustomerEventsTask
      summary: Update customer event task
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: updateTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: CustomerEventTaskAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_4'
          application/json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_5'
          text/json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_6'
          application/*+json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_7'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerEventTaskModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEventTaskModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerEventTaskModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventTaskModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventTaskModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerEventsTask
    delete:
      tags:
      - CompanyCustomerEventsTask
      summary: Delete customer event task
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: deleteTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerEventsTask
  /v0.1/companies/{companyId}/customers/{customerId}/events/tasks:
    get:
      tags:
      - CompanyCustomerEventsTasks
      summary: Get customer event tasks list
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: companyCustomerEventTasks
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerEventsTasks
    post:
      tags:
      - CompanyCustomerEventsTask
      summary: Add customer event task
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: newTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CustomerEventTaskAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_4'
          application/json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_5'
          text/json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_6'
          application/*+json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_7'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerEventTaskModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEventTaskModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerEventTaskModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventTaskModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventTaskModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerEventsTask
  /v0.1/companies/{companyId}/customers/{id}/attachments/{attachmentId}:
    get:
      tags:
      - CompanyCustomerFileAttachment
      summary: Get customer file attachment by Id
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: getCustomerAttachment
      parameters:
      - name: id
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: attachmentId
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: string
                format: byte
                x-content-type: text/plain
            application/json:
              schema:
                type: string
                format: byte
            text/json:
              schema:
                type: string
                format: byte
            application/xml:
              schema:
                type: string
                format: byte
            text/xml:
              schema:
                type: string
                format: byte
        "400":
          description: Incorrect request
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerFileAttachment
  /v0.1/companies/{companyId}/customers/{customerId}/managers:
    get:
      tags:
      - CompanyCustomerManagers
      summary: Get customer managers
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: companyCustomerManagers
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerManagerModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerManagerModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerManagerModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerManagerModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerManagerModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerManagers
    post:
      tags:
      - CompanyCustomerManagers
      summary: Add customer responsible
      description: "Sample request:\r\n\r\n    POST /v0.1/companies/1/customers/22228/managers\r\
        \n    {\r\n        [\r\n           51096\r\n        ]         \r\n    }"
      operationId: addCompanyCustomerResponsible
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyCustomerManagersAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/customerId_managers_body'
          application/json:
            schema:
              $ref: '#/components/schemas/customerId_managers_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/customerId_managers_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/customerId_managers_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerManagerModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerManagerModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerManagerModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerManagerModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerManagerModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerManagers
  /v0.1/companies/{companyId}/customers/{customerId}/managers/{id}:
    delete:
      tags:
      - CompanyCustomerManagers
      summary: Remove customer responsible
      description: "Sample request:\r\n            \r\n    DELETE /v0.1/companies/1/customers/22228/managers/54632"
      operationId: removeCustomerManager
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerManagers
  /v0.1/companies/{companyId}/customers/extended:
    get:
      tags:
      - CompanyCustomersExtended
      summary: Get extended company customers list
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: customersExtended
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerExtendedModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerExtendedModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerExtendedModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerExtendedModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyCustomerExtendedModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomersExtended
  /v0.1/companies/{companyId}/customers/{customerId}/tags:
    post:
      tags:
      - CompanyCustomerTags
      summary: Edit Tags for Customer
      description: "Note:\r\n\r\n    Posted tags will replace any existing tags for\
        \ the customer.\r\n    A new tag will be created if the Id for a tag is not\
        \ provided.\r\n            \r\nSample request:\r\n\r\n    POST /v0.1/companies/1/customers/19870/tags\r\
        \n    [\r\n        {\r\n            \"name\": \"tag-name\",\r\n          \
        \  \"id\": 2\r\n        },\r\n        {\r\n            \"name\": \"tag-test\"\
        ,\r\n            \"id\": 1\r\n        },\r\n    ]"
      operationId: editCustomerTags
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: customerId
        in: path
        description: Customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyTagModel
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyTagModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyTagModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyTagModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyTagModel'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyCustomerModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyCustomerTags
  /v0.1/companies/{companyId}/images/{id}:
    get:
      tags:
      - CompanyImage
      summary: Get Company Image by Id
      operationId: companyImage
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Image id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyImageModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyImageModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyImageModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyImageModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyImageModel'
        "400":
          description: Incorrect request
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyImage
  /v0.1/companies/{companyId}/images/{id}/{imageFileName}:
    get:
      tags:
      - CompanyImage
      summary: Download Company Image
      operationId: companyImageDownload
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Image id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: imageFileName
        in: path
        description: Image File Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: string
                format: byte
                x-content-type: text/plain
            application/json:
              schema:
                type: string
                format: byte
            text/json:
              schema:
                type: string
                format: byte
            application/xml:
              schema:
                type: string
                format: byte
            text/xml:
              schema:
                type: string
                format: byte
        "400":
          description: Incorrect request
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyImage
  /v0.1/companies/{companyId}/users/{id}/images:
    get:
      tags:
      - CompanyImages
      summary: Get Company Images Assigned to User
      operationId: companyImages
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyImageModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyImageModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyImageModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyImageModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyImageModel'
        "400":
          description: Incorrect request
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyImages
    post:
      tags:
      - CompanyImages
      summary: Add Image to User
      operationId: addCompanyImage
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/id_images_body'
            encoding:
              File:
                style: form
              SetAsPrimary:
                style: form
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyImageModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyImageModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyImageModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyImageModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyImageModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyImages
  /v0.1/companies/{companyId}/managers:
    get:
      tags:
      - CompanyManagers
      summary: Get company managers
      description: "Sample request:\r\n\r\n    GET /v0.1/companies/1/managers"
      operationId: companyManagers
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyManagers
  /v0.1/companies/{companyId}/profiles:
    post:
      tags:
      - CompanyProfiles
      summary: Get profiles list
      description: "Sample request:\r\n\r\n    POST /v0.1/companies/1/profiles\r\n\
        \    {\r\n        \"createdOffsetDays\": 90,\r\n        \"updatedOffsetDays\"\
        : 30,\r\n        \"pageAndSortBy\": {             \r\n            \"page\"\
        : 1,\r\n            \"itemsPerPage\": 15,\r\n            \"order\": 0,\r\n\
        \            \"sortBy\": 1\r\n        }\r\n    }"
      operationId: companyProfiles
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Company Profile Filter
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/companyId_profiles_body'
          application/json:
            schema:
              $ref: '#/components/schemas/companyId_profiles_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/companyId_profiles_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/companyId_profiles_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyProfilesModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyProfilesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyProfilesModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyProfilesModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyProfilesModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyProfiles
  /v0.1/companies/{companyId}/projects/{id}/attachments/{attachmentId}:
    get:
      tags:
      - CompanyProjectFileAttachment
      summary: Get Project file attachment by Id
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: getProjectAttachment
      parameters:
      - name: id
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: attachmentId
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: string
                format: byte
                x-content-type: text/plain
            application/json:
              schema:
                type: string
                format: byte
            text/json:
              schema:
                type: string
                format: byte
            application/xml:
              schema:
                type: string
                format: byte
            text/xml:
              schema:
                type: string
                format: byte
        "400":
          description: Incorrect request
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyProjectFileAttachment
  /v0.1/companies/{companyId}/recruitment/managers:
    get:
      tags:
      - CompanyRecruitmentManagers
      summary: Get recruitment managers
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: recruitmentManagers
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyRecruitmentManagerModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyRecruitmentManagerModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyRecruitmentManagerModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyRecruitmentManagerModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyRecruitmentManagerModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyRecruitmentManagers
  /v0.1/companies/{companyId}/resumes:
    get:
      tags:
      - CompanyResumes
      summary: Get resumes list
      description: "Requires module: CompanyUserResume. "
      operationId: companyResumes
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserResumeBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserResumeBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserResumeBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserResumeBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserResumeBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyResumes
  /v0.1/companies/{companyId}/subcontractors/groups/{id}:
    get:
      tags:
      - CompanySubcontractorGroup
      summary: Get Subcontractor Group by Id
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: companySubcontractorGroup
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Subcontractor Group Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanySubcontractorGroupModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanySubcontractorGroupModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanySubcontractorGroupModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanySubcontractorGroupModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanySubcontractorGroupModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanySubcontractorGroup
  /v0.1/companies/{companyId}/tags/{id}:
    get:
      tags:
      - CompanyTag
      summary: Get company tag by Id
      description: "Sample request:\r\n            \r\n    GET /v0.1/companies/1/tags/1"
      operationId: companyTag
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Tag Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyTagModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyTagModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyTagModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyTagModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyTagModel'
        "201":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyTag
  /v0.1/companies/{companyId}/tags:
    get:
      tags:
      - CompanyTags
      summary: Get company tags
      description: "Sample request:\r\n\r\n    GET /v0.1/companies/1/tags"
      operationId: companyTags
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyTagBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyTagBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyTagBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyTagBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyTagBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyTags
  /v0.1/companies/{companyId}/teams/{id}:
    get:
      tags:
      - CompanyTeam
      summary: Get team by id
      operationId: team
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TeamModel'
            application/json:
              schema:
                $ref: '#/components/schemas/TeamModel'
            text/json:
              schema:
                $ref: '#/components/schemas/TeamModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/TeamModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/TeamModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyTeam
    put:
      tags:
      - CompanyTeam
      summary: Update team
      description: "Requires access level: CompanyAdmin. "
      operationId: updateTeam
      parameters:
      - name: id
        in: path
        description: Team Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: TeamAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/teams_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/teams_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/teams_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/teams_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TeamModel'
            application/json:
              schema:
                $ref: '#/components/schemas/TeamModel'
            text/json:
              schema:
                $ref: '#/components/schemas/TeamModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/TeamModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/TeamModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyTeam
  /v0.1/companies/{companyId}/teams:
    get:
      tags:
      - CompanyTeams
      summary: Get teams list
      operationId: companyTeams
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Not Found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyTeams
    post:
      tags:
      - CompanyTeam
      summary: Add team
      description: "Requires access level: CompanyAdmin. "
      operationId: newTeam
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: TeamAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/companyId_teams_body'
          application/json:
            schema:
              $ref: '#/components/schemas/companyId_teams_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/companyId_teams_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/companyId_teams_body_3'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TeamModel'
            application/json:
              schema:
                $ref: '#/components/schemas/TeamModel'
            text/json:
              schema:
                $ref: '#/components/schemas/TeamModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/TeamModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/TeamModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyTeam
  /v0.1/companies/{companyId}/teams/{teamId}/managers:
    get:
      tags:
      - CompanyTeamManagers
      summary: Get team managers
      operationId: teamManagers
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: teamId
        in: path
        description: Team Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyTeamManagers
    post:
      tags:
      - CompanyTeamManagers
      summary: Add team manager
      description: "Sample request:\r\n            \r\n    POST /v0.1/companies/1/teams/1234/managers\r\
        \n    {\r\n        \"teamId\" : 1234,\r\n        \"companyUserId\" : 54632\r\
        \n    }"
      operationId: addTeamManager
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: teamId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: TeamMemberEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/teamId_managers_body'
          application/json:
            schema:
              $ref: '#/components/schemas/teamId_managers_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/teamId_managers_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/teamId_managers_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamManagerModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamManagerModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamManagerModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamManagerModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamManagerModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyTeamManagers
  /v0.1/companies/{companyId}/teams/{teamId}/managers/{id}:
    delete:
      tags:
      - CompanyTeamManagers
      summary: Remove team manager
      description: "Sample request:\r\n            \r\n    DELETE /v0.1/companies/1/teams/1234/managers/54632"
      operationId: removeTeamManager
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: teamId
        in: path
        description: Team Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyTeamManagers
  /v0.1/companies/{companyId}/teams/{teamId}/members:
    get:
      tags:
      - CompanyTeamMembers
      summary: Get team members
      operationId: getTeamMembers
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: teamId
        in: path
        description: Team Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMemberModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMemberModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMemberModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMemberModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMemberModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyTeamMembers
    post:
      tags:
      - CompanyTeamMembers
      summary: Add team member
      description: "Requires access level: CompanyAdmin. "
      operationId: addTeamMember
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: teamId
        in: path
        description: Team Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: TeamMemberAddModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/teamId_members_body'
          application/json:
            schema:
              $ref: '#/components/schemas/teamId_members_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/teamId_members_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/teamId_members_body_3'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TeamMemberModel'
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberModel'
            text/json:
              schema:
                $ref: '#/components/schemas/TeamMemberModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/TeamMemberModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/TeamMemberModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyTeamMembers
  /v0.1/companies/{companyId}/teams/{teamId}/members/{id}:
    get:
      tags:
      - CompanyTeamMembers
      summary: Get team member
      operationId: getTeamMember
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: teamId
        in: path
        description: Team Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: User id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TeamMemberModel'
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberModel'
            text/json:
              schema:
                $ref: '#/components/schemas/TeamMemberModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/TeamMemberModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/TeamMemberModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyTeamMembers
    put:
      tags:
      - CompanyTeamMembers
      summary: Update team member
      description: "Requires access level: CompanyAdmin. "
      operationId: updateTeamMember
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: teamId
        in: path
        description: Team Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: User id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: TeamMemberAddModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/members_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/members_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/members_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/members_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TeamMemberModel'
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberModel'
            text/json:
              schema:
                $ref: '#/components/schemas/TeamMemberModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/TeamMemberModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/TeamMemberModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyTeamMembers
    delete:
      tags:
      - CompanyTeamMembers
      summary: Remove team member
      description: "Requires access level: CompanyAdmin. "
      operationId: removeTeamMember
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: teamId
        in: path
        description: Team Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyTeamMembers
  /v0.1/companies/{companyId}/teams/{teamId}/users:
    get:
      tags:
      - CompanyTeamUsers
      summary: Get team members
      operationId: getTeamUsers
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: teamId
        in: path
        description: Team Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      deprecated: true
      x-swagger-router-controller: CompanyTeamUsers
    post:
      tags:
      - CompanyTeamUsers
      summary: Add team member
      description: "Requires access level: CompanyAdmin. "
      operationId: addTeamUser
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: teamId
        in: path
        description: Team Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: TeamMemberAddModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/teamId_users_body'
          application/json:
            schema:
              $ref: '#/components/schemas/teamId_users_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/teamId_users_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/teamId_users_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMemberModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMemberModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMemberModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMemberModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMemberModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      deprecated: true
      x-swagger-router-controller: CompanyTeamUsers
  /v0.1/companies/{companyId}/teams/{teamId}/users/{id}:
    delete:
      tags:
      - CompanyTeamUsers
      summary: Remove team member
      description: "Requires access level: CompanyAdmin. "
      operationId: removeTeamUser
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: teamId
        in: path
        description: Team Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      deprecated: true
      x-swagger-router-controller: CompanyTeamUsers
  /v0.1/companies/{companyId}/users/{id}:
    get:
      tags:
      - CompanyUser
      summary: Get company user by id
      operationId: user
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUser
    put:
      tags:
      - CompanyUser
      summary: Update company user
      description: "Requires access level: CompanyAdmin. "
      operationId: updateCompanyUser
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/users_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/users_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/users_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/users_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUser
    delete:
      tags:
      - CompanyUser
      summary: "Delete user from the system\r\nFirstly, the user has to be disconnected,\
        \ which can be done through a PATCH or PUT\r\nThis action is irreversible,\
        \ use with caution"
      description: "Requires access level: CompanyAdmin. "
      operationId: deleteCompanyUser
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: firstName
        in: query
        description: CompanyUser FirstName
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: lastName
        in: query
        description: CompanyUser LastName
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUser
    patch:
      tags:
      - CompanyUser
      summary: Patch company user
      description: "Requires access level: CompanyAdmin. "
      operationId: patchCompanyUser
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: "Only certain properties on the user are patchable. See the generated\
          \ example for a list of available properties, using the `op: \"replace\"\
          ` as example. See the generated schema for `ICompanyUserEmployeePatchDocument`\
          \ for full type information per property"
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
            example:
            - value: 0
              path: /status
              op: replace
            - value: 2023-01-25T08:43:04.2057833+01:00
              path: /employmentstartdate
              op: replace
            - value: 2023-01-25T08:43:04.2057852+01:00
              path: /employmentenddate
              op: replace
            - value: string
              path: /employmentnumber
              op: replace
            - value: 0
              path: /invoicinggoal
              op: replace
            - value: 0
              path: /mobility
              op: replace
            - value: 0
              path: /availabilitypercent
              op: replace
            - value: 2023-01-25T08:43:04.2057879+01:00
              path: /availablefromdate
              op: replace
            - value: string
              path: /title
              op: replace
            - value: string
              path: /email
              op: replace
            - value: string
              path: /taxtable
              op: replace
            - value: 0
              path: /basesalary
              op: replace
            - value: 0
              path: /provision
              op: replace
            - value: 0
              path: /hourlytargetrate
              op: replace
            - value: 0
              path: /selfcost
              op: replace
            - value: 0
              path: /locationid
              op: replace
            - value: 0
              path: /defaultcurrencyid
              op: replace
            - value: 0
              path: /displaycurrencyid
              op: replace
            - value: string
              path: /firstname
              op: replace
            - value: string
              path: /lastname
              op: replace
            - value: 2023-01-25T08:43:04.2057927+01:00
              path: /dateofbirth
              op: replace
            - value: 0
              path: /gender
              op: replace
            - value: 0
              path: /companycalendarid
              op: replace
            - value: string
              path: /timezoneid
              op: replace
            - value: string
              path: /phone
              op: replace
            - value: string
              path: /desiredassignment
              op: replace
            - value: string
              path: /internalidentifier
              op: replace
            - value: string
              path: /twitter
              op: replace
            - value: string
              path: /linkedin
              op: replace
            - value: string
              path: /homepage
              op: replace
            - value: string
              path: /blog
              op: replace
            - value: string
              path: /github
              op: replace
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUser
  /v0.1/companies/{companyId}/users:
    get:
      tags:
      - CompanyUsers
      summary: Get company users list
      operationId: companyUsers
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUsers
    post:
      tags:
      - CompanyUser
      summary: Add company user employee
      description: "Requires access level: CompanyAdmin. "
      operationId: addCompanyUser
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserAddModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/companyId_users_body'
          application/json:
            schema:
              $ref: '#/components/schemas/companyId_users_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/companyId_users_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/companyId_users_body_3'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUser
  /v0.1/companies/{companyId}/users/{companyUserId}/convert-aad:
    post:
      tags:
      - CompanyUserConvert
      summary: Convert company user employee to an AAD account
      description: "Requires access level: CompanyAdmin. "
      operationId: convertUserToAadAccount
      parameters:
      - name: companyUserId
        in: path
        description: Company User Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: ConvertCompanyUserToAadAccountModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/companyUserId_convertaad_body'
          application/json:
            schema:
              $ref: '#/components/schemas/companyUserId_convertaad_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/companyUserId_convertaad_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/companyUserId_convertaad_body_3'
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserConvert
  /v0.1/companies/{companyId}/employees/{companyUserId}/events/{id}:
    get:
      tags:
      - CompanyUserEmployeeEvent
      summary: Get employee event
      description: "Requires access level: CompanyManager. "
      operationId: companyUserEmployeeEvent
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserEmployeeEvent
  /v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings/{id}:
    get:
      tags:
      - CompanyUserEmployeeEventMeeting
      summary: Get employee meeting event
      description: "Requires access level: CompanyManager. "
      operationId: companyUserEmployeeEventMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserEmployeeEventMeeting
    put:
      tags:
      - CompanyUserEmployeeEventMeeting
      summary: Updates employee meeting event
      description: "Requires access level: CompanyManager. "
      operationId: updateCompanyUserEmployeeEventMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: Meeting event details
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_8'
          application/json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_9'
          text/json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_10'
          application/*+json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_11'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserEmployeeEventMeeting
    delete:
      tags:
      - CompanyUserEmployeeEventMeeting
      summary: Deletes meeting event
      description: "Requires access level: CompanyManager. "
      operationId: deleteCompanyUserEmployeeEventMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserEmployeeEventMeeting
  /v0.1/companies/{companyId}/employees/{companyUserId}/events/meetings:
    get:
      tags:
      - CompanyUserEmployeeEventsMeetings
      summary: Get employee meetings events list
      description: "Requires access level: CompanyManager. "
      operationId: companyUserEmployeeEventMeetingList
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserEmployeeEventsMeetings
    post:
      tags:
      - CompanyUserEmployeeEventMeeting
      summary: Creates new employee meeting event
      description: "Requires access level: CompanyManager. "
      operationId: newCompanyUserEmployeeEventMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Meeting event details
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_8'
          application/json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_9'
          text/json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_10'
          application/*+json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_11'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserEmployeeEventMeeting
  /v0.1/companies/{companyId}/employees/{companyUserId}/events/notes/{id}:
    get:
      tags:
      - CompanyUserEmployeeEventNote
      summary: Get employee note event
      description: "Requires access level: CompanyManager. "
      operationId: companyUserEmployeeEventNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserEmployeeEventNote
    put:
      tags:
      - CompanyUserEmployeeEventNote
      summary: Updates employee note event
      description: "Requires access level: CompanyManager. "
      operationId: updateCompanyUserEmployeeEventNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: Note event details
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/notes_id_body_8'
          application/json:
            schema:
              $ref: '#/components/schemas/notes_id_body_9'
          text/json:
            schema:
              $ref: '#/components/schemas/notes_id_body_10'
          application/*+json:
            schema:
              $ref: '#/components/schemas/notes_id_body_11'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserEmployeeEventNote
    delete:
      tags:
      - CompanyUserEmployeeEventNote
      summary: Deletes meeting event
      description: "Requires access level: CompanyManager. "
      operationId: deleteCompanyUserEmployeeEventNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserEmployeeEventNote
  /v0.1/companies/{companyId}/employees/{companyUserId}/events/notes:
    get:
      tags:
      - CompanyUserEmployeeEventsNotes
      summary: Get employee notes events list
      description: "Requires access level: CompanyManager. "
      operationId: companyUserEmployeeEventNoteList
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserEmployeeEventsNotes
    post:
      tags:
      - CompanyUserEmployeeEventNote
      summary: Creates new employee note event
      description: "Requires access level: CompanyManager. "
      operationId: newCompanyUserEmployeeEventNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Note event details
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/events_notes_body_8'
          application/json:
            schema:
              $ref: '#/components/schemas/events_notes_body_9'
          text/json:
            schema:
              $ref: '#/components/schemas/events_notes_body_10'
          application/*+json:
            schema:
              $ref: '#/components/schemas/events_notes_body_11'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserEmployeeEventNote
  /v0.1/companies/{companyId}/employees/{companyUserId}/events:
    get:
      tags:
      - CompanyUserEmployeeEvents
      summary: Get employee events list
      description: "Requires access level: CompanyManager. "
      operationId: companyUserEmployeeEvents
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserEmployeeEvents
  /v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks:
    get:
      tags:
      - CompanyUserEmployeeEventsTasks
      summary: Get employee tasks events list
      description: "Requires access level: CompanyManager. "
      operationId: companyUserEmployeeEventTaskList
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserEmployeeEventsTasks
    post:
      tags:
      - CompanyUserEmployeeEventTask
      summary: Creates new employee task event
      description: "Requires access level: CompanyManager. "
      operationId: newCompanyUserEmployeeEventTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Task event details
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_8'
          application/json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_9'
          text/json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_10'
          application/*+json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_11'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserEmployeeEventTask
  /v0.1/companies/{companyId}/employees/{companyUserId}/events/tasks/{id}:
    get:
      tags:
      - CompanyUserEmployeeEventTask
      summary: Get employee task event
      description: "Requires access level: CompanyManager. "
      operationId: companyUserEmployeeEventTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserEmployeeEventTask
    put:
      tags:
      - CompanyUserEmployeeEventTask
      summary: Updates employee's task event
      description: "Requires access level: CompanyManager. "
      operationId: updateCompanyUserEmployeeEventTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: Task event details
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_8'
          application/json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_9'
          text/json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_10'
          application/*+json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_11'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserEmployeeEventTask
    delete:
      tags:
      - CompanyUserEmployeeEventTask
      summary: Deletes meeting event
      description: "Requires access level: CompanyManager. "
      operationId: deleteCompanyUserEmployeeEventTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserEmployeeEventTask
  /v0.1/companies/{companyId}/users-full/{id}:
    get:
      tags:
      - CompanyUserFull
      summary: "Get company user, including financial fields, by id"
      description: "Requires access level: CompanyAdmin. "
      operationId: userFull
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserFullModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserFull
  /v0.1/companies/{companyId}/users/{companyUserId}/permissions:
    put:
      tags:
      - CompanyUserPermissions
      summary: Update Permissions for Company User
      description: "Requires access level: CompanyAdmin. "
      operationId: updatePermissions
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserPermissionsEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/companyUserId_permissions_body'
          application/json:
            schema:
              $ref: '#/components/schemas/companyUserId_permissions_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/companyUserId_permissions_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/companyUserId_permissions_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserPermissions
  /v0.1/companies/{companyId}/users/{companyUserId}/profile:
    get:
      tags:
      - CompanyUserProfile
      summary: Get profile by company user id
      operationId: companyUserProfile
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileFullModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileFullModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileFullModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileFullModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileFullModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfile
    post:
      tags:
      - CompanyUserProfile
      summary: Create Profile for user
      operationId: newCompanyUserProfile
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileCommitmentAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/companyUserId_profile_body'
          application/json:
            schema:
              $ref: '#/components/schemas/companyUserId_profile_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/companyUserId_profile_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/companyUserId_profile_body_3'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileBaseModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileBaseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileBaseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileBaseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfile
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/commitments/{id}:
    get:
      tags:
      - CompanyUserProfileCommitment
      summary: Get profile commitment by id
      operationId: companyUserProfileCommitment
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ProfileCommitment Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileCommitmentModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileCommitmentModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileCommitmentModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileCommitmentModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileCommitmentModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileCommitment
    put:
      tags:
      - CompanyUserProfileCommitment
      summary: Update Profile Commitment
      operationId: updateCompanyUserProfileCommitment
      parameters:
      - name: id
        in: path
        description: Profile Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileCommitmentAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/commitments_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/commitments_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/commitments_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/commitments_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileCommitmentModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileCommitmentModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileCommitmentModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileCommitmentModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileCommitmentModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileCommitment
    delete:
      tags:
      - CompanyUserProfileCommitment
      summary: Delete Commitment
      operationId: deleteCompanyUserProfileCommitment
      parameters:
      - name: id
        in: path
        description: Profile Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: Company User Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileCommitment
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/commitments:
    post:
      tags:
      - CompanyUserProfileCommitment
      summary: Create Profile Commitment
      operationId: newCompanyUserProfileCommitment
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileCommitmentAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/profile_commitments_body'
          application/json:
            schema:
              $ref: '#/components/schemas/profile_commitments_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/profile_commitments_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/profile_commitments_body_3'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileCommitmentModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileCommitmentModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileCommitmentModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileCommitmentModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileCommitmentModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileCommitment
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/educations/{id}:
    get:
      tags:
      - CompanyUserProfileEducation
      summary: Get profile education by id
      operationId: companyUserProfileEducation
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ProfileEducation Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEducationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEducationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEducationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEducationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEducationModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileEducation
    put:
      tags:
      - CompanyUserProfileEducation
      summary: Update Profile Education
      operationId: updateCompanyUserProfileEducation
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileEducationAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/educations_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/educations_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/educations_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/educations_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEducationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEducationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEducationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEducationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEducationModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileEducation
    delete:
      tags:
      - CompanyUserProfileEducation
      summary: Delete Profile Education
      operationId: deleteCompanyUserProfileEducation
      parameters:
      - name: id
        in: path
        description: Profile Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: Company User Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileEducation
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/educations:
    post:
      tags:
      - CompanyUserProfileEducation
      summary: Create Profile Education
      operationId: newCompanyUserProfileEducation
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileEducationAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/profile_educations_body'
          application/json:
            schema:
              $ref: '#/components/schemas/profile_educations_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/profile_educations_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/profile_educations_body_3'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEducationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEducationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEducationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEducationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEducationModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileEducation
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/employers/{id}:
    get:
      tags:
      - CompanyUserProfileEmployer
      summary: Get profile employer by id
      operationId: companyUserProfileEmployer
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ProfileEmployer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEmployerModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEmployerModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEmployerModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEmployerModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEmployerModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileEmployer
    put:
      tags:
      - CompanyUserProfileEmployer
      summary: Update Profile Employer
      operationId: updateCompanyUserProfileEmployer
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileEmployerAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/employers_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/employers_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/employers_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/employers_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEmployerModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEmployerModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEmployerModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEmployerModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEmployerModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileEmployer
    delete:
      tags:
      - CompanyUserProfileEmployer
      summary: Delete Profile Employer
      operationId: deleteCompanyUserProfileEmployer
      parameters:
      - name: id
        in: path
        description: Profile Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: Company User Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileEmployer
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/employers:
    post:
      tags:
      - CompanyUserProfileEmployer
      summary: Create Employer profile item
      operationId: newCompanyUserProfileEmployer
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileEmployerAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/profile_employers_body'
          application/json:
            schema:
              $ref: '#/components/schemas/profile_employers_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/profile_employers_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/profile_employers_body_3'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEmployerModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEmployerModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEmployerModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEmployerModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileEmployerModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileEmployer
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/extskills/{id}:
    get:
      tags:
      - CompanyUserProfileExtSkill
      summary: Get profile external skill by id
      operationId: companyUserProfileExtSkill
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ProfileExtSkill Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileExtSkillModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileExtSkillModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileExtSkillModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileExtSkillModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileExtSkillModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileExtSkill
    put:
      tags:
      - CompanyUserProfileExtSkill
      summary: Update Extra Skill Profile Item
      operationId: updateCompanyUserProfileExtSkill
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileExtraSkillAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/extskills_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/extskills_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/extskills_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/extskills_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileExtSkillModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileExtSkillModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileExtSkillModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileExtSkillModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileExtSkillModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileExtSkill
    delete:
      tags:
      - CompanyUserProfileExtSkill
      summary: Delete Extra Skill Profile Item
      operationId: deleteCompanyUserProfileExtSkill
      parameters:
      - name: id
        in: path
        description: Profile Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: Company User Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileExtSkill
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/extskills:
    post:
      tags:
      - CompanyUserProfileExtSkill
      summary: Create Extra Skill Profile Item
      operationId: newCompanyUserProfileExtSkill
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileExtSkillAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/profile_extskills_body'
          application/json:
            schema:
              $ref: '#/components/schemas/profile_extskills_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/profile_extskills_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/profile_extskills_body_3'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileExtSkillModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileExtSkillModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileExtSkillModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileExtSkillModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileExtSkillModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileExtSkill
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/languages/{id}:
    get:
      tags:
      - CompanyUserProfileLanguage
      summary: Get profile language by id
      operationId: companyUserProfileLanguage
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ProfileLanguage Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileLanguageModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileLanguageModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileLanguageModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileLanguageModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileLanguageModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileLanguage
    put:
      tags:
      - CompanyUserProfileLanguage
      summary: Update Language Profile Item
      operationId: updateCompanyUserProfileLanguage
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileExtraSkillAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/languages_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/languages_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/languages_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/languages_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileLanguageModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileLanguageModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileLanguageModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileLanguageModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileLanguageModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileLanguage
    delete:
      tags:
      - CompanyUserProfileLanguage
      summary: Delete Language Profile Item
      operationId: deleteCompanyUserProfileLanguage
      parameters:
      - name: id
        in: path
        description: Profile Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: Company User Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileLanguage
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/languages:
    post:
      tags:
      - CompanyUserProfileLanguage
      summary: Create Language Profile Item
      operationId: newCompanyUserProfileLanguage
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileLanguageAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/profile_languages_body'
          application/json:
            schema:
              $ref: '#/components/schemas/profile_languages_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/profile_languages_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/profile_languages_body_3'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileLanguageModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileLanguageModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileLanguageModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileLanguageModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileLanguageModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileLanguage
  /v0.1/languages:
    get:
      tags:
      - CompanyUserProfileLanguages
      summary: Get Available Profile Languages
      operationId: profileLanguages
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileLanguageModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileLanguageModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileLanguageModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileLanguageModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileLanguageModel'
        "400":
          description: Incorrect request
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileLanguages
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/presentation:
    get:
      tags:
      - CompanyUserProfilePresentation
      summary: Get profile presentation
      operationId: companyUserProfilePresentation
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfilePresentationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfilePresentationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfilePresentationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfilePresentationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfilePresentationModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfilePresentation
    put:
      tags:
      - CompanyUserProfilePresentation
      summary: Edit Profile Presentation
      operationId: updateCompanyUserProfilePresentation
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfilePresentationEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/profile_presentation_body'
          application/json:
            schema:
              $ref: '#/components/schemas/profile_presentation_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/profile_presentation_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/profile_presentation_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfilePresentationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfilePresentationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfilePresentationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfilePresentationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfilePresentationModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfilePresentation
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/references/{id}:
    get:
      tags:
      - CompanyUserProfileReference
      summary: Get profile reference by id
      operationId: companyUserProfileReference
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ProfileReference Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileReferenceModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileReferenceModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileReferenceModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileReferenceModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileReferenceModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileReference
    put:
      tags:
      - CompanyUserProfileReference
      summary: Update Profile Reference Item
      operationId: updateCompanyUserProfileReference
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileReferenceAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/references_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/references_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/references_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/references_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileReferenceModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileReferenceModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileReferenceModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileReferenceModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileReferenceModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileReference
    delete:
      tags:
      - CompanyUserProfileReference
      summary: Delete Profile Reference Item
      operationId: deleteCompanyUserProfileReference
      parameters:
      - name: id
        in: path
        description: Profile Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: Company User Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileReference
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/references:
    post:
      tags:
      - CompanyUserProfileReference
      summary: Create Profile Reference Item
      operationId: newCompanyUserProfileReference
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileReferenceAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/profile_references_body'
          application/json:
            schema:
              $ref: '#/components/schemas/profile_references_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/profile_references_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/profile_references_body_3'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileReferenceModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileReferenceModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileReferenceModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileReferenceModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileReferenceModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileReference
  /v0.1/companies/{companyId}/users/{companyUserId}/profiles:
    get:
      tags:
      - CompanyUserProfiles
      summary: Get profiles list
      operationId: companyUserProfiles
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserProfileBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserProfileBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserProfileBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserProfileBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserProfileBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfiles
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/skills/{id}:
    get:
      tags:
      - CompanyUserProfileSkill
      summary: Get profile skill by id
      operationId: companyUserProfileSkill
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ProfileSkill Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileSkillModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileSkillModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileSkillModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileSkillModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileSkillModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileSkill
    put:
      tags:
      - CompanyUserProfileSkill
      summary: Update Profile Skill
      operationId: updateCompanyUserProfileSkill
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileSkillEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/skills_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/skills_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/skills_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/skills_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileSkillModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileSkillModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileSkillModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileSkillModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileSkillModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileSkill
    delete:
      tags:
      - CompanyUserProfileSkill
      summary: Delete Profile Skill
      operationId: deleteCompanyUserProfileSkill
      parameters:
      - name: id
        in: path
        description: Profile Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: Company User Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileSkill
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/skills:
    post:
      tags:
      - CompanyUserProfileSkill
      summary: Add Skill to profile
      operationId: newCompanyUserProfileSkill
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileSkillAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/profile_skills_body'
          application/json:
            schema:
              $ref: '#/components/schemas/profile_skills_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/profile_skills_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/profile_skills_body_3'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileSkillModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileSkillModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileSkillModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileSkillModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileSkillModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileSkill
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/trainings/{id}:
    get:
      tags:
      - CompanyUserProfileTraining
      summary: Get profile training by id
      operationId: companyUserProfileTraining
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ProfileTraining Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileTrainingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileTrainingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileTrainingModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileTrainingModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileTrainingModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileTraining
    put:
      tags:
      - CompanyUserProfileTraining
      summary: Update Profile Training Item
      operationId: updateCompanyUserProfileTraining
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileTrainingAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/trainings_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/trainings_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/trainings_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/trainings_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileTrainingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileTrainingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileTrainingModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileTrainingModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileTrainingModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileTraining
    delete:
      tags:
      - CompanyUserProfileTraining
      summary: Delete Profile Training Item
      operationId: deleteCompanyUserProfileTraining
      parameters:
      - name: id
        in: path
        description: Profile Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: Company User Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileTraining
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/trainings:
    post:
      tags:
      - CompanyUserProfileTraining
      summary: Create Profile Training Item
      operationId: newCompanyUserProfileTraining
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileTrainingAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/profile_trainings_body'
          application/json:
            schema:
              $ref: '#/components/schemas/profile_trainings_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/profile_trainings_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/profile_trainings_body_3'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileTrainingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileTrainingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileTrainingModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileTrainingModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileTrainingModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileTraining
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/workexperiences/{id}:
    get:
      tags:
      - CompanyUserProfileWorkExperience
      summary: Get profile work experience by id
      operationId: companyUserProfileWorkExperience
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ProfileWorkExperience Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileWorkExperienceModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileWorkExperienceModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileWorkExperienceModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileWorkExperienceModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileWorkExperienceModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileWorkExperience
    put:
      tags:
      - CompanyUserProfileWorkExperience
      summary: Update Profile Work Experience
      operationId: updateCompanyUserProfileWorkExperience
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserProfileWorkExperienceAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/workexperiences_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/workexperiences_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/workexperiences_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/workexperiences_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileWorkExperienceModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileWorkExperienceModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileWorkExperienceModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileWorkExperienceModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileWorkExperienceModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileWorkExperience
    delete:
      tags:
      - CompanyUserProfileWorkExperience
      summary: Delete Profile Work Experience Item
      operationId: deleteCompanyUserProfileWorkExperience
      parameters:
      - name: id
        in: path
        description: Profile Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: Company User Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileWorkExperience
  /v0.1/companies/{companyId}/users/{companyUserId}/profile/workexperiences:
    post:
      tags:
      - CompanyUserProfileWorkExperience
      summary: Create WorkExperience Profile Item
      operationId: newCompanyUserProfileWorkExperience
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserWorkExperienceAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/profile_workexperiences_body'
          application/json:
            schema:
              $ref: '#/components/schemas/profile_workexperiences_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/profile_workexperiences_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/profile_workexperiences_body_3'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileWorkExperienceModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileWorkExperienceModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileWorkExperienceModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileWorkExperienceModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProfileWorkExperienceModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserProfileWorkExperience
  /v0.1/companies/{companyId}/users/{companyUserId}/resumes/{id}:
    get:
      tags:
      - CompanyUserResume
      summary: Get resume by id
      description: "Requires module: CompanyUserResume. "
      operationId: resume
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Resume Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ClassicCompanyUserResumeModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ClassicCompanyUserResumeModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ClassicCompanyUserResumeModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ClassicCompanyUserResumeModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ClassicCompanyUserResumeModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserResume
  /v0.1/companies/{companyId}/users/{companyUserId}/resumes:
    get:
      tags:
      - CompanyUserResumes
      summary: Get company user resumes list
      description: "Requires module: CompanyUserResume. "
      operationId: companyUserResumes
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserResumeBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserResumeBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserResumeBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserResumeBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserResumeBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserResumes
  /v0.1/companies/{companyId}/users/{id}/roles:
    get:
      tags:
      - CompanyUserRoles
      summary: Get Roles for CompanyUser by id
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: companyUserRoles
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserProjectAssignmentModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProjectAssignmentModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserProjectAssignmentModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProjectAssignmentModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserProjectAssignmentModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserRoles
  /v0.1/companies/{companyId}/users/extended:
    get:
      tags:
      - CompanyUsersExtended
      summary: Get extended company users list
      operationId: companyUsersExtended
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserExtendedModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUsersExtended
  /v0.1/companies/{companyId}/users/{companyUserId}/skills/{id}:
    get:
      tags:
      - CompanyUserSkill
      summary: Get skill by id
      operationId: skill
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Skill Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserSkillModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserSkillModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserSkillModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserSkillModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserSkillModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSkill
  /v0.1/companies/{companyId}/users/{companyUserId}/skills:
    get:
      tags:
      - CompanyUserSkills
      summary: Get skills list
      operationId: skills
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserSkillModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserSkillModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserSkillModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserSkillModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserSkillModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSkills
  /v0.1/companies/{companyId}/subcontractors/{id}:
    get:
      tags:
      - CompanyUserSubcontractor
      summary: Get company user by id
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: companySubcontractor
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserSubcontractorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserSubcontractorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserSubcontractorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserSubcontractorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserSubcontractorModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractor
    delete:
      tags:
      - CompanyUserSubcontractor
      summary: "Delete subcontractor from the system\r\nThis action is irreversible,\
        \ use with caution"
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: deleteCompanySubcontractor
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Subcontractor Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: firstName
        in: query
        description: Subcontractor FirstName
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: lastName
        in: query
        description: Subcontractor LastName
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractor
  /v0.1/companies/{companyId}/subcontractors:
    get:
      tags:
      - CompanyUserSubcontractors
      summary: Get subcontractors list
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: companyUserSubcontractors
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserSubcontractorBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserSubcontractorBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserSubcontractorBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserSubcontractorBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserSubcontractorBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractors
    post:
      tags:
      - CompanyUserSubcontractor
      summary: Add subcontractor
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: addCompanyUserSubcontractor
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyUserSubcontractorAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/companyId_subcontractors_body'
          application/json:
            schema:
              $ref: '#/components/schemas/companyId_subcontractors_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/companyId_subcontractors_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/companyId_subcontractors_body_3'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserSubcontractorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserSubcontractorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserSubcontractorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserSubcontractorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserSubcontractorModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractor
  /v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/{id}:
    get:
      tags:
      - CompanyUserSubcontractorEvent
      summary: Get subcontractors events list
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: companyUserSubcontractorEvent
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorEvent
  /v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings/{id}:
    get:
      tags:
      - CompanyUserSubcontractorEventMeeting
      summary: Get subcontractor meeting event
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: companyUserSubcontractorEventMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Meeting event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorEventMeeting
    put:
      tags:
      - CompanyUserSubcontractorEventMeeting
      summary: Updates subcontractor meeting event
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: updateCompanyUserSubcontractorEventMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: Meeting event details
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_12'
          application/json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_13'
          text/json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_14'
          application/*+json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_15'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorEventMeeting
    delete:
      tags:
      - CompanyUserSubcontractorEventMeeting
      summary: Deletes meeting event
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: deleteCompanyUserSubcontractorEventMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorEventMeeting
  /v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/meetings:
    get:
      tags:
      - CompanyUserSubcontractorEventsMeetings
      summary: Get subcontractors meetings events list
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: companyUserSubcontractorEventMeetingList
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorEventsMeetings
    post:
      tags:
      - CompanyUserSubcontractorEventMeeting
      summary: Creates new subcontractor meeting event
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: newCompanyUserSubcontractorEventMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Meeting event details
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_12'
          application/json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_13'
          text/json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_14'
          application/*+json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_15'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventMeetingModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorEventMeeting
  /v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes/{id}:
    get:
      tags:
      - CompanyUserSubcontractorEventNote
      summary: Get subcontractors notes events list
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: companyUserSubcontractorEventNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorEventNote
    put:
      tags:
      - CompanyUserSubcontractorEventNote
      summary: Updates subcontractor note event
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: updateCompanyUserSubcontractorEventNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: Note event details
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/notes_id_body_12'
          application/json:
            schema:
              $ref: '#/components/schemas/notes_id_body_13'
          text/json:
            schema:
              $ref: '#/components/schemas/notes_id_body_14'
          application/*+json:
            schema:
              $ref: '#/components/schemas/notes_id_body_15'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorEventNote
    delete:
      tags:
      - CompanyUserSubcontractorEventNote
      summary: Deletes meeting event
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: deleteCompanyUserSubcontractorEventNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorEventNote
  /v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/notes:
    get:
      tags:
      - CompanyUserSubcontractorEventsNotes
      summary: Get subcontractors notes events list
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: companyUserSubcontractorEventsNotes
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorEventsNotes
    post:
      tags:
      - CompanyUserSubcontractorEventNote
      summary: Creates new subcontractors note event
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: newCompanyUserSubcontractorEventNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Note event details
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/events_notes_body_12'
          application/json:
            schema:
              $ref: '#/components/schemas/events_notes_body_13'
          text/json:
            schema:
              $ref: '#/components/schemas/events_notes_body_14'
          application/*+json:
            schema:
              $ref: '#/components/schemas/events_notes_body_15'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventNoteModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorEventNote
  /v0.1/companies/{companyId}/subcontractors/{subcontractorId}/events:
    get:
      tags:
      - CompanyUserSubcontractorEvents
      summary: Get subcontractors events list
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: companyUserSubcontractorEvents
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: subcontractorId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorEvents
  /v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks:
    get:
      tags:
      - CompanyUserSubcontractorEventsTasks
      summary: Get subcontractors tasks events list
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: companyUserSubcontractorEventsTasks
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyUserEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorEventsTasks
    post:
      tags:
      - CompanyUserSubcontractorEventTask
      summary: Creates new subcontractor task event
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: newCompanyUserSubcontractorEventTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Task event details
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_12'
          application/json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_13'
          text/json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_14'
          application/*+json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_15'
      responses:
        "200":
          description: All went well
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorEventTask
  /v0.1/companies/{companyId}/subcontractors/{companyUserId}/events/tasks/{id}:
    get:
      tags:
      - CompanyUserSubcontractorEventTask
      summary: Get subcontractors tasks events list
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: companyUserSubcontractorEventTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorEventTask
    put:
      tags:
      - CompanyUserSubcontractorEventTask
      summary: Updates subcontractor task event
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: updateCompanyUserSubcontractorEventTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: Task event details
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_12'
          application/json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_13'
          text/json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_14'
          application/*+json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_15'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserEventTaskModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorEventTask
    delete:
      tags:
      - CompanyUserSubcontractorEventTask
      summary: Deletes meeting event
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: deleteCompanyUserSubcontractorEventTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorEventTask
  /v0.1/companies/{companyId}/subcontractors/{id}/attachments/{attachmentId}:
    get:
      tags:
      - CompanyUserSubcontractorFileAttachment
      summary: Get subcontractor File Attachment by Id
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: getSubcontractorAttachment
      parameters:
      - name: id
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: attachmentId
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: string
                format: byte
                x-content-type: text/plain
            application/json:
              schema:
                type: string
                format: byte
            text/json:
              schema:
                type: string
                format: byte
            application/xml:
              schema:
                type: string
                format: byte
            text/xml:
              schema:
                type: string
                format: byte
        "400":
          description: Incorrect request
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorFileAttachment
  /v0.1/companies/{companyId}/subcontractors/{id}/attachments:
    post:
      tags:
      - CompanyUserSubcontractorFileAttachments
      summary: Upload subcontractor file attachment
      description: "Requires access level: PartnerManager. Requires module: Partners. "
      operationId: subcontractorAttachment
      parameters:
      - name: id
        in: path
        description: Candidate Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/id_attachments_body_1'
            encoding:
              Files:
                style: form
              Title:
                style: form
              Description:
                style: form
      responses:
        "201":
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserSubcontractorFileAttachmentListModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserSubcontractorFileAttachmentListModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserSubcontractorFileAttachmentListModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserSubcontractorFileAttachmentListModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserSubcontractorFileAttachmentListModel'
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized
        "500":
          description: Server Error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserSubcontractorFileAttachments
  /v0.1/companies/{companyId}/users/{companyUserId}/tags:
    post:
      tags:
      - CompanyUserTags
      summary: Edit Tags for User
      description: "Note:\r\n\r\n    Posted tags will replace any existing tags for\
        \ the user.\r\n    A new tag will be created if the id for a tag is not provided.\r\
        \n            \r\nSample request:\r\n\r\n    POST /v0.1/companies/1/users/19870/tags\r\
        \n    [\r\n        {\r\n            \"name\": \"tag-name\",\r\n          \
        \  \"id\": 2\r\n        },\r\n        {\r\n            \"name\": \"tag-new\"\
        ,\r\n        },\r\n    ]"
      operationId: editCompanyUserTags
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: "CompanyTagModel[]"
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyTagModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyTagModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyTagModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyTagModel'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyUserModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyUserModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyUserModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserTags
  /v0.1/companies/{companyId}/users/{companyUserId}/teams:
    get:
      tags:
      - CompanyUserTeams
      summary: Get teams for team member
      operationId: userTeams
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyUserTeams
  /v0.1/companies/{companyId}/webhooks:
    get:
      tags:
      - CompanyWebhooks
      summary: Get company webhooks
      description: "Sample request:\r\n\r\n    GET /v0.1/companies/1/webhooks"
      operationId: companyWebhooks
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyWebhooks
    post:
      tags:
      - CompanyWebhook
      summary: Add Webhook
      description: "Sample request:\r\n            \r\n    POST /v0.1/companies/1/webhooks\r\
        \n    {\r\n        \"isActive\": false,\r\n        \"endpointUrl\": \"https://webhook.site/7a619ffb-e67c-41fc-8113-083d6013f76c\"\
        ,\r\n        \"configurations\": [\r\n            {\r\n                \"\
        entityType\": 1,\r\n                \"actionType\": 1\r\n            }\r\n\
        \        ],\r\n        \"credentials\": [\r\n            {\r\n           \
        \     \"isBasicAuthentication\": true,\r\n                \"headerName\":\
        \ \"user\",\r\n                \"headerValue\": \"somevalue\"\r\n        \
        \    }\r\n        ]\r\n    }"
      operationId: newWebhook
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: WebhookAddModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/companyId_webhooks_body'
          application/json:
            schema:
              $ref: '#/components/schemas/companyId_webhooks_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/companyId_webhooks_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/companyId_webhooks_body_3'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WebhookModel'
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookModel'
            text/json:
              schema:
                $ref: '#/components/schemas/WebhookModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebhookModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/WebhookModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyWebhook
  /v0.1/companies/{companyId}/webhooks/manifest:
    post:
      tags:
      - CompanyWebhook
      description: "Requires access level: CompanyAdmin. Requires module: Webhooks. "
      operationId: installWebhookManifest
      parameters:
      - name: companyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebhookAddModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebhookAddModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebhookAddModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebhookAddModel'
      responses:
        "201":
          description: Created
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookModel'
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Server Error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyWebhook
  /v0.1/companies/{companyId}/webhooks/{id}:
    delete:
      tags:
      - CompanyWebhook
      summary: Remove webhook
      description: "Sample request:\r\n            \r\n    DELETE /v0.1/companies/1/webhooks/42a3a220-766c-eb11-8e13-000c29b4e92f"
      operationId: removeWebhook
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Webhook Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: CompanyWebhook
  /v0.1/companies/{companyId}/users/{companyUserId}/resumes/{id}/dynamic:
    get:
      tags:
      - DynamicCompanyUserResume
      summary: Get resume by id
      description: "Requires module: CompanyUserResume. "
      operationId: dynamicResume
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyUserId
        in: path
        description: CompanyUser Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Resume Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DynamicCompanyUserResumeModel'
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicCompanyUserResumeModel'
            text/json:
              schema:
                $ref: '#/components/schemas/DynamicCompanyUserResumeModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/DynamicCompanyUserResumeModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/DynamicCompanyUserResumeModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: DynamicCompanyUserResume
  /v0.1/companies/{companyId}/keywords/search/{term}:
    get:
      tags:
      - KeywordSearch
      summary: Search keywords by term
      operationId: searchKeyword
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: term
        in: path
        description: Search term
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeywordModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeywordModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeywordModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeywordModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeywordModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: KeywordSearch
  /v0.1/companies/{companyId}/mentions/to-natural-text:
    post:
      tags:
      - Mentions
      summary: "Translates any mention-ids in a text to their human readable form.\
        \ \r\nTranslations are access restricted, if you don't have enough access\r\
        \nto get the name of an id, it won't be translated."
      operationId: translateMentions
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: "The model with one property, value, which contains the text\
          \ containing the mentions you're looking to translate.  Example of a text\
          \ with a mention inside: `\"Hello @(1|123456) can you please consider this\
          \ role?\"`"
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/mentions_tonaturaltext_body'
          application/json:
            schema:
              $ref: '#/components/schemas/mentions_tonaturaltext_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/mentions_tonaturaltext_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/mentions_tonaturaltext_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: Mentions
  /v0.1/companies/{companyId}/projects/{id}:
    get:
      tags:
      - Project
      summary: Get project by id
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: project
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: Project
    put:
      tags:
      - Project
      summary: Update project
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: updateCompanyProject
      parameters:
      - name: id
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ProjectAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/projects_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/projects_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/projects_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/projects_id_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: Project
    delete:
      tags:
      - Project
      summary: Delete project
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: deleteCompanyProject
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: Project
  /v0.1/companies/{companyId}/projects:
    get:
      tags:
      - Projects
      summary: Get projects list  - please note this endpoint currently only returns
        projects with the status WON. Please use the SearchProjects endpoint for more
        options of filtering desired Projects
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: projects
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: Projects
    post:
      tags:
      - Project
      summary: Add project
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: newCompanyProject
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ProjectAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/companyId_projects_body'
          application/json:
            schema:
              $ref: '#/components/schemas/companyId_projects_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/companyId_projects_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/companyId_projects_body_3'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: Project
  /v0.1/companies/{companyId}/projects/{projectId}/projectassignments/{id}:
    get:
      tags:
      - ProjectAssignment
      summary: Get projectassignment by id (Obsolete)
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: oldProjectAssignment
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ProjectAssignment Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      deprecated: true
      x-swagger-router-controller: ProjectAssignment
  /v0.1/companies/{companyId}/projects/{projectId}/roles/{id}:
    get:
      tags:
      - ProjectAssignment
      summary: Get Role by id
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: projectAssignment
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ProjectAssignment Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectAssignment
    put:
      tags:
      - ProjectAssignment
      summary: Edit Role
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: updateProjectAssignment
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ProjectAssignment Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ProjectAssignmentEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/roles_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/roles_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/roles_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/roles_id_body_3'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectAssignment
    delete:
      tags:
      - ProjectAssignment
      summary: Delete Role
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: deleteProjectAssignment
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: ProjectAssignment Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectAssignment
  /v0.1/companies/{companyId}/projects/{projectId}/roles:
    post:
      tags:
      - ProjectAssignment
      summary: Add Role
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: newProjectAssignment
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ProjectAssignmentAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/projectId_roles_body'
          application/json:
            schema:
              $ref: '#/components/schemas/projectId_roles_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/projectId_roles_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/projectId_roles_body_3'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectAssignment
  /v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/employee:
    post:
      tags:
      - ProjectAssignmentMember
      summary: Add Role Member Employee
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: addProjectAssignmentMemberEmployee
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: roleId
        in: path
        description: Role Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ProjectAssignmentMemberEmployeeAddModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/members_employee_body'
          application/json:
            schema:
              $ref: '#/components/schemas/members_employee_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/members_employee_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/members_employee_body_3'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectAssignmentMember
  /v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/subcontractor:
    post:
      tags:
      - ProjectAssignmentMember
      summary: Add Role Member Subcontractor
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: addProjectAssignmentMemberSubcontractor
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: roleId
        in: path
        description: Role Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ProjectAssignmentMemberSubcontractorAddModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/members_subcontractor_body'
          application/json:
            schema:
              $ref: '#/components/schemas/members_subcontractor_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/members_subcontractor_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/members_subcontractor_body_3'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectAssignmentMember
  /v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/employee/{id}:
    put:
      tags:
      - ProjectAssignmentMember
      summary: Edit Role Member Employee
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: updateProjectAssignmentMemberEmployee
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: roleId
        in: path
        description: Role Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Role Member Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ProjectAssignmentMemberSubcontractorAddModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/employee_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/employee_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/employee_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/employee_id_body_3'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectAssignmentMember
  /v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/subcontractor/{id}:
    put:
      tags:
      - ProjectAssignmentMember
      summary: Edit Role Member Subcontractor
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: updateProjectAssignmentMemberSubcontractor
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: roleId
        in: path
        description: Role Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Role Member Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ProjectAssignmentMemberSubcontractorAddModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/subcontractor_id_body'
          application/json:
            schema:
              $ref: '#/components/schemas/subcontractor_id_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/subcontractor_id_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/subcontractor_id_body_3'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectAssignmentMember
  /v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/members/{id}:
    delete:
      tags:
      - ProjectAssignmentMember
      summary: Delete Role Member
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: deleteProjectAssignmentMemberEmployee
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: roleId
        in: path
        description: Role Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Role Member Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectAssignmentMember
  /v0.1/companies/{companyId}/roles:
    post:
      tags:
      - ProjectAssignments
      summary: "Get Roles by Filter\r\nRate limited, restricted to once per minute,\
        \ max 1000 requests per day"
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: searchRoles
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Filter options
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/companyId_roles_body'
          application/json:
            schema:
              $ref: '#/components/schemas/companyId_roles_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/companyId_roles_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/companyId_roles_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentWithStatusModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentWithStatusModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentWithStatusModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentWithStatusModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentWithStatusModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectAssignments
  /v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/skills:
    post:
      tags:
      - ProjectAssignmentSkills
      summary: Add Role Skill
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: addProjectAssignmentSkill
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: roleId
        in: path
        description: Role Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ProjectAssignmentMemberSkillAddModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/roleId_skills_body'
          application/json:
            schema:
              $ref: '#/components/schemas/roleId_skills_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/roleId_skills_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/roleId_skills_body_3'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentSkillModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentSkillModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentSkillModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentSkillModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentSkillModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectAssignmentSkills
  /v0.1/companies/{companyId}/projects/{projectId}/roles/{roleId}/skills/{id}:
    put:
      tags:
      - ProjectAssignmentSkills
      summary: Update Role Skill
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: updateProjectAssignmentSkill
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: roleId
        in: path
        description: Role Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Keyword Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ProjectAssignmentMemberSkillAddModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/skills_id_body_4'
          application/json:
            schema:
              $ref: '#/components/schemas/skills_id_body_5'
          text/json:
            schema:
              $ref: '#/components/schemas/skills_id_body_6'
          application/*+json:
            schema:
              $ref: '#/components/schemas/skills_id_body_7'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentSkillModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentSkillModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentSkillModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentSkillModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentSkillModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectAssignmentSkills
    delete:
      tags:
      - ProjectAssignmentSkills
      summary: Delete Role Skill
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: deleteProjectAssignmentSkill
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: roleId
        in: path
        description: Role Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Keyword Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentSkillModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentSkillModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentSkillModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentSkillModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectAssignmentSkillModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectAssignmentSkills
  /v0.1/companies/{companyId}/projects/{projectId}/events/{id}:
    get:
      tags:
      - ProjectEvent
      summary: Get project event by id
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: projectEvent
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectEventModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEventModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectEventModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectEventModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectEventModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectEvent
  /v0.1/companies/{companyId}/projects/{projectId}/events:
    get:
      tags:
      - ProjectEvents
      summary: Get project events list
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: projectEvents
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectEvents
  /v0.1/companies/{companyId}/projects/{projectId}/events/meetings/{id}:
    get:
      tags:
      - ProjectEventsMeeting
      summary: Get project event meeting by id
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: projectEventMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectEventMeetingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEventMeetingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectEventMeetingModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectEventMeetingModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectEventMeetingModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectEventsMeeting
    put:
      tags:
      - ProjectEventsMeeting
      summary: Update project event meeting
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: updateProjectMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: ProjectEventMeetingAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_16'
          application/json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_17'
          text/json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_18'
          application/*+json:
            schema:
              $ref: '#/components/schemas/meetings_id_body_19'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectEventMeetingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEventMeetingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectEventMeetingModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectEventMeetingModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectEventMeetingModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectEventsMeeting
    delete:
      tags:
      - ProjectEventsMeeting
      summary: Delete project event meeting
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: deleteProjectMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectEventsMeeting
  /v0.1/companies/{companyId}/projects/{projectId}/events/meetings:
    get:
      tags:
      - ProjectEventsMeetings
      summary: Get project events meetings list
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: projectEventMeetings
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectEventsMeetings
    post:
      tags:
      - ProjectEventsMeeting
      summary: Add project event meeting
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: newProjectMeeting
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ProjectEventMeetingAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_16'
          application/json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_17'
          text/json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_18'
          application/*+json:
            schema:
              $ref: '#/components/schemas/events_meetings_body_19'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectEventMeetingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEventMeetingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectEventMeetingModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectEventMeetingModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectEventMeetingModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectEventsMeeting
  /v0.1/companies/{companyId}/projects/{projectId}/events/notes/{id}:
    get:
      tags:
      - ProjectEventsNote
      summary: Get project event note by id
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: projectEventNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomerEventNoteModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectEventsNote
    put:
      tags:
      - ProjectEventsNote
      summary: Update project event note
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: updateProjectNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: ProjectEventNoteAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/notes_id_body_16'
          application/json:
            schema:
              $ref: '#/components/schemas/notes_id_body_17'
          text/json:
            schema:
              $ref: '#/components/schemas/notes_id_body_18'
          application/*+json:
            schema:
              $ref: '#/components/schemas/notes_id_body_19'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectEventNoteModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEventNoteModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectEventNoteModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectEventNoteModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectEventNoteModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectEventsNote
    delete:
      tags:
      - ProjectEventsNote
      summary: Delete project event note
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: deleteProjectNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectEventsNote
  /v0.1/companies/{companyId}/projects/{projectId}/events/notes:
    get:
      tags:
      - ProjectEventsNotes
      summary: Get project event notes list
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: projectEventNotes
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectEventsNotes
    post:
      tags:
      - ProjectEventsNote
      summary: Add project event note
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: newProjectNote
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ProjectEventNoteAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/events_notes_body_16'
          application/json:
            schema:
              $ref: '#/components/schemas/events_notes_body_17'
          text/json:
            schema:
              $ref: '#/components/schemas/events_notes_body_18'
          application/*+json:
            schema:
              $ref: '#/components/schemas/events_notes_body_19'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectEventNoteModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEventNoteModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectEventNoteModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectEventNoteModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectEventNoteModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectEventsNote
  /v0.1/companies/{companyId}/projects/{projectId}/events/tasks/{id}:
    get:
      tags:
      - ProjectEventsTask
      summary: Get project event task by id
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: projectEventTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectEventTaskModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEventTaskModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectEventTaskModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectEventTaskModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectEventTaskModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectEventsTask
    put:
      tags:
      - ProjectEventsTask
      summary: Update project event task
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: updateProjectTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: ProjectEventTaskAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_16'
          application/json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_17'
          text/json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_18'
          application/*+json:
            schema:
              $ref: '#/components/schemas/tasks_id_body_19'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectEventTaskModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEventTaskModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectEventTaskModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectEventTaskModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectEventTaskModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectEventsTask
    delete:
      tags:
      - ProjectEventsTask
      summary: Delete project event task
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: deleteProjectTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Event Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: All went well
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectEventsTask
  /v0.1/companies/{companyId}/projects/{projectId}/events/tasks:
    get:
      tags:
      - ProjectEventsTasks
      summary: Get project event tasks list
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: projectEventTasks
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEventBaseModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectEventsTasks
    post:
      tags:
      - ProjectEventsTask
      summary: Add project event task
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: newProjectTask
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ProjectEventTaskAddEditModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_16'
          application/json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_17'
          text/json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_18'
          application/*+json:
            schema:
              $ref: '#/components/schemas/events_tasks_body_19'
      responses:
        "201":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectEventTaskModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEventTaskModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectEventTaskModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectEventTaskModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectEventTaskModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectEventsTask
  /v0.1/companies/{companyId}/projects/pipelines:
    get:
      tags:
      - ProjectPipelines
      summary: Get project pipelines
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: projectPipelines
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectPipelineModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectPipelineModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectPipelineModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectPipelineModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectPipelineModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectPipelines
  /v0.1/companies/{companyId}/projects/{projectId}/references/{id}:
    get:
      tags:
      - ProjectReference
      summary: Get project reference by id
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: projectReference
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Project reference Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectReferenceModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectReferenceModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectReferenceModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectReferenceModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectReferenceModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectReference
  /v0.1/companies/{companyId}/projects/{projectId}/references:
    get:
      tags:
      - ProjectReferences
      summary: Get project reference by id
      description: "Requires access level: CompanyManager. Requires module: Assignments. "
      operationId: projectReferences
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectReferenceModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectReferenceModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectReferenceModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectReferenceModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectReferenceModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectReferences
  /v0.1/companies/{companyId}/projects/{projectId}/tags:
    post:
      tags:
      - ProjectTags
      summary: Edit Tags for Project
      description: "Note:\r\n\r\n    Posted tags will replace any existing tags for\
        \ the project.\r\n    A new tag will be created, if the id for a tag not provided.\r\
        \n            \r\nSample request:\r\n\r\n    POST /v0.1/companies/1/projects/19870/tags\r\
        \n    [\r\n        {\r\n            \"name\": \"tag-name\",\r\n          \
        \  \"id\": 2\r\n        },\r\n        {\r\n            \"name\": \"tag-test\"\
        ,\r\n            \"id\": 1\r\n        },\r\n    ]"
      operationId: editProjectTags
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: projectId
        in: path
        description: Project Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: CompanyTagModel
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyTagModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyTagModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyTagModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyTagModel'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "403":
          description: Forbidden request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: ProjectTags
  /v0.1/companies/{companyId}/candidates/recruitment-sources:
    get:
      tags:
      - RecruitmentSources
      summary: Get recruitment sources
      description: "Requires access level: CompanyRecruiter. Requires module: Recruitment. "
      operationId: recruitmentSources
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecruitmentSourceModel'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecruitmentSourceModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecruitmentSourceModel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecruitmentSourceModel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecruitmentSourceModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: RecruitmentSources
  /v0.1/companies/{companyId}/candidates/search:
    post:
      tags:
      - SearchCompanyCandidate
      summary: Get company candidates list from search criteria
      description: "Sample request:\r\n\r\n    POST /v0.1/companies/1/candidates/search\r\
        \n    {\r\n        \"term\": \"candidate property value\",\r\n        \"rating\"\
        : 3         \r\n        \"status\": 0,\r\n        \"sources\": [],\r\n   \
        \     \"noRecruiter\": false,\r\n        \"recruiters\": [],\r\n        \"\
        states\": [0],\r\n        \"pipeline\": null,\r\n        \"pageAndSortBy\"\
        : {\r\n            \"page\": 1,\r\n            \"itemsPerPage\": 15\r\n  \
        \      },\r\n        \"pipelines\": []\r\n    }"
      operationId: searchCompanyCandidate
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: SearchCompanyCandidateQueryModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/candidates_search_body'
          application/json:
            schema:
              $ref: '#/components/schemas/candidates_search_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/candidates_search_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/candidates_search_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchCompanyCandidateResultModel'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCompanyCandidateResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchCompanyCandidateResultModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchCompanyCandidateResultModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/SearchCompanyCandidateResultModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: SearchCompanyCandidate
  /v0.1/companies/{companyId}/customers/contacts/search:
    post:
      tags:
      - SearchCompanyCustomerContact
      summary: Get company customer contacts list from search criteria
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: searchCompanyCustomerContact
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: SearchCompanyCustomerQueryModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/contacts_search_body'
          application/json:
            schema:
              $ref: '#/components/schemas/contacts_search_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/contacts_search_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/contacts_search_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchCompanyCustomerContactResultModel'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCompanyCustomerContactResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchCompanyCustomerContactResultModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchCompanyCustomerContactResultModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/SearchCompanyCustomerContactResultModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: SearchCompanyCustomerContact
  /v0.1/companies/{companyId}/customers/search:
    post:
      tags:
      - SearchCompanyCustomers
      summary: Get company customers list from search criteria
      description: "Requires access level: CompanyManager. Requires module: Customers. "
      operationId: searchCompanyCustomer
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: SearchCompanyCustomerQueryModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/customers_search_body'
          application/json:
            schema:
              $ref: '#/components/schemas/customers_search_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/customers_search_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/customers_search_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchCompanyCustomerResultModel'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCompanyCustomerResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchCompanyCustomerResultModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchCompanyCustomerResultModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/SearchCompanyCustomerResultModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: SearchCompanyCustomers
  /v0.1/companies/{companyId}/users/search:
    post:
      tags:
      - SearchCompanyUser
      summary: Get company users list from search criteria
      operationId: searchCompanyUser
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: SearchCompanyUserQueryModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/users_search_body'
          application/json:
            schema:
              $ref: '#/components/schemas/users_search_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/users_search_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/users_search_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchCompanyUserResultModel'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCompanyUserResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchCompanyUserResultModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchCompanyUserResultModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/SearchCompanyUserResultModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: SearchCompanyUser
  /v0.1/companies/{companyId}/projects/search:
    post:
      tags:
      - SearchProject
      summary: Get projects list from search criteria
      description: "Sample request\r\n{\r\n    \"pipelines\": [4],\r\n    \"projectStates\"\
        : [0],\r\n    \"PageAndSortBy\": {\r\n    \"SortBy\": \"0\",\r\n    \"SortOrder\"\
        : \"1\",\r\n    \"Page\": \"1\",\r\n    \"ItemsPerPage\": \"15\",\r\n    }\r\
        \n}\r\nSortBy Parameter can be:\r\n    CreatedDateTime=0 // Default\r\n  \
        \  Title=1\r\n    Identifier=2\r\n    CustomerIdentifier=3\r\n    SeoId=4\r\
        \n    UpdatedDateTime=6\r\n    LastTouchDateTime=7"
      operationId: searchProject
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: SearchCompanyCustomerQueryModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/projects_search_body'
          application/json:
            schema:
              $ref: '#/components/schemas/projects_search_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/projects_search_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/projects_search_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchProjectsResultModel'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchProjectsResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchProjectsResultModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchProjectsResultModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/SearchProjectsResultModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: SearchProject
  /v0.1/companies/{companyId}/skills/search:
    post:
      tags:
      - SkillSearch
      summary: Search users by skill keyword id
      operationId: searchSkill
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: SearchSkillQueryModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/skills_search_body'
          application/json:
            schema:
              $ref: '#/components/schemas/skills_search_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/skills_search_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/skills_search_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchSkillResultModel'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSkillResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchSkillResultModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchSkillResultModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/SearchSkillResultModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: SkillSearch
  /v0.1/companies/{companyId}/skills/search/term:
    post:
      tags:
      - SkillSearchTerm
      summary: Search users with skills by term (string value)
      operationId: searchSkillTerm
      parameters:
      - name: companyId
        in: path
        description: Company Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: SkillSearchQueryTermModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/search_term_body'
          application/json:
            schema:
              $ref: '#/components/schemas/search_term_body_1'
          text/json:
            schema:
              $ref: '#/components/schemas/search_term_body_2'
          application/*+json:
            schema:
              $ref: '#/components/schemas/search_term_body_3'
      responses:
        "200":
          description: All went well
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchSkillResultModel'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSkillResultModel'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchSkillResultModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchSkillResultModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/SearchSkillResultModel'
        "400":
          description: Incorrect request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationModel'
        "401":
          description: Unauthorized request
        "404":
          description: Resource not found
        "500":
          description: Server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: SkillSearchTerm
components:
  schemas:
    AbscencePeriodDayModel:
      type: object
      properties:
        calendarDay:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CalendarDayModel'
      additionalProperties: false
      example:
        calendarDay: ""
    AbsenceAddEditModel:
      required:
      - absenceTypeId
      - extentPercentage
      - start
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
          nullable: true
        extentPercentage:
          type: number
          format: float
        absenceTypeId:
          type: integer
          format: int32
      additionalProperties: false
    AbsencePeriodDtoModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        absenceType:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/AbsenceTypeDto'
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        extentPercentage:
          type: integer
          format: int32
        companyUserId:
          type: integer
          format: int32
        companyUserSeoId:
          type: string
          nullable: true
        companyId:
          type: integer
          format: int32
        companySeoId:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 5
        endDate: 2000-01-23T04:56:07.000+00:00
        companyUserId: 1
        companySeoId: companySeoId
        companyUserSeoId: companyUserSeoId
        absenceType: ""
        extentPercentage: 6
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 0
        startDate: 2000-01-23T04:56:07.000+00:00
    AbsencePeriodModel:
      type: object
      properties:
        companyId:
          type: integer
          format: int32
        companyUserId:
          type: integer
          format: int32
        absenceTypeId:
          type: integer
          format: int32
        absenceTypeName:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        days:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/AbscencePeriodDayModel'
        extentPercentage:
          type: integer
          format: int32
      additionalProperties: false
      example:
        absenceTypeId: 1
        companyId: 0
        companyUserId: 6
        days:
        - calendarDay: ""
        - calendarDay: ""
        extentPercentage: 5
        id: 5
        absenceTypeName: absenceTypeName
    AbsenceTypeDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    AbsenceTypeModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
      example:
        name: name
        id: 0
    AccessLevel:
      type: integer
      description: |2-


        NoAccess = 0

        Anonymous = 50

        Read = 100

        Subcontractor = 110

        Candidate = 115

        RestrictedCompanyUser = 150

        CompanyApiUser = 180

        CompanyUser = 200

        PartnerManager = 240

        CompanyRecruiter = 250

        TeamManager = 270

        CompanyManager = 300

        CompanyAdmin = 400

        Owner = 500
      format: int32
      enum:
      - 0
      - 50
      - 100
      - 110
      - 115
      - 150
      - 180
      - 200
      - 240
      - 250
      - 270
      - 300
      - 400
      - 500
      x-enumNames:
      - NoAccess
      - Anonymous
      - Read
      - Subcontractor
      - Candidate
      - RestrictedCompanyUser
      - CompanyApiUser
      - CompanyUser
      - PartnerManager
      - CompanyRecruiter
      - TeamManager
      - CompanyManager
      - CompanyAdmin
      - Owner
      x-enum-varnames:
      - NoAccess
      - Anonymous
      - Read
      - Subcontractor
      - Candidate
      - RestrictedCompanyUser
      - CompanyApiUser
      - CompanyUser
      - PartnerManager
      - CompanyRecruiter
      - TeamManager
      - CompanyManager
      - CompanyAdmin
      - Owner
      x-ms-enum:
        name: AccessLevel
        values:
        - name: NoAccess
          value: 0
        - name: Anonymous
          value: 50
        - name: Read
          value: 100
        - name: Subcontractor
          value: 110
        - name: Candidate
          value: 115
        - name: RestrictedCompanyUser
          value: 150
        - name: CompanyApiUser
          value: 180
        - name: CompanyUser
          value: 200
        - name: PartnerManager
          value: 240
        - name: CompanyRecruiter
          value: 250
        - name: TeamManager
          value: 270
        - name: CompanyManager
          value: 300
        - name: CompanyAdmin
          value: 400
        - name: Owner
          value: 500
    ActionType:
      type: integer
      description: |2-


        All = 1

        Created = 2

        Updated = 3

        Deleted = 4
      format: int32
      enum:
      - 1
      - 2
      - 3
      - 4
      x-enumNames:
      - All
      - Created
      - Updated
      - Deleted
      x-enum-varnames:
      - All
      - Created
      - Updated
      - Deleted
      x-ms-enum:
        name: ActionType
        values:
        - name: All
          value: 1
        - name: Created
          value: 2
        - name: Updated
          value: 3
        - name: Deleted
          value: 4
    AddressInfoBlockViewModel:
      type: object
      properties:
        displayName:
          type: string
          nullable: true
        street1:
          type: string
          nullable: true
        street2:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    AddressType:
      type: integer
      description: |2-


        Undefined = 0

        StreetAddress = 1

        InvoiceAddress = 2

        LocationAddress = 3
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      x-enumNames:
      - Undefined
      - StreetAddress
      - InvoiceAddress
      - LocationAddress
      x-enum-varnames:
      - Undefined
      - StreetAddress
      - InvoiceAddress
      - LocationAddress
      x-ms-enum:
        name: AddressType
        values:
        - name: Undefined
          value: 0
        - name: StreetAddress
          value: 1
        - name: InvoiceAddress
          value: 2
        - name: LocationAddress
          value: 3
    AttachmentType:
      type: integer
      description: |2-


        File = 0

        Uri = 1
      format: int32
      enum:
      - 0
      - 1
      x-enumNames:
      - File
      - Uri
      x-enum-varnames:
      - File
      - Uri
      x-ms-enum:
        name: AttachmentType
        values:
        - name: File
          value: 0
        - name: Uri
          value: 1
    AvailabilityFilterModel:
      required:
      - endDate
      - startDate
      type: object
      properties:
        companyUserId:
          type: integer
          format: int32
          nullable: true
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
      additionalProperties: false
    AvailabilityModel:
      type: object
      properties:
        companyUserId:
          type: integer
          format: int32
        availability:
          type: number
          format: double
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
      additionalProperties: false
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        companyUserId: 0
        availability: 6.02745618307040320615897144307382404804229736328125
        startDate: 2000-01-23T04:56:07.000+00:00
    CalendarDayModel:
      type: object
      properties:
        date:
          type: string
          format: date-time
        year:
          type: integer
          format: int32
        month:
          type: integer
          format: int32
        day:
          type: integer
          format: int32
        weekday:
          type: integer
          format: int32
        week:
          type: integer
          format: int32
        quarter:
          type: integer
          format: int32
        dayOfYear:
          type: integer
          format: int32
      additionalProperties: false
    ClassicCompanyUserResumeModel:
      type: object
      properties:
        imageId:
          type: integer
          format: int32
          nullable: true
        created:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CreatedModel'
        updated:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/UpdatedModel'
        parentProfileId:
          type: integer
          format: int32
        profileTranslationId:
          type: integer
          format: int32
        parentCompanyUserResumeId:
          type: integer
          format: int32
          nullable: true
        resume:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ResumeModel'
        id:
          type: integer
          format: int32
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        language:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyResumeTemplateLanguageModel'
        template:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyResumeTemplateBaseModel'
        isPublic:
          type: boolean
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        resume: ""
        template: ""
        imageId: 0
        created: ""
        companyUserId: 2
        description: description
        language: ""
        title: title
        parentProfileId: 6
        companyId: 7
        isPublic: true
        profileTranslationId: 1
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        parentCompanyUserResumeId: 5
        id: 5
        updated: ""
        slug: slug
    CommitmentBlockItemModel:
      type: object
      properties:
        url:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
          nullable: true
        parentBlockItemId:
          type: integer
          format: int32
          nullable: true
        parentBlockItemUpdated:
          type: boolean
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        updated:
          type: string
          format: date-time
          nullable: true
        discarded:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
        disabled:
          type: boolean
      additionalProperties: false
    CommitmentBlockModel:
      type: object
      properties:
        data:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CommitmentBlockItemModel'
        blockId:
          type: string
          format: uuid
        updated:
          type: string
          format: date-time
          nullable: true
        heading:
          type: string
          nullable: true
      additionalProperties: false
    CompanyAddressModel:
      type: object
      properties:
        companyId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        street1:
          type: string
          nullable: true
        street2:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        addressType:
          description: "Undefined = 0,\r\nStreetAddress = 1 (VisitingAddress)\r\n\
            InvoiceAddress = 2,\r\nLocationAddress = 3 (Used to connect an Employee\
            \ to an office registered in Cinode)"
          allOf:
          - $ref: '#/components/schemas/AddressType'
        comments:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        zipCode: zipCode
        country: country
        companyId: 6
        comments: comments
        city: city
        addressType: ""
        street1: street1
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 1
        street2: street2
        email: email
    CompanyBaseModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
        seoId:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
    CompanyCandidateAddModel:
      required:
      - firstName
      - lastName
      - state
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        gender:
          allOf:
          - $ref: '#/components/schemas/UserGender'
        birthYear:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        linkedInUrl:
          type: string
          nullable: true
        rating:
          type: integer
          format: int32
          nullable: true
        state:
          allOf:
          - $ref: '#/components/schemas/CompanyCandidateState'
        availableFromDate:
          type: string
          format: date-time
          nullable: true
        periodOfNoticeDays:
          type: integer
          format: int32
          nullable: true
        salaryRequirement:
          type: integer
          format: int32
          nullable: true
        isMobile:
          type: boolean
        recruitmentManagerId:
          type: integer
          format: int32
          nullable: true
        pipelineId:
          type: integer
          format: int32
          nullable: true
        pipelineStageId:
          type: integer
          format: int32
          nullable: true
        teamId:
          type: integer
          format: int32
          nullable: true
        companyAddressId:
          type: integer
          format: int32
          nullable: true
        recruitmentSourceId:
          type: integer
          format: int32
          nullable: true
        currentEmployer:
          type: string
          nullable: true
        campaignCode:
          type: string
          nullable: true
        currencyId:
          type: integer
          format: int32
          nullable: true
        offeredSalary:
          type: integer
          format: int32
          nullable: true
        notifyRecruitmentManager:
          type: boolean
      additionalProperties: false
    CompanyCandidateAttachmentModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        attachmentType:
          allOf:
          - $ref: '#/components/schemas/AttachmentType'
        companyId:
          type: integer
          format: int32
        companyCandidateId:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 2
        attachmentType: ""
        companyCandidateId: 4
        description: description
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
    CompanyCandidateBaseModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        seoId:
          type: string
          nullable: true
        firstname:
          type: string
          nullable: true
          readOnly: true
          deprecated: true
        firstName:
          type: string
          nullable: true
        lastname:
          type: string
          nullable: true
          readOnly: true
          deprecated: true
        lastName:
          type: string
          nullable: true
        createdDateTime:
          type: string
          format: date-time
        lastTouchDateTime:
          type: string
          format: date-time
          nullable: true
        updatedDateTime:
          type: string
          format: date-time
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        firstName: firstName
        lastName: lastName
        companyId: 6
        firstname: firstname
        lastTouchDateTime: 2000-01-23T04:56:07.000+00:00
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 0
        seoId: seoId
        lastname: lastname
        updatedDateTime: 2000-01-23T04:56:07.000+00:00
    CompanyCandidateEventBaseModel:
      type: object
      properties:
        companyCandidateId:
          type: integer
          format: int32
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 6
        companyCandidateId: 0
        description: description
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: ""
        title: title
        eventDate: 2000-01-23T04:56:07.000+00:00
    CompanyCandidateEventMeetingModel:
      type: object
      properties:
        companyCandidateId:
          type: integer
          format: int32
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        location:
          type: string
          nullable: true
        assignedToCompanyUserId:
          type: integer
          format: int32
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/EventStatusValue'
        createdByCompanyUserId:
          type: integer
          format: int32
        updatedByCompanyUserId:
          type: integer
          format: int32
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EventCommentModel'
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        comments:
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        assignedToCompanyUserId: 6
        createdByCompanyUserId: 1
        visibility: ""
        companyCandidateId: 0
        updatedByCompanyUserId: 5
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        endDateTime: 2000-01-23T04:56:07.000+00:00
        type: ""
        title: title
        companyId: 5
        startDateTime: 2000-01-23T04:56:07.000+00:00
        location: location
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
        status: ""
        eventDate: 2000-01-23T04:56:07.000+00:00
    CompanyCandidateEventModel:
      type: object
      properties:
        companyCandidateId:
          type: integer
          format: int32
        createdByCompanyUserId:
          type: integer
          format: int32
        updatedByCompanyUserId:
          type: integer
          format: int32
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EventCommentModel'
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        comments:
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        createdByCompanyUserId: 6
        visibility: ""
        companyCandidateId: 0
        updatedByCompanyUserId: 1
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        type: ""
        title: title
        companyId: 2
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
        eventDate: 2000-01-23T04:56:07.000+00:00
    CompanyCandidateEventNoteModel:
      type: object
      properties:
        companyCandidateId:
          type: integer
          format: int32
        noteType:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EventNoteType'
        noteDate:
          type: string
          format: date-time
          nullable: true
        createdByCompanyUserId:
          type: integer
          format: int32
        updatedByCompanyUserId:
          type: integer
          format: int32
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EventCommentModel'
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        comments:
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        createdByCompanyUserId: 6
        visibility: ""
        companyCandidateId: 0
        updatedByCompanyUserId: 1
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        type: ""
        title: title
        noteType: ""
        companyId: 5
        noteDate: 2000-01-23T04:56:07.000+00:00
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
        eventDate: 2000-01-23T04:56:07.000+00:00
    CompanyCandidateEventTaskModel:
      type: object
      properties:
        companyCandidateId:
          type: integer
          format: int32
        taskType:
          description: "NotSpecified = 0\r\nPhone = 1\r\nEmail = 2"
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EventTaskType'
        hasTime:
          type: boolean
          nullable: true
        dueDateTime:
          type: string
          format: date-time
          nullable: true
        assignedToCompanyUserId:
          type: integer
          format: int32
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/EventStatusValue'
        createdByCompanyUserId:
          type: integer
          format: int32
        updatedByCompanyUserId:
          type: integer
          format: int32
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EventCommentModel'
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        comments:
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        assignedToCompanyUserId: 6
        createdByCompanyUserId: 1
        visibility: ""
        companyCandidateId: 0
        updatedByCompanyUserId: 5
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        type: ""
        title: title
        hasTime: true
        taskType: ""
        companyId: 5
        dueDateTime: 2000-01-23T04:56:07.000+00:00
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
        status: ""
        eventDate: 2000-01-23T04:56:07.000+00:00
    CompanyCandidateExtendedModel:
      type: object
      properties:
        rating:
          type: integer
          format: int32
          nullable: true
        availableFromDate:
          type: string
          format: date-time
          nullable: true
        periodOfNoticeDays:
          type: integer
          format: int32
          nullable: true
        salaryRequirement:
          type: integer
          format: int32
          nullable: true
        offeredSalary:
          type: integer
          format: int32
          nullable: true
        state:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyCandidateState'
        currencyId:
          type: integer
          format: int32
          nullable: true
        isMobile:
          type: boolean
        pipelineId:
          type: integer
          format: int32
          nullable: true
        pipelineStageId:
          type: integer
          format: int32
          nullable: true
        recruitmentManagerId:
          type: integer
          format: int32
          nullable: true
        campaignCode:
          type: string
          nullable: true
        gender:
          description: "Other = 0,\r\nMale = 1,\r\nFemale = 2"
          allOf:
          - $ref: '#/components/schemas/UserGender'
        birthYear:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        linkedInUrl:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        attachments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyCandidateAttachmentModel'
        recruitmentManager:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserBaseModel'
        currentEmployer:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        seoId:
          type: string
          nullable: true
        firstname:
          type: string
          nullable: true
          readOnly: true
          deprecated: true
        firstName:
          type: string
          nullable: true
        lastname:
          type: string
          nullable: true
          readOnly: true
          deprecated: true
        lastName:
          type: string
          nullable: true
        createdDateTime:
          type: string
          format: date-time
        lastTouchDateTime:
          type: string
          format: date-time
          nullable: true
        updatedDateTime:
          type: string
          format: date-time
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        lastName: lastName
        firstname: firstname
        attachments:
        - companyId: 2
          attachmentType: ""
          companyCandidateId: 4
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
        - companyId: 2
          attachmentType: ""
          companyCandidateId: 4
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
        gender: ""
        rating: 0
        salaryRequirement: 1
        description: description
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        title: title
        pipelineId: 2
        recruitmentManagerId: 9
        recruitmentManager: ""
        periodOfNoticeDays: 6
        availableFromDate: 2000-01-23T04:56:07.000+00:00
        links:
        - null
        - null
        state: ""
        isMobile: true
        id: 7
        currencyId: 5
        seoId: seoId
        email: email
        campaignCode: campaignCode
        pipelineStageId: 7
        currentEmployer: currentEmployer
        linkedInUrl: linkedInUrl
        lastname: lastname
        updatedDateTime: 2000-01-23T04:56:07.000+00:00
        firstName: firstName
        companyId: 1
        birthYear: 3
        phone: phone
        lastTouchDateTime: 2000-01-23T04:56:07.000+00:00
        offeredSalary: 5
    CompanyCandidateFileAttachmentListModel:
      type: object
      properties:
        companyCandidateId:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        attachments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyCandidateFileAttachmentModel'
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 6
        attachments:
        - fileName: fileName
          extension: extension
          companyId: 1
          attachmentType: ""
          companyCandidateId: 5
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
        - fileName: fileName
          extension: extension
          companyId: 1
          attachmentType: ""
          companyCandidateId: 5
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
        companyCandidateId: 0
        links:
        - null
        - null
    CompanyCandidateFileAttachmentModel:
      type: object
      properties:
        fileName:
          type: string
          nullable: true
        extension:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        attachmentType:
          allOf:
          - $ref: '#/components/schemas/AttachmentType'
        companyId:
          type: integer
          format: int32
        companyCandidateId:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        fileName: fileName
        extension: extension
        companyId: 1
        attachmentType: ""
        companyCandidateId: 5
        description: description
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
    CompanyCandidatePipelineModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        stages:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyCandidatePipelineStageModel'
      additionalProperties: false
      example:
        stages:
        - probability: 5
          description: description
          id: 6
          title: title
          order: 1
        - probability: 5
          description: description
          id: 6
          title: title
          order: 1
        description: description
        id: 0
        title: title
    CompanyCandidatePipelineStageModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        probability:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
      example:
        probability: 5
        description: description
        id: 6
        title: title
        order: 1
    CompanyCandidateQuerySort:
      type: integer
      description: |2-


        CreatedDateTime = 0

        FirstName = 1

        LastName = 2

        Status = 3

        Email = 4

        UpdatedDateTime = 5
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      x-enumNames:
      - CreatedDateTime
      - FirstName
      - LastName
      - Status
      - Email
      - UpdatedDateTime
      x-enum-varnames:
      - CreatedDateTime
      - FirstName
      - LastName
      - Status
      - Email
      - UpdatedDateTime
      x-ms-enum:
        name: CompanyCandidateQuerySort
        values:
        - name: CreatedDateTime
          value: 0
        - name: FirstName
          value: 1
        - name: LastName
          value: 2
        - name: Status
          value: 3
        - name: Email
          value: 4
        - name: UpdatedDateTime
          value: 5
    CompanyCandidateQuerySortPageAndSortByModel:
      type: object
      properties:
        sortBy:
          allOf:
          - $ref: '#/components/schemas/CompanyCandidateQuerySort'
        sortOrder:
          description: "Ascending = 0 (Default)\r\nDescending = 1"
          allOf:
          - $ref: '#/components/schemas/SortOrder'
        page:
          type: integer
          format: int32
          default: 1
        itemsPerPage:
          type: integer
          format: int32
          default: 15
      additionalProperties: false
    CompanyCandidateSkillAddModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        companyCandidateId:
          type: integer
          format: int32
        keywordSynonymId:
          type: integer
          format: int32
          nullable: true
        languageId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    CompanyCandidateSkillModel:
      type: object
      properties:
        companyCandidateId:
          type: integer
          format: int32
        keywordId:
          type: integer
          format: int32
        keyword:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/KeywordModel'
        keywordSynonymId:
          type: integer
          format: int32
        keywordSynonym:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/KeywordSynonymModel'
      additionalProperties: false
      example:
        keywordId: 6
        keywordSynonym: ""
        keywordSynonymId: 1
        companyCandidateId: 0
        keyword: ""
    CompanyCandidateState:
      type: integer
      description: |2-


        Open = 0

        Won = 10

        Paused = 20

        Lost = 30

        Rejected = 40
      format: int32
      enum:
      - 0
      - 10
      - 20
      - 30
      - 40
      x-enumNames:
      - Open
      - Won
      - Paused
      - Lost
      - Rejected
      x-enum-varnames:
      - Open
      - Won
      - Paused
      - Lost
      - Rejected
      x-ms-enum:
        name: CompanyCandidateState
        values:
        - name: Open
          value: 0
        - name: Won
          value: 10
        - name: Paused
          value: 20
        - name: Lost
          value: 30
        - name: Rejected
          value: 40
    CompanyCapabilitiesModel:
      type: object
      properties:
        enabledModules:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyEnabledModuleModel'
      additionalProperties: false
      example:
        enabledModules:
        - moduleId: ""
        - moduleId: ""
    CompanyCustomerAddEditModel:
      required:
      - name
      type: object
      properties:
        status:
          type: boolean
          readOnly: true
          deprecated: true
        name:
          type: string
        description:
          type: string
          nullable: true
        corporateIdentityNumber:
          type: string
          nullable: true
        vatNumber:
          type: string
          nullable: true
        identification:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        homepage:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        intermediator:
          type: boolean
      additionalProperties: false
    CompanyCustomerAddressAddEditModel:
      type: object
      properties:
        street1:
          type: string
          nullable: true
        street2:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        comments:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        addressType:
          allOf:
          - $ref: '#/components/schemas/AddressType'
      additionalProperties: false
    CompanyCustomerAddressModel:
      type: object
      properties:
        companyCustomerId:
          type: integer
          format: int32
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        street1:
          type: string
          nullable: true
        street2:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        addressType:
          description: "Undefined = 0,\r\nStreetAddress = 1 (VisitingAddress)\r\n\
            InvoiceAddress = 2,\r\nLocationAddress = 3 (Used to connect an Employee\
            \ to an office registered in Cinode)"
          allOf:
          - $ref: '#/components/schemas/AddressType'
        comments:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        zipCode: zipCode
        country: country
        companyId: 5
        comments: comments
        city: city
        addressType: ""
        street1: street1
        links:
        - null
        - null
        id: 2
        street2: street2
        companyCustomerId: 5
        email: email
    CompanyCustomerAttachmentModel:
      type: object
      properties:
        customerId:
          type: integer
          format: int32
        attachmentType:
          allOf:
          - $ref: '#/components/schemas/AttachmentType'
        companyId:
          type: integer
          format: int32
          nullable: true
        id:
          type: string
          format: uuid
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 4
        attachmentType: ""
        customerId: 2
        description: description
        links:
        - null
        - null
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
    CompanyCustomerBaseModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        identification:
          type: string
          nullable: true
        seoId:
          type: string
          nullable: true
        status:
          deprecated: true
          allOf:
          - $ref: '#/components/schemas/Status'
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 6
        identification: identification
        name: name
        description: description
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 0
        seoId: seoId
        status: ""
    CompanyCustomerContactAddEditModel:
      required:
      - firstName
      - lastName
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          nullable: true
        phone1:
          type: string
          nullable: true
        phone2:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        comments:
          type: string
          nullable: true
      additionalProperties: false
    CompanyCustomerContactBaseModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        customerId:
          type: integer
          format: int32
        slug:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        firstName: firstName
        lastName: lastName
        companyId: 6
        customerId: 1
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 0
        slug: slug
        email: email
    CompanyCustomerContactModel:
      type: object
      properties:
        title:
          type: string
          nullable: true
        phone1:
          type: string
          nullable: true
        phone2:
          type: string
          nullable: true
        comments:
          type: string
          nullable: true
        createdDateTime:
          type: string
          format: date-time
        tags:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyTagModel'
        id:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        customerId:
          type: integer
          format: int32
        slug:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        lastName: lastName
        comments: comments
        phone2: phone2
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        title: title
        phone1: phone1
        tags:
        - companyId: 0
          tagType: ""
          name: name
          id: 6
          seoId: seoId
        - companyId: 0
          tagType: ""
          name: name
          id: 6
          seoId: seoId
        firstName: firstName
        companyId: 5
        customerId: 5
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 1
        slug: slug
        email: email
    CompanyCustomerContactQuerySort:
      type: integer
      description: |2-


        CreatedDateTime = 0

        FirstName = 1

        LastName = 2

        Email = 3

        UpdatedDateTime = 4

        CustomerId = 5
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      x-enumNames:
      - CreatedDateTime
      - FirstName
      - LastName
      - Email
      - UpdatedDateTime
      - CustomerId
      x-enum-varnames:
      - CreatedDateTime
      - FirstName
      - LastName
      - Email
      - UpdatedDateTime
      - CustomerId
      x-ms-enum:
        name: CompanyCustomerContactQuerySort
        values:
        - name: CreatedDateTime
          value: 0
        - name: FirstName
          value: 1
        - name: LastName
          value: 2
        - name: Email
          value: 3
        - name: UpdatedDateTime
          value: 4
        - name: CustomerId
          value: 5
    CompanyCustomerContactQuerySortPageAndSortByModel:
      type: object
      properties:
        sortBy:
          allOf:
          - $ref: '#/components/schemas/CompanyCustomerContactQuerySort'
        sortOrder:
          description: "Ascending = 0 (Default)\r\nDescending = 1"
          allOf:
          - $ref: '#/components/schemas/SortOrder'
        page:
          type: integer
          format: int32
          default: 1
        itemsPerPage:
          type: integer
          format: int32
          default: 15
      additionalProperties: false
    CompanyCustomerDeleteModel:
      type: object
      properties:
        customerVerificationName:
          type: string
          nullable: true
      additionalProperties: false
    CompanyCustomerExtendedModel:
      type: object
      properties:
        email:
          type: string
          nullable: true
        tags:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyTagBaseModel'
        managers:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyCustomerManagerModel'
        id:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        identification:
          type: string
          nullable: true
        seoId:
          type: string
          nullable: true
        status:
          deprecated: true
          allOf:
          - $ref: '#/components/schemas/Status'
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 6
        identification: identification
        name: name
        description: description
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 0
        seoId: seoId
        email: email
        managers:
        - firstName: firstName
          lastName: lastName
          companyId: 6
          companyCustomerManagerId: 7
          companyUserId: 1
          customerId: 1
          links:
          - null
          - null
          id: 1
          seoId: seoId
          customer: ""
          companyUserType: ""
        - firstName: firstName
          lastName: lastName
          companyId: 6
          companyCustomerManagerId: 7
          companyUserId: 1
          customerId: 1
          links:
          - null
          - null
          id: 1
          seoId: seoId
          customer: ""
          companyUserType: ""
        tags:
        - companyId: 5
          name: name
          id: 5
          seoId: seoId
        - companyId: 5
          name: name
          id: 5
          seoId: seoId
        status: ""
    CompanyCustomerManagerModel:
      type: object
      properties:
        companyCustomerManagerId:
          type: integer
          format: int32
          nullable: true
        customerId:
          type: integer
          format: int32
          nullable: true
        customer:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyCustomerBaseModel'
        id:
          type: integer
          format: int32
          nullable: true
          deprecated: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        seoId:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        companyUserType:
          description: "Employee = 0,\r\nCandidate = 10,\r\nSubcontractor = 20"
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserType'
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        firstName: firstName
        lastName: lastName
        companyId: 6
        companyCustomerManagerId: 7
        companyUserId: 1
        customerId: 1
        links:
        - null
        - null
        id: 1
        seoId: seoId
        customer: ""
        companyUserType: ""
    CompanyCustomerManagersAddEditModel:
      type: object
      properties:
        companyUserIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
      additionalProperties: false
    CompanyCustomerModel:
      type: object
      properties:
        phone:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        homepage:
          type: string
          nullable: true
        corporateIdentityNumber:
          type: string
          nullable: true
        vatNumber:
          type: string
          nullable: true
        contacts:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyCustomerContactBaseModel'
        addresses:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyCustomerAddressModel'
        projects:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectBaseModel'
        intermediator:
          type: boolean
          nullable: true
        attachments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyCustomerAttachmentModel'
        email:
          type: string
          nullable: true
        tags:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyTagBaseModel'
        managers:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyCustomerManagerModel'
        id:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        identification:
          type: string
          nullable: true
        seoId:
          type: string
          nullable: true
        status:
          deprecated: true
          allOf:
          - $ref: '#/components/schemas/Status'
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        addresses:
        - zipCode: zipCode
          country: country
          companyId: 5
          comments: comments
          city: city
          addressType: ""
          street1: street1
          links:
          - null
          - null
          id: 2
          street2: street2
          companyCustomerId: 5
          email: email
        - zipCode: zipCode
          country: country
          companyId: 5
          comments: comments
          city: city
          addressType: ""
          street1: street1
          links:
          - null
          - null
          id: 2
          street2: street2
          companyCustomerId: 5
          email: email
        projects:
        - identifier: identifier
          companyId: 7
          customerId: 9
          description: description
          links:
          - null
          - null
          id: 3
          customerIdentifier: customerIdentifier
          title: title
        - identifier: identifier
          companyId: 7
          customerId: 9
          description: description
          links:
          - null
          - null
          id: 3
          customerIdentifier: customerIdentifier
          title: title
        attachments:
        - companyId: 4
          attachmentType: ""
          customerId: 2
          description: description
          links:
          - null
          - null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
        - companyId: 4
          attachmentType: ""
          customerId: 2
          description: description
          links:
          - null
          - null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
        corporateIdentityNumber: corporateIdentityNumber
        description: description
        tags:
        - companyId: 5
          name: name
          id: 5
          seoId: seoId
        - companyId: 5
          name: name
          id: 5
          seoId: seoId
        companyId: 1
        identification: identification
        phone: phone
        name: name
        intermediator: true
        links:
        - null
        - null
        id: 7
        fax: fax
        seoId: seoId
        contacts:
        - firstName: firstName
          lastName: lastName
          companyId: 6
          customerId: 1
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 0
          slug: slug
          email: email
        - firstName: firstName
          lastName: lastName
          companyId: 6
          customerId: 1
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 0
          slug: slug
          email: email
        email: email
        managers:
        - firstName: firstName
          lastName: lastName
          companyId: 6
          companyCustomerManagerId: 7
          companyUserId: 1
          customerId: 1
          links:
          - null
          - null
          id: 1
          seoId: seoId
          customer: ""
          companyUserType: ""
        - firstName: firstName
          lastName: lastName
          companyId: 6
          companyCustomerManagerId: 7
          companyUserId: 1
          customerId: 1
          links:
          - null
          - null
          id: 1
          seoId: seoId
          customer: ""
          companyUserType: ""
        homepage: homepage
        vatNumber: vatNumber
        status: ""
    CompanyCustomerQuerySort:
      type: integer
      description: |2-


        CreatedDateTime = 0

        Name = 1

        Description = 2

        Identification = 3

        SeoId = 4

        Status = 5

        Phone = 6

        Email = 7

        Fax = 8

        Homepage = 9

        CorporateIdentityNumber = 10

        VATNumber = 11

        Intermediator = 12

        UpdatedDateTime = 13

        LastTouchDateTime = 14
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      x-enumNames:
      - CreatedDateTime
      - Name
      - Description
      - Identification
      - SeoId
      - Status
      - Phone
      - Email
      - Fax
      - Homepage
      - CorporateIdentityNumber
      - VATNumber
      - Intermediator
      - UpdatedDateTime
      - LastTouchDateTime
      x-enum-varnames:
      - CreatedDateTime
      - Name
      - Description
      - Identification
      - SeoId
      - Status
      - Phone
      - Email
      - Fax
      - Homepage
      - CorporateIdentityNumber
      - VATNumber
      - Intermediator
      - UpdatedDateTime
      - LastTouchDateTime
      x-ms-enum:
        name: CompanyCustomerQuerySort
        values:
        - name: CreatedDateTime
          value: 0
        - name: Name
          value: 1
        - name: Description
          value: 2
        - name: Identification
          value: 3
        - name: SeoId
          value: 4
        - name: Status
          value: 5
        - name: Phone
          value: 6
        - name: Email
          value: 7
        - name: Fax
          value: 8
        - name: Homepage
          value: 9
        - name: CorporateIdentityNumber
          value: 10
        - name: VATNumber
          value: 11
        - name: Intermediator
          value: 12
        - name: UpdatedDateTime
          value: 13
        - name: LastTouchDateTime
          value: 14
    CompanyCustomerQuerySortPageAndSortByModel:
      type: object
      properties:
        sortBy:
          allOf:
          - $ref: '#/components/schemas/CompanyCustomerQuerySort'
        sortOrder:
          description: "Ascending = 0 (Default)\r\nDescending = 1"
          allOf:
          - $ref: '#/components/schemas/SortOrder'
        page:
          type: integer
          format: int32
          default: 1
        itemsPerPage:
          type: integer
          format: int32
          default: 15
      additionalProperties: false
    CompanyEnabledModuleModel:
      type: object
      properties:
        moduleId:
          allOf:
          - $ref: '#/components/schemas/ModuleType'
      additionalProperties: false
      example:
        moduleId: ""
    CompanyImageModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        imageFileName:
          type: string
          format: uuid
        extension:
          type: string
          nullable: true
        companyId:
          type: integer
          format: int32
        created:
          type: string
          format: date-time
        assignedToCompanyUser:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserBaseModel'
        uploadedByCompanyUser:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserBaseModel'
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        extension: extension
        companyId: 6
        created: 2000-01-23T04:56:07.000+00:00
        imageFileName: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 0
        assignedToCompanyUser: ""
        uploadedByCompanyUser: ""
    CompanyModel:
      type: object
      properties:
        corporateIdentityNumber:
          type: string
          description: External identifier
          nullable: true
        vatNumber:
          type: string
          nullable: true
        registrationYear:
          type: integer
          format: int32
          nullable: true
        isTaxRegistered:
          type: boolean
          nullable: true
        addresses:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyAddressModel'
        tags:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyTagBaseModel'
        countryId:
          type: integer
          format: int32
          nullable: true
        defaultCurrency:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CurrencyModel'
        currencies:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CurrencyModel'
        id:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
        seoId:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        addresses:
        - zipCode: zipCode
          country: country
          companyId: 6
          comments: comments
          city: city
          addressType: ""
          street1: street1
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 1
          street2: street2
          email: email
        - zipCode: zipCode
          country: country
          companyId: 6
          comments: comments
          city: city
          addressType: ""
          street1: street1
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 1
          street2: street2
          email: email
        corporateIdentityNumber: corporateIdentityNumber
        description: description
        countryId: 2
        tags:
        - companyId: 5
          name: name
          id: 5
          seoId: seoId
        - companyId: 5
          name: name
          id: 5
          seoId: seoId
        defaultCurrency: ""
        name: name
        links:
        - null
        - null
        id: 9
        seoId: seoId
        isTaxRegistered: true
        registrationYear: 0
        vatNumber: vatNumber
        currencies:
        - description: description
          id: 7
          currencyCode: currencyCode
        - description: description
          id: 7
          currencyCode: currencyCode
    CompanyProfileFilterModel:
      type: object
      properties:
        createdOffsetDays:
          type: integer
          description: "If set to true, the results will include only Profiles created\
            \ within the last X days"
          format: int32
          nullable: true
        updatedOffsetDays:
          type: integer
          description: "If set to true, the results will include only Profiles updated\
            \ within the last X days"
          format: int32
          nullable: true
        pageAndSortBy:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyProfileSortPageAndSortByModel'
      additionalProperties: false
    CompanyProfileSort:
      type: integer
      description: "0 - Id (Default),\r\n1 - CompanyUserId,\r\n2 - CreatedDateTime,\r\
        \n3 - UpdatedDateTime"
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      x-enumNames:
      - Id
      - CompanyUserId
      - CreatedWhen
      - UpdatedWhen
      x-enum-varnames:
      - Id
      - CompanyUserId
      - CreatedWhen
      - UpdatedWhen
      x-ms-enum:
        name: CompanyProfileSort
        values:
        - name: Id
          value: 0
        - name: CompanyUserId
          value: 1
        - name: CreatedWhen
          value: 2
        - name: UpdatedWhen
          value: 3
    CompanyProfileSortPageAndSortByModel:
      type: object
      properties:
        sortBy:
          description: "0 - Id (Default),\r\n1 - CompanyUserId,\r\n2 - CreatedDateTime,\r\
            \n3 - UpdatedDateTime"
          allOf:
          - $ref: '#/components/schemas/CompanyProfileSort'
        sortOrder:
          description: "Ascending = 0 (Default)\r\nDescending = 1"
          allOf:
          - $ref: '#/components/schemas/SortOrder'
        page:
          type: integer
          format: int32
          default: 1
        itemsPerPage:
          type: integer
          format: int32
          default: 15
      additionalProperties: false
    CompanyProfilesModel:
      type: object
      properties:
        totalItems:
          type: integer
          format: int32
        profiles:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileBaseModel'
      additionalProperties: false
      example:
        totalItems: 0
        profiles:
        - presentation: ""
          companyId: 1
          profileTranslation: ""
          companyUserId: 5
          translations:
          - profileId: 7
            languageBranchId: 9
            profileTranslationId: 2
            languageBranch: ""
          - profileId: 7
            languageBranchId: 9
            profileTranslationId: 2
            languageBranch: ""
          publishedWhen: 2000-01-23T04:56:07.000+00:00
          profileTranslationId: 5
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 6
          updatedWhen: 2000-01-23T04:56:07.000+00:00
          createdWhen: 2000-01-23T04:56:07.000+00:00
        - presentation: ""
          companyId: 1
          profileTranslation: ""
          companyUserId: 5
          translations:
          - profileId: 7
            languageBranchId: 9
            profileTranslationId: 2
            languageBranch: ""
          - profileId: 7
            languageBranchId: 9
            profileTranslationId: 2
            languageBranch: ""
          publishedWhen: 2000-01-23T04:56:07.000+00:00
          profileTranslationId: 5
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 6
          updatedWhen: 2000-01-23T04:56:07.000+00:00
          createdWhen: 2000-01-23T04:56:07.000+00:00
    CompanyRecruitmentManagerModel:
      type: object
      properties:
        companyUserId:
          type: integer
          format: int32
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        seoId:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        companyUserType:
          description: "Employee = 0,\r\nCandidate = 10,\r\nSubcontractor = 20"
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserType'
        id:
          type: integer
          format: int32
          nullable: true
          deprecated: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        firstName: firstName
        lastName: lastName
        companyId: 6
        companyUserId: 0
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 1
        seoId: seoId
        companyUserType: ""
    CompanyResumeTemplateBaseModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
      additionalProperties: false
    CompanyResumeTemplateLanguageModel:
      type: object
      properties:
        languageId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        culture:
          type: string
          nullable: true
        lang:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
      additionalProperties: false
    CompanySubcontractorGroupBaseModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 1
        name: name
        description: description
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 6
    CompanySubcontractorGroupModel:
      type: object
      properties:
        companyUserManager:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserBaseModel'
        members:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserBaseModel'
        id:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 6
        members:
        - firstName: firstName
          lastName: lastName
          companyId: 6
          companyUserId: 0
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 1
          seoId: seoId
          companyUserType: ""
        - firstName: firstName
          lastName: lastName
          companyId: 6
          companyUserId: 0
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 1
          seoId: seoId
          companyUserType: ""
        companyUserManager: ""
        name: name
        description: description
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 0
    CompanyTagBaseModel:
      type: object
      properties:
        companyId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        seoId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
      example:
        companyId: 5
        name: name
        id: 5
        seoId: seoId
    CompanyTagModel:
      type: object
      properties:
        tagType:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyTagTypeModel'
        companyId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        seoId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
      example:
        companyId: 0
        tagType: ""
        name: name
        id: 6
        seoId: seoId
    CompanyTagTypeModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    CompanyUserAddModel:
      required:
      - confirmPassword
      - email
      - firstName
      - gender
      - lastName
      - password
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
        gender:
          allOf:
          - $ref: '#/components/schemas/UserGender'
        status:
          allOf:
          - $ref: '#/components/schemas/CompanyUserStatus'
        teamId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        languageId:
          type: integer
          format: int32
          nullable: true
        employmentNumber:
          type: string
          nullable: true
        employmentStartDate:
          type: string
          format: date-time
          nullable: true
        addProfile:
          type: boolean
        locationId:
          type: integer
          format: int32
          nullable: true
        defaultCurrencyId:
          type: integer
          format: int32
          nullable: true
        displayCurrencyId:
          type: integer
          format: int32
          nullable: true
        mustChangePassword:
          type: boolean
      additionalProperties: false
    CompanyUserBaseModel:
      type: object
      properties:
        companyUserId:
          type: integer
          format: int32
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        seoId:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        companyUserType:
          description: "Employee = 0,\r\nCandidate = 10,\r\nSubcontractor = 20"
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserType'
        id:
          type: integer
          format: int32
          nullable: true
          deprecated: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        firstName: firstName
        lastName: lastName
        companyId: 6
        companyUserId: 0
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 1
        seoId: seoId
        companyUserType: ""
    CompanyUserEditModel:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/CompanyUserStatus'
        employmentStartDate:
          type: string
          format: date-time
          nullable: true
        employmentEndDate:
          type: string
          format: date-time
          nullable: true
        employmentNumber:
          type: string
          nullable: true
        invoicingGoal:
          type: integer
          format: int32
          nullable: true
        mobility:
          type: integer
          format: int32
          nullable: true
        availabilityPercent:
          type: integer
          format: int32
          nullable: true
        availableFromDate:
          type: string
          format: date-time
          nullable: true
        title:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        taxTable:
          type: string
          nullable: true
        baseSalary:
          type: integer
          format: int32
          nullable: true
        provision:
          type: integer
          format: int32
          nullable: true
        hourlyTargetRate:
          type: integer
          format: int32
          nullable: true
        selfCost:
          type: integer
          format: int32
          nullable: true
        locationId:
          type: integer
          format: int32
          nullable: true
        defaultCurrencyId:
          type: integer
          format: int32
          nullable: true
        displayCurrencyId:
          type: integer
          format: int32
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        dateOfBirth:
          type: string
          format: date-time
          nullable: true
        gender:
          allOf:
          - $ref: '#/components/schemas/UserGender'
        companyCalendarId:
          type: integer
          format: int32
          nullable: true
        timezoneId:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
      additionalProperties: false
    CompanyUserEventBaseModel:
      type: object
      properties:
        companyUserId:
          type: integer
          format: int32
          nullable: true
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 6
        companyUserId: 0
        description: description
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: ""
        title: title
        eventDate: 2000-01-23T04:56:07.000+00:00
    CompanyUserEventMeetingAddEditModel:
      required:
      - title
      type: object
      properties:
        companyUserId:
          type: integer
          format: int32
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        timezoneId:
          type: string
          description: "The desired timezone to be used for StartDateTime and EndDateTime\
            \ properties. Valid timezone ids can be found at https://nodatime.org/TimeZones\r\
            \nIf empty, the timezone of the executing user (API account) will be used."
          nullable: true
        assignedToCompanyUserId:
          type: integer
          format: int32
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/EventStatusValue'
        type:
          allOf:
          - $ref: '#/components/schemas/EventType'
        title:
          type: string
        description:
          type: string
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
      additionalProperties: false
    CompanyUserEventMeetingModel:
      type: object
      properties:
        companyUserId:
          type: integer
          format: int32
          nullable: true
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        location:
          type: string
          nullable: true
        assignedToCompanyUserId:
          type: integer
          format: int32
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/EventStatusValue'
        createdByCompanyUserId:
          type: integer
          format: int32
        updatedByCompanyUserId:
          type: integer
          format: int32
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EventCommentModel'
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        comments:
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        assignedToCompanyUserId: 6
        createdByCompanyUserId: 1
        visibility: ""
        updatedByCompanyUserId: 5
        companyUserId: 0
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        endDateTime: 2000-01-23T04:56:07.000+00:00
        type: ""
        title: title
        companyId: 5
        startDateTime: 2000-01-23T04:56:07.000+00:00
        location: location
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
        status: ""
        eventDate: 2000-01-23T04:56:07.000+00:00
    CompanyUserEventModel:
      type: object
      properties:
        companyUserId:
          type: integer
          format: int32
          nullable: true
        createdByCompanyUserId:
          type: integer
          format: int32
        updatedByCompanyUserId:
          type: integer
          format: int32
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EventCommentModel'
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        comments:
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        createdByCompanyUserId: 6
        visibility: ""
        updatedByCompanyUserId: 1
        companyUserId: 0
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        type: ""
        title: title
        companyId: 5
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
        eventDate: 2000-01-23T04:56:07.000+00:00
    CompanyUserEventNoteAddEditModel:
      required:
      - title
      type: object
      properties:
        companyUserId:
          type: integer
          format: int32
        noteType:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EventNoteType'
        noteDate:
          type: string
          format: date-time
          nullable: true
        timezoneId:
          type: string
          description: "The desired timezone to be used for NoteDate property. Valid\
            \ timezone ids can be found at https://nodatime.org/TimeZones\r\nIf empty,\
            \ the timezone of the executing user (API account) will be used."
          nullable: true
        type:
          allOf:
          - $ref: '#/components/schemas/EventType'
        title:
          type: string
        description:
          type: string
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
      additionalProperties: false
    CompanyUserEventNoteModel:
      type: object
      properties:
        companyUserId:
          type: integer
          format: int32
          nullable: true
        noteType:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EventNoteType'
        noteDate:
          type: string
          format: date-time
          nullable: true
        createdByCompanyUserId:
          type: integer
          format: int32
        updatedByCompanyUserId:
          type: integer
          format: int32
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EventCommentModel'
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        comments:
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        createdByCompanyUserId: 6
        visibility: ""
        updatedByCompanyUserId: 1
        companyUserId: 0
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        type: ""
        title: title
        noteType: ""
        companyId: 5
        noteDate: 2000-01-23T04:56:07.000+00:00
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
        eventDate: 2000-01-23T04:56:07.000+00:00
    CompanyUserEventTaskAddEditModel:
      required:
      - title
      type: object
      properties:
        companyUserId:
          type: integer
          format: int32
        taskType:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EventTaskType'
        hasTime:
          type: boolean
          nullable: true
        dueDateTime:
          type: string
          format: date-time
          nullable: true
        timezoneId:
          type: string
          description: "The desired timezone to be used for DueDateTime property.\
            \ Valid timezone ids can be found at https://nodatime.org/TimeZones\r\n\
            If empty, the timezone of the executing user (API account) will be used."
          nullable: true
        assignedToCompanyUserId:
          type: integer
          format: int32
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/EventStatusValue'
        type:
          allOf:
          - $ref: '#/components/schemas/EventType'
        title:
          type: string
        description:
          type: string
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
      additionalProperties: false
    CompanyUserEventTaskModel:
      type: object
      properties:
        companyUserId:
          type: integer
          format: int32
          nullable: true
        taskType:
          description: "NotSpecified = 0\r\nPhone = 1\r\nEmail = 2"
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EventTaskType'
        hasTime:
          type: boolean
          nullable: true
        dueDateTime:
          type: string
          format: date-time
          nullable: true
        assignedToCompanyUserId:
          type: integer
          format: int32
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/EventStatusValue'
        createdByCompanyUserId:
          type: integer
          format: int32
        updatedByCompanyUserId:
          type: integer
          format: int32
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EventCommentModel'
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        comments:
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        assignedToCompanyUserId: 6
        createdByCompanyUserId: 1
        visibility: ""
        updatedByCompanyUserId: 5
        companyUserId: 0
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        type: ""
        title: title
        hasTime: true
        taskType: ""
        companyId: 5
        dueDateTime: 2000-01-23T04:56:07.000+00:00
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
        status: ""
        eventDate: 2000-01-23T04:56:07.000+00:00
    CompanyUserExtendedModel:
      type: object
      properties:
        status:
          description: "Disconnected = 0,\r\nPreActive = 2,\r\nActive = 3,"
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserStatus'
        title:
          type: string
          nullable: true
        companyUserEmail:
          type: string
          nullable: true
        createdDateTime:
          type: string
          format: date-time
          nullable: true
        updatedDateTime:
          type: string
          format: date-time
          nullable: true
        companyAddress:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyAddressModel'
        homeAddress:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/LocationModel'
        image:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserImageModel'
        desiredAssignment:
          type: string
          nullable: true
        internalIdentifier:
          type: string
          nullable: true
        twitter:
          type: string
          nullable: true
        linkedIn:
          type: string
          nullable: true
        homepage:
          type: string
          nullable: true
        blog:
          type: string
          nullable: true
        gitHub:
          type: string
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        seoId:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        companyUserType:
          description: "Employee = 0,\r\nCandidate = 10,\r\nSubcontractor = 20"
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserType'
        id:
          type: integer
          format: int32
          nullable: true
          deprecated: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyUserEmail: companyUserEmail
        image: ""
        lastName: lastName
        gitHub: gitHub
        companyUserId: 0
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        linkedIn: linkedIn
        title: title
        blog: blog
        updatedDateTime: 2000-01-23T04:56:07.000+00:00
        companyUserType: ""
        firstName: firstName
        twitter: twitter
        companyId: 6
        internalIdentifier: internalIdentifier
        desiredAssignment: desiredAssignment
        companyAddress: ""
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 1
        seoId: seoId
        status: ""
        homeAddress: ""
        homepage: homepage
    CompanyUserFullModel:
      type: object
      properties:
        invoicingGoal:
          type: integer
          format: int32
          nullable: true
        taxTable:
          type: string
          nullable: true
        baseSalary:
          type: integer
          format: int32
          nullable: true
        provision:
          type: integer
          format: int32
          nullable: true
        hourlyTargetRate:
          type: integer
          format: int32
          nullable: true
        selfCost:
          type: integer
          format: int32
          nullable: true
        employmentStartDate:
          type: string
          format: date-time
          nullable: true
        employmentEndDate:
          type: string
          format: date-time
          nullable: true
        employmentNumber:
          type: string
          nullable: true
        availabilityPercent:
          type: integer
          format: int32
          nullable: true
        availableFromDate:
          type: string
          format: date-time
          nullable: true
        mobility:
          type: integer
          format: int32
          nullable: true
        locationName:
          type: string
          nullable: true
        resumes:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserResumeBaseModel'
        roles:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/RoleModel'
        teamManagers:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/TeamManagerModel'
        teamMembers:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/TeamMemberModel'
        customerManagers:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyCustomerManagerModel'
        periods:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/AbsencePeriodModel'
        defaultCurrency:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CurrencyModel'
        phone:
          type: string
          nullable: true
        dateOfBirth:
          type: string
          format: date-time
          nullable: true
        tags:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyTagModel'
        status:
          description: "Disconnected = 0,\r\nPreActive = 2,\r\nActive = 3,"
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserStatus'
        title:
          type: string
          nullable: true
        companyUserEmail:
          type: string
          nullable: true
        createdDateTime:
          type: string
          format: date-time
          nullable: true
        updatedDateTime:
          type: string
          format: date-time
          nullable: true
        companyAddress:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyAddressModel'
        homeAddress:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/LocationModel'
        image:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserImageModel'
        desiredAssignment:
          type: string
          nullable: true
        internalIdentifier:
          type: string
          nullable: true
        twitter:
          type: string
          nullable: true
        linkedIn:
          type: string
          nullable: true
        homepage:
          type: string
          nullable: true
        blog:
          type: string
          nullable: true
        gitHub:
          type: string
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        seoId:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        companyUserType:
          description: "Employee = 0,\r\nCandidate = 10,\r\nSubcontractor = 20"
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserType'
        id:
          type: integer
          format: int32
          nullable: true
          deprecated: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        availabilityPercent: 2
        teamManagers:
        - companyUserId: 6
          teamId: 0
          companyUser: ""
          team: ""
        - companyUserId: 6
          teamId: 0
          companyUser: ""
          team: ""
        companyUserEmail: companyUserEmail
        lastName: lastName
        mobility: 7
        gitHub: gitHub
        roles:
        - level: ""
          name: name
          description: description
          id: 1
        - level: ""
          name: name
          description: description
          id: 1
        baseSalary: 6
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        teamMembers:
        - availabilityPercent: 1
          companyUserId: 6
          teamId: 0
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          companyUser: ""
          team: ""
        - availabilityPercent: 1
          companyUserId: 6
          teamId: 0
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          companyUser: ""
          team: ""
        title: title
        blog: blog
        resumes:
        - template: ""
          companyId: 1
          companyUserId: 6
          description: description
          isPublic: true
          language: ""
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 0
          title: title
          slug: slug
        - template: ""
          companyId: 1
          companyUserId: 6
          description: description
          isPublic: true
          language: ""
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 0
          title: title
          slug: slug
        companyUserType: ""
        twitter: twitter
        availableFromDate: 2000-01-23T04:56:07.000+00:00
        hourlyTargetRate: 5
        defaultCurrency: ""
        periods:
        - absenceTypeId: 1
          companyId: 0
          companyUserId: 6
          days:
          - calendarDay: ""
          - calendarDay: ""
          extentPercentage: 5
          id: 5
          absenceTypeName: absenceTypeName
        - absenceTypeId: 1
          companyId: 0
          companyUserId: 6
          days:
          - calendarDay: ""
          - calendarDay: ""
          extentPercentage: 5
          id: 5
          absenceTypeName: absenceTypeName
        customerManagers:
        - firstName: firstName
          lastName: lastName
          companyId: 6
          companyCustomerManagerId: 7
          companyUserId: 1
          customerId: 1
          links:
          - null
          - null
          id: 1
          seoId: seoId
          customer: ""
          companyUserType: ""
        - firstName: firstName
          lastName: lastName
          companyId: 6
          companyCustomerManagerId: 7
          companyUserId: 1
          customerId: 1
          links:
          - null
          - null
          id: 1
          seoId: seoId
          customer: ""
          companyUserType: ""
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 2
        seoId: seoId
        homeAddress: ""
        image: ""
        locationName: locationName
        companyUserId: 9
        employmentNumber: employmentNumber
        dateOfBirth: 2000-01-23T04:56:07.000+00:00
        linkedIn: linkedIn
        tags:
        - companyId: 0
          tagType: ""
          name: name
          id: 6
          seoId: seoId
        - companyId: 0
          tagType: ""
          name: name
          id: 6
          seoId: seoId
        updatedDateTime: 2000-01-23T04:56:07.000+00:00
        employmentStartDate: 2000-01-23T04:56:07.000+00:00
        firstName: firstName
        companyId: 3
        taxTable: taxTable
        internalIdentifier: internalIdentifier
        phone: phone
        desiredAssignment: desiredAssignment
        invoicingGoal: 0
        provision: 1
        companyAddress: ""
        employmentEndDate: 2000-01-23T04:56:07.000+00:00
        selfCost: 5
        status: ""
        homepage: homepage
    CompanyUserImageModel:
      type: object
      properties:
        imageId:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        url:
          type: string
          nullable: true
        largeImageUrl:
          type: string
          nullable: true
        uploadedWhen:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
    CompanyUserInfoBlockViewModel:
      type: object
      properties:
        address:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/AddressInfoBlockViewModel'
        email:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
      additionalProperties: false
    CompanyUserModel:
      type: object
      properties:
        employmentStartDate:
          type: string
          format: date-time
          nullable: true
        employmentEndDate:
          type: string
          format: date-time
          nullable: true
        employmentNumber:
          type: string
          nullable: true
        availabilityPercent:
          type: integer
          format: int32
          nullable: true
        availableFromDate:
          type: string
          format: date-time
          nullable: true
        mobility:
          type: integer
          format: int32
          nullable: true
        locationName:
          type: string
          nullable: true
        resumes:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserResumeBaseModel'
        roles:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/RoleModel'
        teamManagers:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/TeamManagerModel'
        teamMembers:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/TeamMemberModel'
        customerManagers:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyCustomerManagerModel'
        periods:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/AbsencePeriodModel'
        defaultCurrency:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CurrencyModel'
        phone:
          type: string
          nullable: true
        dateOfBirth:
          type: string
          format: date-time
          nullable: true
        tags:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyTagModel'
        status:
          description: "Disconnected = 0,\r\nPreActive = 2,\r\nActive = 3,"
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserStatus'
        title:
          type: string
          nullable: true
        companyUserEmail:
          type: string
          nullable: true
        createdDateTime:
          type: string
          format: date-time
          nullable: true
        updatedDateTime:
          type: string
          format: date-time
          nullable: true
        companyAddress:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyAddressModel'
        homeAddress:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/LocationModel'
        image:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserImageModel'
        desiredAssignment:
          type: string
          nullable: true
        internalIdentifier:
          type: string
          nullable: true
        twitter:
          type: string
          nullable: true
        linkedIn:
          type: string
          nullable: true
        homepage:
          type: string
          nullable: true
        blog:
          type: string
          nullable: true
        gitHub:
          type: string
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        seoId:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        companyUserType:
          description: "Employee = 0,\r\nCandidate = 10,\r\nSubcontractor = 20"
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserType'
        id:
          type: integer
          format: int32
          nullable: true
          deprecated: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        availabilityPercent: 0
        teamManagers:
        - companyUserId: 6
          teamId: 0
          companyUser: ""
          team: ""
        - companyUserId: 6
          teamId: 0
          companyUser: ""
          team: ""
        companyUserEmail: companyUserEmail
        lastName: lastName
        mobility: 6
        gitHub: gitHub
        roles:
        - level: ""
          name: name
          description: description
          id: 1
        - level: ""
          name: name
          description: description
          id: 1
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        teamMembers:
        - availabilityPercent: 1
          companyUserId: 6
          teamId: 0
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          companyUser: ""
          team: ""
        - availabilityPercent: 1
          companyUserId: 6
          teamId: 0
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          companyUser: ""
          team: ""
        title: title
        blog: blog
        resumes:
        - template: ""
          companyId: 1
          companyUserId: 6
          description: description
          isPublic: true
          language: ""
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 0
          title: title
          slug: slug
        - template: ""
          companyId: 1
          companyUserId: 6
          description: description
          isPublic: true
          language: ""
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 0
          title: title
          slug: slug
        companyUserType: ""
        twitter: twitter
        availableFromDate: 2000-01-23T04:56:07.000+00:00
        defaultCurrency: ""
        periods:
        - absenceTypeId: 1
          companyId: 0
          companyUserId: 6
          days:
          - calendarDay: ""
          - calendarDay: ""
          extentPercentage: 5
          id: 5
          absenceTypeName: absenceTypeName
        - absenceTypeId: 1
          companyId: 0
          companyUserId: 6
          days:
          - calendarDay: ""
          - calendarDay: ""
          extentPercentage: 5
          id: 5
          absenceTypeName: absenceTypeName
        customerManagers:
        - firstName: firstName
          lastName: lastName
          companyId: 6
          companyCustomerManagerId: 7
          companyUserId: 1
          customerId: 1
          links:
          - null
          - null
          id: 1
          seoId: seoId
          customer: ""
          companyUserType: ""
        - firstName: firstName
          lastName: lastName
          companyId: 6
          companyCustomerManagerId: 7
          companyUserId: 1
          customerId: 1
          links:
          - null
          - null
          id: 1
          seoId: seoId
          customer: ""
          companyUserType: ""
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 2
        seoId: seoId
        homeAddress: ""
        image: ""
        locationName: locationName
        companyUserId: 5
        employmentNumber: employmentNumber
        dateOfBirth: 2000-01-23T04:56:07.000+00:00
        linkedIn: linkedIn
        tags:
        - companyId: 0
          tagType: ""
          name: name
          id: 6
          seoId: seoId
        - companyId: 0
          tagType: ""
          name: name
          id: 6
          seoId: seoId
        updatedDateTime: 2000-01-23T04:56:07.000+00:00
        employmentStartDate: 2000-01-23T04:56:07.000+00:00
        firstName: firstName
        companyId: 5
        internalIdentifier: internalIdentifier
        phone: phone
        desiredAssignment: desiredAssignment
        companyAddress: ""
        employmentEndDate: 2000-01-23T04:56:07.000+00:00
        status: ""
        homepage: homepage
    CompanyUserPermissionsEditModel:
      type: object
      properties:
        permissions:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/AccessLevel'
      additionalProperties: false
    CompanyUserProfileAddEditModel:
      type: object
      properties:
        languageId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    CompanyUserProfileBaseModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        createdWhen:
          type: string
          format: date-time
          nullable: true
        updatedWhen:
          type: string
          format: date-time
          nullable: true
        publishedWhen:
          type: string
          format: date-time
          nullable: true
        presentation:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserProfilePresentationModel'
        profileTranslationId:
          type: integer
          format: int32
        profileTranslation:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserProfileTranslationModel'
        translations:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileTranslationModel'
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        presentation: ""
        companyId: 1
        profileTranslation: ""
        companyUserId: 5
        translations:
        - profileId: 7
          languageBranchId: 9
          profileTranslationId: 2
          languageBranch: ""
        - profileId: 7
          languageBranchId: 9
          profileTranslationId: 2
          languageBranch: ""
        publishedWhen: 2000-01-23T04:56:07.000+00:00
        profileTranslationId: 5
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 6
        updatedWhen: 2000-01-23T04:56:07.000+00:00
        createdWhen: 2000-01-23T04:56:07.000+00:00
    CompanyUserProfileCommitmentAddEditModel:
      required:
      - title
      type: object
      properties:
        title:
          type: string
        description:
          type: string
          nullable: true
        isCurrent:
          type: boolean
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        url:
          type: string
          nullable: true
      additionalProperties: false
    CompanyUserProfileCommitmentModel:
      type: object
      properties:
        profileId:
          type: integer
          format: int32
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        translations:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileCommitmentTranslationModel'
        companyId:
          type: integer
          format: int32
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        url:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 4
        endDate: 2000-01-23T04:56:07.000+00:00
        profileId: 5
        translations:
        - profileCommitmentId: 4
          profileTranslation: ""
          profileId: 6
          profileTranslationId: 8
          title: title
        - profileCommitmentId: 4
          profileTranslation: ""
          profileId: 6
          profileTranslationId: 8
          title: title
        companyUserId: 3
        links:
        - null
        - null
        id: 0
        startDate: 2000-01-23T04:56:07.000+00:00
        url: url
    CompanyUserProfileCommitmentTranslationModel:
      type: object
      properties:
        profileCommitmentId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        profileId:
          type: integer
          format: int32
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        profileTranslation:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserProfileTranslationModel'
      additionalProperties: false
      example:
        profileCommitmentId: 4
        profileTranslation: ""
        profileId: 6
        profileTranslationId: 8
        title: title
    CompanyUserProfileEducationAddEditModel:
      required:
      - programName
      - schoolName
      type: object
      properties:
        schoolName:
          type: string
        programName:
          type: string
        degree:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        location:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/LocationModel'
        isCurrent:
          type: boolean
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        url:
          type: string
          nullable: true
      additionalProperties: false
    CompanyUserProfileEducationModel:
      type: object
      properties:
        profileId:
          type: integer
          format: int32
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        locationId:
          type: integer
          format: int32
          nullable: true
        translations:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileEducationTranslationModel'
        companyId:
          type: integer
          format: int32
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        url:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 3
        endDate: 2000-01-23T04:56:07.000+00:00
        profileId: 6
        locationId: 6
        translations:
        - profileTranslation: ""
          programName: programName
          profileId: 6
          degree: degree
          description: description
          profileTranslationId: 3
          profileEducationId: 5
          schoolName: schoolName
        - profileTranslation: ""
          programName: programName
          profileId: 6
          degree: degree
          description: description
          profileTranslationId: 3
          profileEducationId: 5
          schoolName: schoolName
        companyUserId: 7
        links:
        - null
        - null
        id: 0
        startDate: 2000-01-23T04:56:07.000+00:00
        url: url
    CompanyUserProfileEducationTranslationModel:
      type: object
      properties:
        profileEducationId:
          type: integer
          format: int32
          nullable: true
        schoolName:
          type: string
          nullable: true
        programName:
          type: string
          nullable: true
        degree:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        profileId:
          type: integer
          format: int32
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        profileTranslation:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserProfileTranslationModel'
      additionalProperties: false
      example:
        profileTranslation: ""
        programName: programName
        profileId: 6
        degree: degree
        description: description
        profileTranslationId: 3
        profileEducationId: 5
        schoolName: schoolName
    CompanyUserProfileEmployerAddEditModel:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        isCurrent:
          type: boolean
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        url:
          type: string
          nullable: true
      additionalProperties: false
    CompanyUserProfileEmployerModel:
      type: object
      properties:
        profileId:
          type: integer
          format: int32
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        isCurrent:
          type: boolean
        translations:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileEmployerTranslationModel'
        companyId:
          type: integer
          format: int32
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        url:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        isCurrent: true
        companyId: 5
        endDate: 2000-01-23T04:56:07.000+00:00
        profileId: 0
        translations:
        - profileTranslation: ""
          profileId: 1
          profileEmployerId: 6
          name: name
          description: description
          profileTranslationId: 5
          title: title
        - profileTranslation: ""
          profileId: 1
          profileEmployerId: 6
          name: name
          description: description
          profileTranslationId: 5
          title: title
        companyUserId: 2
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 7
        startDate: 2000-01-23T04:56:07.000+00:00
        url: url
    CompanyUserProfileEmployerTranslationModel:
      type: object
      properties:
        profileEmployerId:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        profileId:
          type: integer
          format: int32
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        profileTranslation:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserProfileTranslationModel'
      additionalProperties: false
      example:
        profileTranslation: ""
        profileId: 1
        profileEmployerId: 6
        name: name
        description: description
        profileTranslationId: 5
        title: title
    CompanyUserProfileExtSkillAddEditModel:
      required:
      - title
      type: object
      properties:
        title:
          type: string
      additionalProperties: false
    CompanyUserProfileExtSkillModel:
      type: object
      properties:
        profileId:
          type: integer
          format: int32
          nullable: true
        translations:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileExtSkillTranslationModel'
        companyId:
          type: integer
          format: int32
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        url:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 9
        profileId: 4
        translations:
        - profileTranslation: ""
          profileId: 9
          profileTranslationId: 0
          profileExtSkillId: 7
          title: title
        - profileTranslation: ""
          profileId: 9
          profileTranslationId: 0
          profileExtSkillId: 7
          title: title
        companyUserId: 0
        links:
        - null
        - null
        id: 7
        url: url
    CompanyUserProfileExtSkillTranslationModel:
      type: object
      properties:
        profileExtSkillId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        profileId:
          type: integer
          format: int32
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        profileTranslation:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserProfileTranslationModel'
      additionalProperties: false
      example:
        profileTranslation: ""
        profileId: 9
        profileTranslationId: 0
        profileExtSkillId: 7
        title: title
    CompanyUserProfileFullModel:
      type: object
      properties:
        employers:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileEmployerModel'
        workExperience:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileWorkExperienceModel'
        education:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileEducationModel'
        training:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileTrainingModel'
        references:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileReferenceModel'
        skills:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileSkillModel'
        extSkills:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileExtSkillModel'
        commitments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileCommitmentModel'
        languages:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileLanguageModel'
        userId:
          type: string
          format: uuid
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        createdWhen:
          type: string
          format: date-time
          nullable: true
        updatedWhen:
          type: string
          format: date-time
          nullable: true
        publishedWhen:
          type: string
          format: date-time
          nullable: true
        presentation:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserProfilePresentationModel'
        profileTranslationId:
          type: integer
          format: int32
        profileTranslation:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserProfileTranslationModel'
        translations:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileTranslationModel'
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        employers:
        - isCurrent: true
          companyId: 5
          endDate: 2000-01-23T04:56:07.000+00:00
          profileId: 0
          translations:
          - profileTranslation: ""
            profileId: 1
            profileEmployerId: 6
            name: name
            description: description
            profileTranslationId: 5
            title: title
          - profileTranslation: ""
            profileId: 1
            profileEmployerId: 6
            name: name
            description: description
            profileTranslationId: 5
            title: title
          companyUserId: 2
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 7
          startDate: 2000-01-23T04:56:07.000+00:00
          url: url
        - isCurrent: true
          companyId: 5
          endDate: 2000-01-23T04:56:07.000+00:00
          profileId: 0
          translations:
          - profileTranslation: ""
            profileId: 1
            profileEmployerId: 6
            name: name
            description: description
            profileTranslationId: 5
            title: title
          - profileTranslation: ""
            profileId: 1
            profileEmployerId: 6
            name: name
            description: description
            profileTranslationId: 5
            title: title
          companyUserId: 2
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 7
          startDate: 2000-01-23T04:56:07.000+00:00
          url: url
        commitments:
        - companyId: 4
          endDate: 2000-01-23T04:56:07.000+00:00
          profileId: 5
          translations:
          - profileCommitmentId: 4
            profileTranslation: ""
            profileId: 6
            profileTranslationId: 8
            title: title
          - profileCommitmentId: 4
            profileTranslation: ""
            profileId: 6
            profileTranslationId: 8
            title: title
          companyUserId: 3
          links:
          - null
          - null
          id: 0
          startDate: 2000-01-23T04:56:07.000+00:00
          url: url
        - companyId: 4
          endDate: 2000-01-23T04:56:07.000+00:00
          profileId: 5
          translations:
          - profileCommitmentId: 4
            profileTranslation: ""
            profileId: 6
            profileTranslationId: 8
            title: title
          - profileCommitmentId: 4
            profileTranslation: ""
            profileId: 6
            profileTranslationId: 8
            title: title
          companyUserId: 3
          links:
          - null
          - null
          id: 0
          startDate: 2000-01-23T04:56:07.000+00:00
          url: url
        education:
        - companyId: 3
          endDate: 2000-01-23T04:56:07.000+00:00
          profileId: 6
          locationId: 6
          translations:
          - profileTranslation: ""
            programName: programName
            profileId: 6
            degree: degree
            description: description
            profileTranslationId: 3
            profileEducationId: 5
            schoolName: schoolName
          - profileTranslation: ""
            programName: programName
            profileId: 6
            degree: degree
            description: description
            profileTranslationId: 3
            profileEducationId: 5
            schoolName: schoolName
          companyUserId: 7
          links:
          - null
          - null
          id: 0
          startDate: 2000-01-23T04:56:07.000+00:00
          url: url
        - companyId: 3
          endDate: 2000-01-23T04:56:07.000+00:00
          profileId: 6
          locationId: 6
          translations:
          - profileTranslation: ""
            programName: programName
            profileId: 6
            degree: degree
            description: description
            profileTranslationId: 3
            profileEducationId: 5
            schoolName: schoolName
          - profileTranslation: ""
            programName: programName
            profileId: 6
            degree: degree
            description: description
            profileTranslationId: 3
            profileEducationId: 5
            schoolName: schoolName
          companyUserId: 7
          links:
          - null
          - null
          id: 0
          startDate: 2000-01-23T04:56:07.000+00:00
          url: url
        profileTranslation: ""
        references:
        - firstName: firstName
          lastName: lastName
          profileWorkExperienceId: 5
          companyId: 6
          profileId: 7
          translations:
          - profileTranslation: ""
            profileId: 4
            profileReferenceId: 3
            company: company
            profileTranslationId: 0
            position: position
            text: text
          - profileTranslation: ""
            profileId: 4
            profileReferenceId: 3
            company: company
            profileTranslationId: 0
            position: position
            text: text
          companyUserId: 4
          telephone: telephone
          links:
          - null
          - null
          id: 1
          email: email
          url: url
        - firstName: firstName
          lastName: lastName
          profileWorkExperienceId: 5
          companyId: 6
          profileId: 7
          translations:
          - profileTranslation: ""
            profileId: 4
            profileReferenceId: 3
            company: company
            profileTranslationId: 0
            position: position
            text: text
          - profileTranslation: ""
            profileId: 4
            profileReferenceId: 3
            company: company
            profileTranslationId: 0
            position: position
            text: text
          companyUserId: 4
          telephone: telephone
          links:
          - null
          - null
          id: 1
          email: email
          url: url
        languages:
        - companyId: 8
          level: 1
          profileId: 2
          companyUserId: 6
          language: ""
          links:
          - null
          - null
          id: 4
          url: url
        - companyId: 8
          level: 1
          profileId: 2
          companyUserId: 6
          language: ""
          links:
          - null
          - null
          id: 4
          url: url
        companyUserId: 1
        workExperience:
        - skills:
          - changeHistory:
            - keywordId: 5
              level: 1
              profileId: 4
              id: 7
              favourite: true
              changeDateTime: 2000-01-23T04:56:07.000+00:00
            - keywordId: 5
              level: 1
              profileId: 4
              id: 7
              favourite: true
              changeDateTime: 2000-01-23T04:56:07.000+00:00
            level: 1
            companyUserId: 3
            favourite: true
            url: url
            levelGoalDeadline: 2000-01-23T04:56:07.000+00:00
            companyId: 6
            levelGoal: 6
            profileId: 1
            translations:
            - keywordId: 9
              keywordSynonym: ""
              keywordSynonymId: 9
              profileTranslation: ""
              profileId: 6
              profileTranslationId: 8
              keyword: ""
            - keywordId: 9
              keywordSynonym: ""
              keywordSynonymId: 9
              profileTranslation: ""
              profileId: 6
              profileTranslationId: 8
              keyword: ""
            links:
            - null
            - null
            numberOfDaysWorkExperience: 9
            id: 6
            keyword: ""
          - changeHistory:
            - keywordId: 5
              level: 1
              profileId: 4
              id: 7
              favourite: true
              changeDateTime: 2000-01-23T04:56:07.000+00:00
            - keywordId: 5
              level: 1
              profileId: 4
              id: 7
              favourite: true
              changeDateTime: 2000-01-23T04:56:07.000+00:00
            level: 1
            companyUserId: 3
            favourite: true
            url: url
            levelGoalDeadline: 2000-01-23T04:56:07.000+00:00
            companyId: 6
            levelGoal: 6
            profileId: 1
            translations:
            - keywordId: 9
              keywordSynonym: ""
              keywordSynonymId: 9
              profileTranslation: ""
              profileId: 6
              profileTranslationId: 8
              keyword: ""
            - keywordId: 9
              keywordSynonym: ""
              keywordSynonymId: 9
              profileTranslation: ""
              profileId: 6
              profileTranslationId: 8
              keyword: ""
            links:
            - null
            - null
            numberOfDaysWorkExperience: 9
            id: 6
            keyword: ""
          isCurrent: true
          companyId: 1
          endDate: 2000-01-23T04:56:07.000+00:00
          profileId: 9
          translations:
          - profileWorkExperienceId: 2
            profileTranslation: ""
            profileId: 4
            employer: employer
            description: description
            profileTranslationId: 7
            title: title
          - profileWorkExperienceId: 2
            profileTranslation: ""
            profileId: 4
            employer: employer
            description: description
            profileTranslationId: 7
            title: title
          locationId: 1
          companyUserId: 2
          links:
          - null
          - null
          id: 3
          startDate: 2000-01-23T04:56:07.000+00:00
          url: url
        - skills:
          - changeHistory:
            - keywordId: 5
              level: 1
              profileId: 4
              id: 7
              favourite: true
              changeDateTime: 2000-01-23T04:56:07.000+00:00
            - keywordId: 5
              level: 1
              profileId: 4
              id: 7
              favourite: true
              changeDateTime: 2000-01-23T04:56:07.000+00:00
            level: 1
            companyUserId: 3
            favourite: true
            url: url
            levelGoalDeadline: 2000-01-23T04:56:07.000+00:00
            companyId: 6
            levelGoal: 6
            profileId: 1
            translations:
            - keywordId: 9
              keywordSynonym: ""
              keywordSynonymId: 9
              profileTranslation: ""
              profileId: 6
              profileTranslationId: 8
              keyword: ""
            - keywordId: 9
              keywordSynonym: ""
              keywordSynonymId: 9
              profileTranslation: ""
              profileId: 6
              profileTranslationId: 8
              keyword: ""
            links:
            - null
            - null
            numberOfDaysWorkExperience: 9
            id: 6
            keyword: ""
          - changeHistory:
            - keywordId: 5
              level: 1
              profileId: 4
              id: 7
              favourite: true
              changeDateTime: 2000-01-23T04:56:07.000+00:00
            - keywordId: 5
              level: 1
              profileId: 4
              id: 7
              favourite: true
              changeDateTime: 2000-01-23T04:56:07.000+00:00
            level: 1
            companyUserId: 3
            favourite: true
            url: url
            levelGoalDeadline: 2000-01-23T04:56:07.000+00:00
            companyId: 6
            levelGoal: 6
            profileId: 1
            translations:
            - keywordId: 9
              keywordSynonym: ""
              keywordSynonymId: 9
              profileTranslation: ""
              profileId: 6
              profileTranslationId: 8
              keyword: ""
            - keywordId: 9
              keywordSynonym: ""
              keywordSynonymId: 9
              profileTranslation: ""
              profileId: 6
              profileTranslationId: 8
              keyword: ""
            links:
            - null
            - null
            numberOfDaysWorkExperience: 9
            id: 6
            keyword: ""
          isCurrent: true
          companyId: 1
          endDate: 2000-01-23T04:56:07.000+00:00
          profileId: 9
          translations:
          - profileWorkExperienceId: 2
            profileTranslation: ""
            profileId: 4
            employer: employer
            description: description
            profileTranslationId: 7
            title: title
          - profileWorkExperienceId: 2
            profileTranslation: ""
            profileId: 4
            employer: employer
            description: description
            profileTranslationId: 7
            title: title
          locationId: 1
          companyUserId: 2
          links:
          - null
          - null
          id: 3
          startDate: 2000-01-23T04:56:07.000+00:00
          url: url
        training:
        - trainingType: ""
          companyId: 3
          code: code
          year: 0
          profileId: 7
          translations:
          - profileTranslation: ""
            profileId: 8
            supplier: supplier
            description: description
            profileTrainingId: 4
            profileTranslationId: 7
            title: title
            issuer: issuer
          - profileTranslation: ""
            profileId: 8
            supplier: supplier
            description: description
            profileTrainingId: 4
            profileTranslationId: 7
            title: title
            issuer: issuer
          companyUserId: 3
          expireDate: 2000-01-23T04:56:07.000+00:00
          links:
          - null
          - null
          id: 6
          url: url
        - trainingType: ""
          companyId: 3
          code: code
          year: 0
          profileId: 7
          translations:
          - profileTranslation: ""
            profileId: 8
            supplier: supplier
            description: description
            profileTrainingId: 4
            profileTranslationId: 7
            title: title
            issuer: issuer
          - profileTranslation: ""
            profileId: 8
            supplier: supplier
            description: description
            profileTrainingId: 4
            profileTranslationId: 7
            title: title
            issuer: issuer
          companyUserId: 3
          expireDate: 2000-01-23T04:56:07.000+00:00
          links:
          - null
          - null
          id: 6
          url: url
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        createdWhen: 2000-01-23T04:56:07.000+00:00
        skills:
        - null
        - null
        presentation: ""
        companyId: 9
        extSkills:
        - companyId: 9
          profileId: 4
          translations:
          - profileTranslation: ""
            profileId: 9
            profileTranslationId: 0
            profileExtSkillId: 7
            title: title
          - profileTranslation: ""
            profileId: 9
            profileTranslationId: 0
            profileExtSkillId: 7
            title: title
          companyUserId: 0
          links:
          - null
          - null
          id: 7
          url: url
        - companyId: 9
          profileId: 4
          translations:
          - profileTranslation: ""
            profileId: 9
            profileTranslationId: 0
            profileExtSkillId: 7
            title: title
          - profileTranslation: ""
            profileId: 9
            profileTranslationId: 0
            profileExtSkillId: 7
            title: title
          companyUserId: 0
          links:
          - null
          - null
          id: 7
          url: url
        translations:
        - profileId: 7
          languageBranchId: 9
          profileTranslationId: 2
          languageBranch: ""
        - profileId: 7
          languageBranchId: 9
          profileTranslationId: 2
          languageBranch: ""
        publishedWhen: 2000-01-23T04:56:07.000+00:00
        profileTranslationId: 3
        links:
        - null
        - null
        id: 8
        updatedWhen: 2000-01-23T04:56:07.000+00:00
    CompanyUserProfileLanguageAddEditModel:
      required:
      - languageId
      type: object
      properties:
        languageId:
          type: integer
          format: int32
        level:
          allOf:
          - $ref: '#/components/schemas/LanguageLevel'
      additionalProperties: false
    CompanyUserProfileLanguageBranchModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        languageId:
          type: integer
          format: int32
          nullable: true
        language:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ProfileLanguageModel'
        enabled:
          type: boolean
      additionalProperties: false
    CompanyUserProfileLanguageModel:
      type: object
      properties:
        profileId:
          type: integer
          format: int32
          nullable: true
        language:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ProfileLanguageModel'
        level:
          type: integer
          format: int32
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        url:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 8
        level: 1
        profileId: 2
        companyUserId: 6
        language: ""
        links:
        - null
        - null
        id: 4
        url: url
    CompanyUserProfilePresentationEditModel:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        personalDescription:
          type: string
          nullable: true
      additionalProperties: false
    CompanyUserProfilePresentationModel:
      type: object
      properties:
        translations:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfilePresentationTranslationModel'
        companyId:
          type: integer
          format: int32
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        url:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 1
        translations:
        - profileTranslation: ""
          personalDescription: personalDescription
          profileId: 0
          description: description
          profileTranslationId: 6
          title: title
        - profileTranslation: ""
          personalDescription: personalDescription
          profileId: 0
          description: description
          profileTranslationId: 6
          title: title
        companyUserId: 5
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 5
        url: url
    CompanyUserProfilePresentationTranslationModel:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        personalDescription:
          type: string
          nullable: true
        profileId:
          type: integer
          format: int32
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        profileTranslation:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserProfileTranslationModel'
      additionalProperties: false
      example:
        profileTranslation: ""
        personalDescription: personalDescription
        profileId: 0
        description: description
        profileTranslationId: 6
        title: title
    CompanyUserProfileReferenceAddEditModel:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        telephone:
          type: string
          nullable: true
        company:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        text:
          type: string
          nullable: true
        profileWorkExperienceId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    CompanyUserProfileReferenceModel:
      type: object
      properties:
        profileId:
          type: integer
          format: int32
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        telephone:
          type: string
          nullable: true
        profileWorkExperienceId:
          type: integer
          format: int32
          nullable: true
        translations:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileReferenceTranslationModel'
        companyId:
          type: integer
          format: int32
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        url:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        firstName: firstName
        lastName: lastName
        profileWorkExperienceId: 5
        companyId: 6
        profileId: 7
        translations:
        - profileTranslation: ""
          profileId: 4
          profileReferenceId: 3
          company: company
          profileTranslationId: 0
          position: position
          text: text
        - profileTranslation: ""
          profileId: 4
          profileReferenceId: 3
          company: company
          profileTranslationId: 0
          position: position
          text: text
        companyUserId: 4
        telephone: telephone
        links:
        - null
        - null
        id: 1
        email: email
        url: url
    CompanyUserProfileReferenceTranslationModel:
      type: object
      properties:
        profileReferenceId:
          type: integer
          format: int32
          nullable: true
        company:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        text:
          type: string
          nullable: true
        profileId:
          type: integer
          format: int32
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        profileTranslation:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserProfileTranslationModel'
      additionalProperties: false
      example:
        profileTranslation: ""
        profileId: 4
        profileReferenceId: 3
        company: company
        profileTranslationId: 0
        position: position
        text: text
    CompanyUserProfileSkillAddModel:
      type: object
      properties:
        keywordSynonymId:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
        level:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    CompanyUserProfileSkillEditModel:
      type: object
      properties:
        keywordSynonymId:
          type: integer
          format: int32
          nullable: true
        level:
          type: integer
          format: int32
      additionalProperties: false
    CompanyUserProfileSkillHistoryModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        changeDateTime:
          type: string
          format: date-time
          nullable: true
        level:
          type: integer
          format: int32
          nullable: true
        profileId:
          type: integer
          format: int32
          nullable: true
        keywordId:
          type: integer
          format: int32
          nullable: true
        favourite:
          type: boolean
      additionalProperties: false
      example:
        keywordId: 5
        level: 1
        profileId: 4
        id: 7
        favourite: true
        changeDateTime: 2000-01-23T04:56:07.000+00:00
    CompanyUserProfileSkillModel:
      type: object
      properties:
        profileId:
          type: integer
          format: int32
          nullable: true
        level:
          type: integer
          format: int32
          nullable: true
        levelGoal:
          type: integer
          format: int32
          nullable: true
        levelGoalDeadline:
          type: string
          format: date-time
          nullable: true
        keyword:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/KeywordModel'
        changeHistory:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileSkillHistoryModel'
        translations:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileSkillTranslationModel'
        favourite:
          type: boolean
        numberOfDaysWorkExperience:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        url:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        changeHistory:
        - keywordId: 5
          level: 1
          profileId: 4
          id: 7
          favourite: true
          changeDateTime: 2000-01-23T04:56:07.000+00:00
        - keywordId: 5
          level: 1
          profileId: 4
          id: 7
          favourite: true
          changeDateTime: 2000-01-23T04:56:07.000+00:00
        level: 1
        companyUserId: 3
        favourite: true
        url: url
        levelGoalDeadline: 2000-01-23T04:56:07.000+00:00
        companyId: 6
        levelGoal: 6
        profileId: 1
        translations:
        - keywordId: 9
          keywordSynonym: ""
          keywordSynonymId: 9
          profileTranslation: ""
          profileId: 6
          profileTranslationId: 8
          keyword: ""
        - keywordId: 9
          keywordSynonym: ""
          keywordSynonymId: 9
          profileTranslation: ""
          profileId: 6
          profileTranslationId: 8
          keyword: ""
        links:
        - null
        - null
        numberOfDaysWorkExperience: 9
        id: 6
        keyword: ""
    CompanyUserProfileSkillTranslationModel:
      type: object
      properties:
        keywordId:
          type: integer
          format: int32
          nullable: true
        keywordSynonymId:
          type: integer
          format: int32
          nullable: true
        keywordSynonym:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/KeywordSynonymModel'
        keyword:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/KeywordModel'
        profileId:
          type: integer
          format: int32
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        profileTranslation:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserProfileTranslationModel'
      additionalProperties: false
      example:
        keywordId: 9
        keywordSynonym: ""
        keywordSynonymId: 9
        profileTranslation: ""
        profileId: 6
        profileTranslationId: 8
        keyword: ""
    CompanyUserProfileTrainingAddEditModel:
      type: object
      properties:
        title:
          type: string
          nullable: true
        year:
          type: integer
          format: int32
        issuer:
          type: string
          nullable: true
        supplier:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        trainingType:
          allOf:
          - $ref: '#/components/schemas/TrainingType'
        url:
          type: string
          nullable: true
        expireDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    CompanyUserProfileTrainingModel:
      type: object
      properties:
        profileId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        trainingType:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/TrainingType'
        year:
          type: integer
          format: int32
          nullable: true
        code:
          type: string
          nullable: true
        translations:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileTrainingTranslationModel'
        expireDate:
          type: string
          format: date-time
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        url:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        trainingType: ""
        companyId: 3
        code: code
        year: 0
        profileId: 7
        translations:
        - profileTranslation: ""
          profileId: 8
          supplier: supplier
          description: description
          profileTrainingId: 4
          profileTranslationId: 7
          title: title
          issuer: issuer
        - profileTranslation: ""
          profileId: 8
          supplier: supplier
          description: description
          profileTrainingId: 4
          profileTranslationId: 7
          title: title
          issuer: issuer
        companyUserId: 3
        expireDate: 2000-01-23T04:56:07.000+00:00
        links:
        - null
        - null
        id: 6
        url: url
    CompanyUserProfileTrainingTranslationModel:
      type: object
      properties:
        profileTrainingId:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        issuer:
          type: string
          nullable: true
        supplier:
          type: string
          nullable: true
        profileId:
          type: integer
          format: int32
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        profileTranslation:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserProfileTranslationModel'
      additionalProperties: false
      example:
        profileTranslation: ""
        profileId: 8
        supplier: supplier
        description: description
        profileTrainingId: 4
        profileTranslationId: 7
        title: title
        issuer: issuer
    CompanyUserProfileTranslationModel:
      type: object
      properties:
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        profileId:
          type: integer
          format: int32
          nullable: true
        languageBranchId:
          type: integer
          format: int32
          nullable: true
        languageBranch:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserProfileLanguageBranchModel'
      additionalProperties: false
      example:
        profileId: 7
        languageBranchId: 9
        profileTranslationId: 2
        languageBranch: ""
    CompanyUserProfileWorkExperienceAddEditModel:
      required:
      - description
      - employer
      - startDate
      - title
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        employer:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
          nullable: true
        isCurrent:
          type: boolean
          nullable: true
        location:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/LocationModel'
        url:
          type: string
          nullable: true
        skills:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileWorkExperienceSkillAddModel'
      additionalProperties: false
    CompanyUserProfileWorkExperienceModel:
      type: object
      properties:
        profileId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        isCurrent:
          type: boolean
          nullable: true
        translations:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileWorkExperienceTranslationModel'
        locationId:
          type: integer
          format: int32
          nullable: true
        skills:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserProfileSkillModel'
        companyId:
          type: integer
          format: int32
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        url:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        skills:
        - changeHistory:
          - keywordId: 5
            level: 1
            profileId: 4
            id: 7
            favourite: true
            changeDateTime: 2000-01-23T04:56:07.000+00:00
          - keywordId: 5
            level: 1
            profileId: 4
            id: 7
            favourite: true
            changeDateTime: 2000-01-23T04:56:07.000+00:00
          level: 1
          companyUserId: 3
          favourite: true
          url: url
          levelGoalDeadline: 2000-01-23T04:56:07.000+00:00
          companyId: 6
          levelGoal: 6
          profileId: 1
          translations:
          - keywordId: 9
            keywordSynonym: ""
            keywordSynonymId: 9
            profileTranslation: ""
            profileId: 6
            profileTranslationId: 8
            keyword: ""
          - keywordId: 9
            keywordSynonym: ""
            keywordSynonymId: 9
            profileTranslation: ""
            profileId: 6
            profileTranslationId: 8
            keyword: ""
          links:
          - null
          - null
          numberOfDaysWorkExperience: 9
          id: 6
          keyword: ""
        - changeHistory:
          - keywordId: 5
            level: 1
            profileId: 4
            id: 7
            favourite: true
            changeDateTime: 2000-01-23T04:56:07.000+00:00
          - keywordId: 5
            level: 1
            profileId: 4
            id: 7
            favourite: true
            changeDateTime: 2000-01-23T04:56:07.000+00:00
          level: 1
          companyUserId: 3
          favourite: true
          url: url
          levelGoalDeadline: 2000-01-23T04:56:07.000+00:00
          companyId: 6
          levelGoal: 6
          profileId: 1
          translations:
          - keywordId: 9
            keywordSynonym: ""
            keywordSynonymId: 9
            profileTranslation: ""
            profileId: 6
            profileTranslationId: 8
            keyword: ""
          - keywordId: 9
            keywordSynonym: ""
            keywordSynonymId: 9
            profileTranslation: ""
            profileId: 6
            profileTranslationId: 8
            keyword: ""
          links:
          - null
          - null
          numberOfDaysWorkExperience: 9
          id: 6
          keyword: ""
        isCurrent: true
        companyId: 1
        endDate: 2000-01-23T04:56:07.000+00:00
        profileId: 9
        translations:
        - profileWorkExperienceId: 2
          profileTranslation: ""
          profileId: 4
          employer: employer
          description: description
          profileTranslationId: 7
          title: title
        - profileWorkExperienceId: 2
          profileTranslation: ""
          profileId: 4
          employer: employer
          description: description
          profileTranslationId: 7
          title: title
        locationId: 1
        companyUserId: 2
        links:
        - null
        - null
        id: 3
        startDate: 2000-01-23T04:56:07.000+00:00
        url: url
    CompanyUserProfileWorkExperienceSkillAddModel:
      required:
      - keywordSynonymId
      - name
      type: object
      properties:
        keywordSynonymId:
          type: integer
          format: int32
        name:
          type: string
      additionalProperties: false
    CompanyUserProfileWorkExperienceTranslationModel:
      type: object
      properties:
        profileWorkExperienceId:
          type: integer
          format: int32
          nullable: true
        employer:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        profileId:
          type: integer
          format: int32
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        profileTranslation:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserProfileTranslationModel'
      additionalProperties: false
      example:
        profileWorkExperienceId: 2
        profileTranslation: ""
        profileId: 4
        employer: employer
        description: description
        profileTranslationId: 7
        title: title
    CompanyUserProjectAssignmentModel:
      type: object
      properties:
        assigned:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectAssignmentBaseModel'
        prospect:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectAssignmentBaseModel'
      additionalProperties: false
      example:
        prospect:
        - null
        - null
        assigned:
        - companyId: 0
          endDate: 2000-01-23T04:56:07.000+00:00
          customerId: 6
          project: ""
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 5
          title: title
          projectId: 1
          startDate: 2000-01-23T04:56:07.000+00:00
          customer: ""
        - companyId: 0
          endDate: 2000-01-23T04:56:07.000+00:00
          customerId: 6
          project: ""
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 5
          title: title
          projectId: 1
          startDate: 2000-01-23T04:56:07.000+00:00
          customer: ""
    CompanyUserQuerySort:
      type: integer
      description: |2-


        CreatedDateTime = 0

        FirstName = 1

        LastName = 2

        Email = 3

        UpdatedDateTime = 4
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      x-enumNames:
      - CreatedDateTime
      - FirstName
      - LastName
      - Email
      - UpdatedDateTime
      x-enum-varnames:
      - CreatedDateTime
      - FirstName
      - LastName
      - Email
      - UpdatedDateTime
      x-ms-enum:
        name: CompanyUserQuerySort
        values:
        - name: CreatedDateTime
          value: 0
        - name: FirstName
          value: 1
        - name: LastName
          value: 2
        - name: Email
          value: 3
        - name: UpdatedDateTime
          value: 4
    CompanyUserQuerySortPageAndSortByModel:
      type: object
      properties:
        sortBy:
          allOf:
          - $ref: '#/components/schemas/CompanyUserQuerySort'
        sortOrder:
          description: "Ascending = 0 (Default)\r\nDescending = 1"
          allOf:
          - $ref: '#/components/schemas/SortOrder'
        page:
          type: integer
          format: int32
          default: 1
        itemsPerPage:
          type: integer
          format: int32
          default: 15
      additionalProperties: false
    CompanyUserResumeBaseModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        language:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyResumeTemplateLanguageModel'
        template:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyResumeTemplateBaseModel'
        isPublic:
          type: boolean
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        template: ""
        companyId: 1
        companyUserId: 6
        description: description
        isPublic: true
        language: ""
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 0
        title: title
        slug: slug
    CompanyUserSearchSkillModel:
      type: object
      properties:
        companyId:
          type: integer
          format: int32
        companyUserId:
          type: integer
          format: int32
          nullable: true
        firstname:
          type: string
          nullable: true
          readOnly: true
          deprecated: true
        firstName:
          type: string
          nullable: true
        lastname:
          type: string
          nullable: true
          readOnly: true
          deprecated: true
        lastName:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        seoId:
          type: string
          nullable: true
        addressId:
          type: integer
          format: int32
          nullable: true
        addressDisplayName:
          type: string
          nullable: true
        teams:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/TeamBaseModel'
        skills:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/SkillResultModel'
        status:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserStatus'
        companyCandidateId:
          type: integer
          format: int32
          nullable: true
        groups:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanySubcontractorGroupBaseModel'
        companyUserType:
          allOf:
          - $ref: '#/components/schemas/CompanyUserType'
      additionalProperties: false
      example:
        lastName: lastName
        firstname: firstname
        teams:
        - companyId: 6
          name: name
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 0
        - companyId: 6
          name: name
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 0
        companyCandidateId: 9
        companyUserId: 6
        addressDisplayName: addressDisplayName
        groups:
        - companyId: 1
          name: name
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 6
        - companyId: 1
          name: name
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 6
        title: title
        lastname: lastname
        addressId: 1
        companyUserType: ""
        skills:
        - keywordId: 5
          keywordSynonymId: 5
          keywordSynonymName: keywordSynonymName
          level: 7
          masterSynonymName: masterSynonymName
          masterSynonymId: 2
        - keywordId: 5
          keywordSynonymId: 5
          keywordSynonymName: keywordSynonymName
          level: 7
          masterSynonymName: masterSynonymName
          masterSynonymId: 2
        firstName: firstName
        companyId: 0
        seoId: seoId
        status: ""
    CompanyUserSkillModel:
      type: object
      properties:
        companyId:
          type: integer
          format: int32
        companyUserId:
          type: integer
          format: int32
        numberOfDaysWorkExperience:
          type: integer
          format: int32
        profileId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        level:
          type: integer
          format: int32
          nullable: true
        levelGoal:
          type: integer
          format: int32
          nullable: true
        levelGoalDeadline:
          type: string
          format: date-time
          nullable: true
        keyword:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/KeywordModel'
        favourite:
          type: boolean
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 0
        level: 2
        levelGoal: 7
        companyUserId: 6
        profileId: 5
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        numberOfDaysWorkExperience: 1
        id: 5
        keyword: ""
        favourite: true
        levelGoalDeadline: 2000-01-23T04:56:07.000+00:00
    CompanyUserStatus:
      type: integer
      description: |2-


        Disconnected = 0

        PreActive = 2

        Active = 3
      format: int32
      enum:
      - 0
      - 2
      - 3
      x-enumNames:
      - Disconnected
      - PreActive
      - Active
      x-enum-varnames:
      - Disconnected
      - PreActive
      - Active
      x-ms-enum:
        name: CompanyUserStatus
        values:
        - name: Disconnected
          value: 0
        - name: PreActive
          value: 2
        - name: Active
          value: 3
    CompanyUserSubcontractorAddEditModel:
      required:
      - email
      - firstName
      - gender
      - languageId
      - lastName
      - password
      - passwordConfirm
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        title:
          type: string
          nullable: true
        password:
          type: string
        passwordConfirm:
          type: string
        gender:
          allOf:
          - $ref: '#/components/schemas/UserGender'
        profileLanguageId:
          type: integer
          format: int32
          nullable: true
        createProfile:
          type: boolean
        tariff:
          type: integer
          format: int32
          nullable: true
        phone:
          type: string
          nullable: true
        currencyId:
          type: integer
          format: int32
          nullable: true
        languageId:
          type: integer
          format: int32
        companyCalendarId:
          type: integer
          format: int32
          nullable: true
        companyAddressId:
          type: integer
          format: int32
          nullable: true
        companyName:
          type: string
          nullable: true
        companyIdentifier:
          type: string
          nullable: true
        internalIdentifier:
          type: string
          nullable: true
        linkedIn:
          type: string
          nullable: true
        rating:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    CompanyUserSubcontractorAttachmentModel:
      type: object
      properties:
        companyUserId:
          type: integer
          format: int32
        attachmentType:
          allOf:
          - $ref: '#/components/schemas/AttachmentType'
        companyId:
          type: integer
          format: int32
          nullable: true
        id:
          type: string
          format: uuid
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 5
        attachmentType: ""
        companyUserId: 5
        description: description
        links:
        - null
        - null
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
    CompanyUserSubcontractorBaseModel:
      type: object
      properties:
        status:
          description: "Disconnected = 0\r\nActive = 1"
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserSubcontractorStatus'
        rating:
          type: integer
          format: int32
          nullable: true
        email:
          type: string
          nullable: true
        companyName:
          type: string
          nullable: true
        companyIdentifier:
          type: string
          nullable: true
        companyAddress:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyAddressModel'
        homeAddress:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/LocationModel'
        image:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserImageModel'
        desiredAssignment:
          type: string
          nullable: true
        internalIdentifier:
          type: string
          nullable: true
        twitter:
          type: string
          nullable: true
        linkedIn:
          type: string
          nullable: true
        homepage:
          type: string
          nullable: true
        blog:
          type: string
          nullable: true
        gitHub:
          type: string
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        seoId:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        companyUserType:
          description: "Employee = 0,\r\nCandidate = 10,\r\nSubcontractor = 20"
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserType'
        id:
          type: integer
          format: int32
          nullable: true
          deprecated: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        image: ""
        lastName: lastName
        gitHub: gitHub
        companyUserId: 6
        companyName: companyName
        rating: 0
        linkedIn: linkedIn
        blog: blog
        companyUserType: ""
        firstName: firstName
        twitter: twitter
        companyId: 1
        companyIdentifier: companyIdentifier
        internalIdentifier: internalIdentifier
        desiredAssignment: desiredAssignment
        companyAddress: ""
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 5
        seoId: seoId
        email: email
        status: ""
        homeAddress: ""
        homepage: homepage
    CompanyUserSubcontractorFileAttachmentListModel:
      type: object
      properties:
        companyUserId:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        attachments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserSubcontractorFileAttachmentModel'
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 6
        attachments:
        - fileName: fileName
          extension: extension
          companyId: 5
          attachmentType: ""
          companyUserId: 1
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
        - fileName: fileName
          extension: extension
          companyId: 5
          attachmentType: ""
          companyUserId: 1
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
        companyUserId: 0
        links:
        - null
        - null
    CompanyUserSubcontractorFileAttachmentModel:
      type: object
      properties:
        fileName:
          type: string
          nullable: true
        extension:
          type: string
          nullable: true
        companyUserId:
          type: integer
          format: int32
        attachmentType:
          allOf:
          - $ref: '#/components/schemas/AttachmentType'
        companyId:
          type: integer
          format: int32
          nullable: true
        id:
          type: string
          format: uuid
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        fileName: fileName
        extension: extension
        companyId: 5
        attachmentType: ""
        companyUserId: 1
        description: description
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
    CompanyUserSubcontractorModel:
      type: object
      properties:
        resumes:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserResumeBaseModel'
        defaultCurrency:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CurrencyModel'
        tariff:
          type: integer
          format: int32
          nullable: true
        createdDateTime:
          type: string
          format: date-time
        groups:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanySubcontractorGroupBaseModel'
        phone:
          type: string
          nullable: true
        tags:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyTagBaseModel'
        attachments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserSubcontractorAttachmentModel'
        status:
          description: "Disconnected = 0\r\nActive = 1"
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserSubcontractorStatus'
        rating:
          type: integer
          format: int32
          nullable: true
        email:
          type: string
          nullable: true
        companyName:
          type: string
          nullable: true
        companyIdentifier:
          type: string
          nullable: true
        companyAddress:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyAddressModel'
        homeAddress:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/LocationModel'
        image:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserImageModel'
        desiredAssignment:
          type: string
          nullable: true
        internalIdentifier:
          type: string
          nullable: true
        twitter:
          type: string
          nullable: true
        linkedIn:
          type: string
          nullable: true
        homepage:
          type: string
          nullable: true
        blog:
          type: string
          nullable: true
        gitHub:
          type: string
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        seoId:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        companyUserType:
          description: "Employee = 0,\r\nCandidate = 10,\r\nSubcontractor = 20"
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserType'
        id:
          type: integer
          format: int32
          nullable: true
          deprecated: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        lastName: lastName
        attachments:
        - companyId: 5
          attachmentType: ""
          companyUserId: 5
          description: description
          links:
          - null
          - null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
        - companyId: 5
          attachmentType: ""
          companyUserId: 5
          description: description
          links:
          - null
          - null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
        gitHub: gitHub
        companyName: companyName
        rating: 2
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        blog: blog
        resumes:
        - template: ""
          companyId: 1
          companyUserId: 6
          description: description
          isPublic: true
          language: ""
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 0
          title: title
          slug: slug
        - template: ""
          companyId: 1
          companyUserId: 6
          description: description
          isPublic: true
          language: ""
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 0
          title: title
          slug: slug
        companyUserType: ""
        twitter: twitter
        companyIdentifier: companyIdentifier
        defaultCurrency: ""
        tariff: 0
        links:
        - null
        - null
        id: 3
        seoId: seoId
        email: email
        homeAddress: ""
        image: ""
        companyUserId: 7
        groups:
        - companyId: 1
          name: name
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 6
        - companyId: 1
          name: name
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 6
        linkedIn: linkedIn
        tags:
        - companyId: 5
          name: name
          id: 5
          seoId: seoId
        - companyId: 5
          name: name
          id: 5
          seoId: seoId
        firstName: firstName
        companyId: 9
        internalIdentifier: internalIdentifier
        phone: phone
        desiredAssignment: desiredAssignment
        companyAddress: ""
        status: ""
        homepage: homepage
    CompanyUserSubcontractorStatus:
      type: integer
      description: |2-


        Disconnected = 0

        Active = 1
      format: int32
      enum:
      - 0
      - 1
      x-enumNames:
      - Disconnected
      - Active
      x-enum-varnames:
      - Disconnected
      - Active
      x-ms-enum:
        name: CompanyUserSubcontractorStatus
        values:
        - name: Disconnected
          value: 0
        - name: Active
          value: 1
    CompanyUserType:
      type: integer
      description: |2-


        Employee = 0

        Candidate = 10

        Subcontractor = 20

        Api = 30

        Bot = 40
      format: int32
      enum:
      - 0
      - 10
      - 20
      - 30
      - 40
      x-enumNames:
      - Employee
      - Candidate
      - Subcontractor
      - Api
      - Bot
      x-enum-varnames:
      - Employee
      - Candidate
      - Subcontractor
      - Api
      - Bot
      x-ms-enum:
        name: CompanyUserType
        values:
        - name: Employee
          value: 0
        - name: Candidate
          value: 10
        - name: Subcontractor
          value: 20
        - name: Api
          value: 30
        - name: Bot
          value: 40
    ContractType:
      type: integer
      description: |2-


        Hourly = 0

        Fixed = 1
      format: int32
      enum:
      - 0
      - 1
      x-enumNames:
      - Hourly
      - Fixed
      x-enum-varnames:
      - Hourly
      - Fixed
      x-ms-enum:
        name: ContractType
        values:
        - name: Hourly
          value: 0
        - name: Fixed
          value: 1
    ConvertCompanyUserToAadAccountModel:
      required:
      - objectIdentifier
      type: object
      properties:
        objectIdentifier:
          type: string
          format: uuid
      additionalProperties: false
    CreatedModel:
      type: object
      properties:
        companyUserId:
          type: integer
          format: int32
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        time:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    CurrencyModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        currencyCode:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
      example:
        description: description
        id: 7
        currencyCode: currencyCode
    CustomerEventBaseModel:
      type: object
      properties:
        customerId:
          type: integer
          format: int32
          nullable: true
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 6
        customerId: 0
        description: description
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: ""
        title: title
        eventDate: 2000-01-23T04:56:07.000+00:00
    CustomerEventMeetingAddEditModel:
      required:
      - title
      type: object
      properties:
        customerContactId:
          type: integer
          format: int32
          nullable: true
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        timezoneId:
          type: string
          description: "The desired timezone to be used for StartDateTime and EndDateTime\
            \ properties. Valid timezone ids can be found at https://nodatime.org/TimeZones\r\
            \nIf empty, the timezone of the executing user (API account) will be used."
          nullable: true
        assignedToCompanyUserId:
          type: integer
          format: int32
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/EventStatusValue'
        type:
          allOf:
          - $ref: '#/components/schemas/EventType'
        title:
          type: string
        description:
          type: string
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
      additionalProperties: false
    CustomerEventMeetingModel:
      type: object
      properties:
        customerContactId:
          type: integer
          format: int32
          nullable: true
        customerId:
          type: integer
          format: int32
          nullable: true
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        location:
          type: string
          nullable: true
        assignedToCompanyUserId:
          type: integer
          format: int32
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/EventStatusValue'
        createdByCompanyUserId:
          type: integer
          format: int32
        updatedByCompanyUserId:
          type: integer
          format: int32
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EventCommentModel'
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        customerContactId: 0
        comments:
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        assignedToCompanyUserId: 1
        createdByCompanyUserId: 5
        visibility: ""
        updatedByCompanyUserId: 5
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        endDateTime: 2000-01-23T04:56:07.000+00:00
        type: ""
        title: title
        companyId: 2
        startDateTime: 2000-01-23T04:56:07.000+00:00
        customerId: 6
        location: location
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
        status: ""
        eventDate: 2000-01-23T04:56:07.000+00:00
    CustomerEventModel:
      type: object
      properties:
        customerId:
          type: integer
          format: int32
          nullable: true
        createdByCompanyUserId:
          type: integer
          format: int32
        updatedByCompanyUserId:
          type: integer
          format: int32
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EventCommentModel'
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        comments:
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        createdByCompanyUserId: 6
        visibility: ""
        updatedByCompanyUserId: 1
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        type: ""
        title: title
        companyId: 5
        customerId: 0
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
        eventDate: 2000-01-23T04:56:07.000+00:00
    CustomerEventNoteAddEditModel:
      required:
      - title
      type: object
      properties:
        customerContactId:
          type: integer
          format: int32
          nullable: true
        noteType:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EventNoteType'
        noteDate:
          type: string
          format: date-time
          nullable: true
        timezoneId:
          type: string
          description: "The desired timezone to be used for NoteDate property. Valid\
            \ timezone ids can be found at https://nodatime.org/TimeZones\r\nIf empty,\
            \ the timezone of the executing user (API account) will be used."
          nullable: true
        type:
          allOf:
          - $ref: '#/components/schemas/EventType'
        title:
          type: string
        description:
          type: string
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
      additionalProperties: false
    CustomerEventNoteModel:
      type: object
      properties:
        customerContactId:
          type: integer
          format: int32
          nullable: true
        customerId:
          type: integer
          format: int32
          nullable: true
        noteType:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EventNoteType'
        noteDate:
          type: string
          format: date-time
          nullable: true
        createdByCompanyUserId:
          type: integer
          format: int32
        updatedByCompanyUserId:
          type: integer
          format: int32
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EventCommentModel'
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        customerContactId: 0
        comments:
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        createdByCompanyUserId: 1
        visibility: ""
        updatedByCompanyUserId: 5
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        type: ""
        title: title
        noteType: ""
        companyId: 5
        noteDate: 2000-01-23T04:56:07.000+00:00
        customerId: 6
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
        eventDate: 2000-01-23T04:56:07.000+00:00
    CustomerEventTaskAddEditModel:
      required:
      - title
      type: object
      properties:
        customerContactId:
          type: integer
          format: int32
          nullable: true
        taskType:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EventTaskType'
        hasTime:
          type: boolean
          nullable: true
        dueDateTime:
          type: string
          format: date-time
          nullable: true
        timezoneId:
          type: string
          description: "The desired timezone to be used for DueDateTime property.\
            \ Valid timezone ids can be found at https://nodatime.org/TimeZones\r\n\
            If empty, the timezone of the executing user (API account) will be used."
          nullable: true
        assignedToCompanyUserId:
          type: integer
          format: int32
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/EventStatusValue'
        type:
          allOf:
          - $ref: '#/components/schemas/EventType'
        title:
          type: string
        description:
          type: string
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
      additionalProperties: false
    CustomerEventTaskModel:
      type: object
      properties:
        customerContactId:
          type: integer
          format: int32
          nullable: true
        customerId:
          type: integer
          format: int32
          nullable: true
        taskType:
          description: "NotSpecified = 0\r\nPhone = 1\r\nEmail = 2"
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EventTaskType'
        hasTime:
          type: boolean
          nullable: true
        dueDateTime:
          type: string
          format: date-time
          nullable: true
        assignedToCompanyUserId:
          type: integer
          format: int32
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/EventStatusValue'
        createdByCompanyUserId:
          type: integer
          format: int32
        updatedByCompanyUserId:
          type: integer
          format: int32
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EventCommentModel'
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        customerContactId: 0
        comments:
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        assignedToCompanyUserId: 1
        createdByCompanyUserId: 5
        visibility: ""
        updatedByCompanyUserId: 5
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        type: ""
        title: title
        hasTime: true
        taskType: ""
        companyId: 2
        dueDateTime: 2000-01-23T04:56:07.000+00:00
        customerId: 6
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
        status: ""
        eventDate: 2000-01-23T04:56:07.000+00:00
    DynamicCompanyUserResumeModel:
      type: object
      properties:
        imageId:
          type: integer
          format: int32
          nullable: true
        created:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CreatedModel'
        updated:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/UpdatedModel'
        parentProfileId:
          type: integer
          format: int32
        profileTranslationId:
          type: integer
          format: int32
        parentCompanyUserResumeId:
          type: integer
          format: int32
          nullable: true
        resume:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/DynamicTemplateViewModel'
        id:
          type: integer
          format: int32
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        language:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyResumeTemplateLanguageModel'
        template:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyResumeTemplateBaseModel'
        isPublic:
          type: boolean
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        resume: ""
        template: ""
        imageId: 0
        created: ""
        companyUserId: 2
        description: description
        language: ""
        title: title
        parentProfileId: 6
        companyId: 7
        isPublic: true
        profileTranslationId: 1
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        parentCompanyUserResumeId: 5
        id: 5
        updated: ""
        slug: slug
    DynamicTemplateViewModel:
      required:
      - title
      type: object
      properties:
        blocks:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/IDynamicBlockViewModel'
        assets:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ITemplateStyleAssetViewModel'
        logotype:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ITemplateLogotype'
        id:
          type: integer
          format: int32
        companyUserId:
          type: integer
          format: int32
        slug:
          type: string
          nullable: true
        title:
          type: string
        description:
          type: string
          nullable: true
        logotypeId:
          type: integer
          format: int32
          nullable: true
        wordEnabled:
          type: boolean
        wordTemplatePath:
          type: string
          nullable: true
        profileImageSize:
          allOf:
          - $ref: '#/components/schemas/ImageSize'
        allowNoProfileImage:
          type: boolean
        hideProfileImageInEdit:
          type: boolean
        companyLogotypeImageSize:
          allOf:
          - $ref: '#/components/schemas/ImageSize'
        pdfEngineType:
          allOf:
          - $ref: '#/components/schemas/PdfEngineType'
        pdfOrientation:
          allOf:
          - $ref: '#/components/schemas/PdfOrientation'
        pdfMarginTop:
          type: integer
          format: int32
        pdfMarginRight:
          type: integer
          format: int32
        pdfMarginBottom:
          type: integer
          format: int32
        pdfMarginLeft:
          type: integer
          format: int32
        customFooterForWkhtml:
          type: boolean
        pdfFooter:
          type: boolean
        showPreviewToggle:
          type: boolean
        contactInfoId:
          type: integer
          format: int32
          nullable: true
        contactInfo:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/IContactInfoViewModel'
        userInfo:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ITemplateUserInfo'
        companyUserInfo:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserInfoBlockViewModel'
        profileImage:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ITemplateImage'
        company:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ITemplateCompany'
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        languageBranchId:
          type: integer
          format: int32
          nullable: true
        isPublic:
          type: boolean
        locked:
          type: boolean
        currentLanguage:
          type: string
          nullable: true
      additionalProperties: false
    EducationBlockItemModel:
      type: object
      properties:
        url:
          type: string
          nullable: true
        schoolName:
          type: string
          nullable: true
        programName:
          type: string
          nullable: true
        degree:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        location:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/LocationBlockModel'
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
          nullable: true
        parentBlockItemId:
          type: integer
          format: int32
          nullable: true
        parentBlockItemUpdated:
          type: boolean
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        updated:
          type: string
          format: date-time
          nullable: true
        discarded:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
        disabled:
          type: boolean
      additionalProperties: false
    EducationBlockModel:
      type: object
      properties:
        hideInEdit:
          type: boolean
        hideTitle:
          type: boolean
        hideDescription:
          type: boolean
        hideText:
          type: boolean
        data:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EducationBlockItemModel'
        blockId:
          type: string
          format: uuid
        updated:
          type: string
          format: date-time
          nullable: true
        heading:
          type: string
          nullable: true
      additionalProperties: false
    EmployerBlockItemModel:
      type: object
      properties:
        title:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
          nullable: true
        parentBlockItemId:
          type: integer
          format: int32
          nullable: true
        parentBlockItemUpdated:
          type: boolean
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        updated:
          type: string
          format: date-time
          nullable: true
        discarded:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
        disabled:
          type: boolean
      additionalProperties: false
    EmployerBlockModel:
      type: object
      properties:
        hideInEdit:
          type: boolean
        hideTitle:
          type: boolean
        hideDescription:
          type: boolean
        hideText:
          type: boolean
        data:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EmployerBlockItemModel'
        blockId:
          type: string
          format: uuid
        updated:
          type: string
          format: date-time
          nullable: true
        heading:
          type: string
          nullable: true
      additionalProperties: false
    ErrorModel:
      type: object
      properties:
        correlationId:
          type: string
          description: CorrelationId
          nullable: true
        status:
          type: string
          description: Severity of error
          nullable: true
        description:
          type: string
          description: Error description in plain text
          nullable: true
        code:
          type: integer
          description: Cinode specific error code
          format: int32
          nullable: true
        moreInfo:
          type: string
          description: Url to help page containing more information
          nullable: true
      additionalProperties: false
    EventCommentModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        eventId:
          type: string
          format: uuid
          nullable: true
        text:
          type: string
          nullable: true
        companyUserId:
          type: integer
          format: int32
        companyUserName:
          type: string
          nullable: true
        created:
          type: string
          format: date-time
      additionalProperties: false
      example:
        eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        companyUserId: 5
        created: 2000-01-23T04:56:07.000+00:00
        companyUserName: companyUserName
        id: 5
        text: text
    EventMeetingAddEditModel:
      required:
      - title
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        timezoneId:
          type: string
          description: "The desired timezone to be used for StartDateTime and EndDateTime\
            \ properties. Valid timezone ids can be found at https://nodatime.org/TimeZones\r\
            \nIf empty, the timezone of the executing user (API account) will be used."
          nullable: true
        assignedToCompanyUserId:
          type: integer
          format: int32
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/EventStatusValue'
        type:
          allOf:
          - $ref: '#/components/schemas/EventType'
        title:
          type: string
        description:
          type: string
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
      additionalProperties: false
    EventNoteAddEditModel:
      required:
      - title
      type: object
      properties:
        noteType:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EventNoteType'
        noteDate:
          type: string
          format: date-time
          nullable: true
        timezoneId:
          type: string
          description: "The desired timezone to be used for NoteDate property. Valid\
            \ timezone ids can be found at https://nodatime.org/TimeZones\r\nIf empty,\
            \ the timezone of the executing user (API account) will be used."
          nullable: true
        type:
          allOf:
          - $ref: '#/components/schemas/EventType'
        title:
          type: string
        description:
          type: string
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
      additionalProperties: false
    EventNoteType:
      type: integer
      description: |2-


        NotSpecified = 0

        Phone = 1

        Email = 2
      format: int32
      enum:
      - 0
      - 1
      - 2
      x-enumNames:
      - NotSpecified
      - Phone
      - Email
      x-enum-varnames:
      - NotSpecified
      - Phone
      - Email
      x-ms-enum:
        name: EventNoteType
        values:
        - name: NotSpecified
          value: 0
        - name: Phone
          value: 1
        - name: Email
          value: 2
    EventStatusValue:
      type: integer
      description: |2-


        NotStarted = 0

        InProgress = 1

        Completed = 2

        Deferred = 3

        WaitingForSomeoneElse = 4
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      x-enumNames:
      - NotStarted
      - InProgress
      - Completed
      - Deferred
      - WaitingForSomeoneElse
      x-enum-varnames:
      - NotStarted
      - InProgress
      - Completed
      - Deferred
      - WaitingForSomeoneElse
      x-ms-enum:
        name: EventStatusValue
        values:
        - name: NotStarted
          value: 0
        - name: InProgress
          value: 1
        - name: Completed
          value: 2
        - name: Deferred
          value: 3
        - name: WaitingForSomeoneElse
          value: 4
    EventTaskAddEditModel:
      required:
      - title
      type: object
      properties:
        taskType:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EventTaskType'
        hasTime:
          type: boolean
          nullable: true
        dueDateTime:
          type: string
          format: date-time
          nullable: true
        timezoneId:
          type: string
          description: "The desired timezone to be used for DueDateTime property.\
            \ Valid timezone ids can be found at https://nodatime.org/TimeZones\r\n\
            If empty, the timezone of the executing user (API account) will be used."
          nullable: true
        assignedToCompanyUserId:
          type: integer
          format: int32
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/EventStatusValue'
        type:
          allOf:
          - $ref: '#/components/schemas/EventType'
        title:
          type: string
        description:
          type: string
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
      additionalProperties: false
    EventTaskType:
      type: integer
      description: |2-


        NotSpecified = 0

        Phone = 1

        Email = 2
      format: int32
      enum:
      - 0
      - 1
      - 2
      x-enumNames:
      - NotSpecified
      - Phone
      - Email
      x-enum-varnames:
      - NotSpecified
      - Phone
      - Email
      x-ms-enum:
        name: EventTaskType
        values:
        - name: NotSpecified
          value: 0
        - name: Phone
          value: 1
        - name: Email
          value: 2
    EventType:
      type: integer
      description: |2-


        Meeting = 0

        Note = 1

        Task = 2

        Call = 3
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      x-enumNames:
      - Meeting
      - Note
      - Task
      - Call
      x-enum-varnames:
      - Meeting
      - Note
      - Task
      - Call
      x-ms-enum:
        name: EventType
        values:
        - name: Meeting
          value: 0
        - name: Note
          value: 1
        - name: Task
          value: 2
        - name: Call
          value: 3
    EventVisibility:
      type: integer
      description: |2-


        Public = 0

        Private = 1
      format: int32
      enum:
      - 0
      - 1
      x-enumNames:
      - Public
      - Private
      x-enum-varnames:
      - Public
      - Private
      x-ms-enum:
        name: EventVisibility
        values:
        - name: Public
          value: 0
        - name: Private
          value: 1
    ExtentType:
      type: integer
      description: |2-


        Percent = 0

        Hours = 1
      format: int32
      enum:
      - 0
      - 1
      x-enumNames:
      - Percent
      - Hours
      x-enum-varnames:
      - Percent
      - Hours
      x-ms-enum:
        name: ExtentType
        values:
        - name: Percent
          value: 0
        - name: Hours
          value: 1
    ExtraSkillBlockModel:
      type: object
      properties:
        data:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ExtraSkillItemBlockModel'
        blockId:
          type: string
          format: uuid
        updated:
          type: string
          format: date-time
          nullable: true
        heading:
          type: string
          nullable: true
      additionalProperties: false
    ExtraSkillItemBlockModel:
      type: object
      properties:
        title:
          type: string
          nullable: true
        parentBlockItemId:
          type: integer
          format: int32
          nullable: true
        parentBlockItemUpdated:
          type: boolean
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        updated:
          type: string
          format: date-time
          nullable: true
        discarded:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
        disabled:
          type: boolean
      additionalProperties: false
    FilterModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        values:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
      additionalProperties: false
    HighlightedWorkExperienceBlockItemModel:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        employer:
          type: string
          nullable: true
        location:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/LocationBlockModel'
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
          nullable: true
        url:
          type: string
          nullable: true
        logotype:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ImageBlockModel'
        parentBlockItemId:
          type: integer
          format: int32
          nullable: true
        parentBlockItemUpdated:
          type: boolean
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        updated:
          type: string
          format: date-time
          nullable: true
        discarded:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
        disabled:
          type: boolean
      additionalProperties: false
    HighlightedWorkExperienceBlockModel:
      type: object
      properties:
        numberOfItemsInList:
          type: integer
          format: int32
        titleLength:
          type: integer
          format: int32
        descriptionLength:
          type: integer
          format: int32
        employerLength:
          type: integer
          format: int32
        hideInEdit:
          type: boolean
        hideTitle:
          type: boolean
        hideDescription:
          type: boolean
        hideText:
          type: boolean
        data:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/HighlightedWorkExperienceBlockItemModel'
        blockId:
          type: string
          format: uuid
        updated:
          type: string
          format: date-time
          nullable: true
        heading:
          type: string
          nullable: true
      additionalProperties: false
    ICompanyAddressViewModel:
      type: object
      properties:
        addressId:
          type: integer
          format: int32
        street1:
          type: string
          nullable: true
        street2:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        addressType:
          allOf:
          - $ref: '#/components/schemas/AddressType'
      additionalProperties: false
    ICompanyCandidatePatchDocument:
      type: object
      properties:
        pipelineId:
          type: integer
          format: int32
          nullable: true
        pipelineStageId:
          type: integer
          format: int32
          nullable: true
        recruitmentManagerId:
          type: integer
          format: int32
          nullable: true
        state:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyCandidateState'
        availableFromDate:
          type: string
          format: date-time
          nullable: true
        campaignCode:
          type: string
          nullable: true
      additionalProperties: false
    ICompanyUserEmployeePatchDocument:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/CompanyUserStatus'
        employmentStartDate:
          type: string
          format: date-time
          nullable: true
        employmentEndDate:
          type: string
          format: date-time
          nullable: true
        employmentNumber:
          type: string
          nullable: true
        invoicingGoal:
          type: integer
          format: int32
          nullable: true
        mobility:
          type: integer
          format: int32
          nullable: true
        availabilityPercent:
          type: integer
          format: int32
          nullable: true
        availableFromDate:
          type: string
          format: date-time
          nullable: true
        title:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        taxTable:
          type: string
          nullable: true
        baseSalary:
          type: integer
          format: int32
          nullable: true
        provision:
          type: integer
          format: int32
          nullable: true
        hourlyTargetRate:
          type: integer
          format: int32
          nullable: true
        selfCost:
          type: integer
          format: int32
          nullable: true
        locationId:
          type: integer
          format: int32
          nullable: true
        defaultCurrencyId:
          type: integer
          format: int32
          nullable: true
        displayCurrencyId:
          type: integer
          format: int32
          nullable: true
        firstname:
          type: string
          nullable: true
        lastname:
          type: string
          nullable: true
        dateOfBirth:
          type: string
          format: date-time
          nullable: true
        gender:
          allOf:
          - $ref: '#/components/schemas/UserGender'
        companyCalendarId:
          type: integer
          format: int32
          nullable: true
        timezoneId:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        desiredAssignment:
          type: string
          nullable: true
        internalIdentifier:
          type: string
          nullable: true
        twitter:
          type: string
          nullable: true
        linkedIn:
          type: string
          nullable: true
        homepage:
          type: string
          nullable: true
        blog:
          type: string
          nullable: true
        gitHub:
          type: string
          nullable: true
      additionalProperties: false
    IContactInfoViewModel:
      type: object
      properties:
        contactInfoId:
          type: integer
          format: int32
        displayName:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        address:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ICompanyAddressViewModel'
      additionalProperties: false
    IDynamicBlockViewModel:
      type: object
      properties:
        viewComponentName:
          type: string
          nullable: true
          readOnly: true
        companyUserResumeId:
          type: integer
          format: int32
        companyUserId:
          type: integer
          format: int32
        isEditable:
          type: boolean
        partialEditViewPath:
          type: string
          nullable: true
        blockId:
          type: string
          format: uuid
        updated:
          type: string
          format: date-time
          nullable: true
        heading:
          type: string
          nullable: true
      additionalProperties: false
    ITemplateCompany:
      type: object
      properties:
        companyId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        seoId:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        corporateIdentityNumber:
          type: string
          nullable: true
        registrationYear:
          type: integer
          format: int32
        isTaxRegistered:
          type: boolean
      additionalProperties: false
    ITemplateImage:
      type: object
      properties:
        companyUserResumeId:
          type: integer
          format: int32
        companyUserId:
          type: integer
          format: int32
        imageId:
          type: integer
          format: int32
        imageUrl:
          type: string
          nullable: true
        imageOriginalUrl:
          type: string
          nullable: true
        allowNoProfileImage:
          type: boolean
        showImage:
          type: boolean
        imageSize:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/ImageSize'
        useDefaultImage:
          type: boolean
          readOnly: true
        imageFileName:
          type: string
          format: uuid
          readOnly: true
        extension:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    ITemplateLogotype:
      type: object
      properties:
        imageUrl:
          type: string
          nullable: true
          readOnly: true
        imageOriginalUrl:
          type: string
          nullable: true
          readOnly: true
        imageSize:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/ImageSize'
        imageFileName:
          type: string
          format: uuid
          readOnly: true
        extension:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    ITemplateStyleAssetViewModel:
      type: object
      properties:
        companyId:
          type: integer
          format: int32
          readOnly: true
        resumeTemplateId:
          type: integer
          format: int32
          readOnly: true
        id:
          type: integer
          format: int32
          readOnly: true
        fileName:
          type: string
          nullable: true
          readOnly: true
        version:
          type: string
          nullable: true
          readOnly: true
        order:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    ITemplateUserInfo:
      type: object
      properties:
        firstname:
          type: string
          nullable: true
        lastname:
          type: string
          nullable: true
        fullname:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        dateOfBirth:
          type: string
          format: date-time
          nullable: true
        email:
          type: string
          nullable: true
        twitterUserName:
          type: string
          nullable: true
        linkedInUserName:
          type: string
          nullable: true
        homepageUrl:
          type: string
          nullable: true
        bloggUrl:
          type: string
          nullable: true
        gitHubUserName:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        internalIdentifier:
          type: string
          nullable: true
      additionalProperties: false
    ImageBlockModel:
      type: object
      properties:
        imageId:
          type: integer
          format: int32
          nullable: true
        companyImageId:
          type: integer
          format: int32
          nullable: true
        imageOriginalUrl:
          type: string
          nullable: true
        imageFileName:
          type: string
          format: uuid
        extension:
          type: string
          nullable: true
        blockId:
          type: string
          format: uuid
        updated:
          type: string
          format: date-time
          nullable: true
        heading:
          type: string
          nullable: true
      additionalProperties: false
    ImageSize:
      type: integer
      description: |2-


        Original = 0

        H40W40 = 1

        H100W100 = 2

        H200W200 = 3

        H300W300 = 4

        W100 = 5

        H60 = 6

        H100 = 7

        H40 = 8

        W340 = 9

        W1800 = 10

        H750W1800 = 11

        H250 = 12

        H400W400 = 13

        W150 = 14

        W1200 = 15
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      x-enumNames:
      - Original
      - H40W40
      - H100W100
      - H200W200
      - H300W300
      - W100
      - H60
      - H100
      - H40
      - W340
      - W1800
      - H750W1800
      - H250
      - H400W400
      - W150
      - W1200
      x-enum-varnames:
      - Original
      - H40W40
      - H100W100
      - H200W200
      - H300W300
      - W100
      - H60
      - H100
      - H40
      - W340
      - W1800
      - H750W1800
      - H250
      - H400W400
      - W150
      - W1200
      x-ms-enum:
        name: ImageSize
        values:
        - name: Original
          value: 0
        - name: H40W40
          value: 1
        - name: H100W100
          value: 2
        - name: H200W200
          value: 3
        - name: H300W300
          value: 4
        - name: W100
          value: 5
        - name: H60
          value: 6
        - name: H100
          value: 7
        - name: H40
          value: 8
        - name: W340
          value: 9
        - name: W1800
          value: 10
        - name: H750W1800
          value: 11
        - name: H250
          value: 12
        - name: H400W400
          value: 13
        - name: W150
          value: 14
        - name: W1200
          value: 15
    JsonPatchDocument:
      type: array
      description: Array of patch operations to perform
      items:
        $ref: '#/components/schemas/Operation'
    KeywordModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        type:
          description: "Uncategorized = 0,\r\nIndustries = 1\r\nRoles = 2\r\nTools\
            \ = 3\r\nTechniques = 4\r\nMethodsProcesses = 5\r\nPlatforms = 6\r\nProducts\
            \ = 7\r\nCertifications = 10\r\nMaterials = 11\r\nSpecificationsRegulations\
            \ = 12\r\nHardware = 13\r\nOperationalAreaAndFunction = 14\r\nConstruction\
            \ = 15\r\nReportsInvestigations = 16\r\nSpecialitiesMedicine = 17\r\n\
            StandardsRegulations = 18\r\nAccreditation = 19"
          allOf:
          - $ref: '#/components/schemas/KeywordType'
        masterSynonymId:
          type: integer
          format: int32
          nullable: true
        masterSynonym:
          type: string
          nullable: true
        synonyms:
          type: array
          nullable: true
          items:
            type: string
        universal:
          type: boolean
        verified:
          type: boolean
      additionalProperties: false
      example:
        synonyms:
        - synonyms
        - synonyms
        verified: true
        id: 0
        type: ""
        masterSynonym: masterSynonym
        universal: true
        masterSynonymId: 6
    KeywordSynonymModel:
      type: object
      properties:
        keywordId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        keyword:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/KeywordModel'
        name:
          type: string
          nullable: true
        seoId:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        languageId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    KeywordType:
      type: integer
      description: |2-


        Uncategorized = 0

        Industries = 1

        Roles = 2

        Tools = 3

        Techniques = 4

        MethodsProcesses = 5

        Platforms = 6

        Products = 7

        Certifications = 10

        Materials = 11

        SpecificationsRegulations = 12

        Hardware = 13

        OperationalAreaAndFunction = 14

        Construction = 15

        ReportsInvestigations = 16

        SpecialitiesMedicine = 17

        StandardsRegulations = 18

        Accreditation = 19

        SoftSkills = 20

        CustomName = 100
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      - 16
      - 17
      - 18
      - 19
      - 20
      - 100
      x-enumNames:
      - Uncategorized
      - Industries
      - Roles
      - Tools
      - Techniques
      - MethodsProcesses
      - Platforms
      - Products
      - Certifications
      - Materials
      - SpecificationsRegulations
      - Hardware
      - OperationalAreaAndFunction
      - Construction
      - ReportsInvestigations
      - SpecialitiesMedicine
      - StandardsRegulations
      - Accreditation
      - SoftSkills
      - CustomName
      x-enum-varnames:
      - Uncategorized
      - Industries
      - Roles
      - Tools
      - Techniques
      - MethodsProcesses
      - Platforms
      - Products
      - Certifications
      - Materials
      - SpecificationsRegulations
      - Hardware
      - OperationalAreaAndFunction
      - Construction
      - ReportsInvestigations
      - SpecialitiesMedicine
      - StandardsRegulations
      - Accreditation
      - SoftSkills
      - CustomName
      x-ms-enum:
        name: KeywordType
        values:
        - name: Uncategorized
          value: 0
        - name: Industries
          value: 1
        - name: Roles
          value: 2
        - name: Tools
          value: 3
        - name: Techniques
          value: 4
        - name: MethodsProcesses
          value: 5
        - name: Platforms
          value: 6
        - name: Products
          value: 7
        - name: Certifications
          value: 10
        - name: Materials
          value: 11
        - name: SpecificationsRegulations
          value: 12
        - name: Hardware
          value: 13
        - name: OperationalAreaAndFunction
          value: 14
        - name: Construction
          value: 15
        - name: ReportsInvestigations
          value: 16
        - name: SpecialitiesMedicine
          value: 17
        - name: StandardsRegulations
          value: 18
        - name: Accreditation
          value: 19
        - name: SoftSkills
          value: 20
        - name: CustomName
          value: 100
    LanguageBlockModel:
      type: object
      properties:
        data:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/LanguageItemBlockModel'
        blockId:
          type: string
          format: uuid
        updated:
          type: string
          format: date-time
          nullable: true
        heading:
          type: string
          nullable: true
      additionalProperties: false
    LanguageItemBlockModel:
      type: object
      properties:
        culture:
          type: string
          nullable: true
        lang:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        level:
          type: integer
          format: int32
        languageId:
          type: integer
          format: int32
          nullable: true
        parentBlockItemId:
          type: integer
          format: int32
          nullable: true
        parentBlockItemUpdated:
          type: boolean
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        updated:
          type: string
          format: date-time
          nullable: true
        discarded:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
        disabled:
          type: boolean
      additionalProperties: false
    LanguageLevel:
      type: integer
      description: |2-


        Level0 = 0

        Level1 = 1

        Level2 = 2

        Level3 = 3

        Level4 = 4
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      x-enumNames:
      - Level0
      - Level1
      - Level2
      - Level3
      - Level4
      x-enum-varnames:
      - Level0
      - Level1
      - Level2
      - Level3
      - Level4
      x-ms-enum:
        name: LanguageLevel
        values:
        - name: Level0
          value: 0
        - name: Level1
          value: 1
        - name: Level2
          value: 2
        - name: Level3
          value: 3
        - name: Level4
          value: 4
    Link:
      type: object
      properties:
        href:
          type: string
          nullable: true
        rel:
          type: string
          nullable: true
        methods:
          type: array
          nullable: true
          items:
            type: string
      additionalProperties: false
      example:
        methods:
        - methods
        - methods
        rel: rel
        href: href
    LocationBlockModel:
      type: object
      properties:
        locationId:
          type: integer
          format: int32
        googleId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        streetNumber:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        formattedAddress:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        latitude:
          type: string
          nullable: true
        longitude:
          type: string
          nullable: true
        webSiteUrl:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
      additionalProperties: false
    LocationModel:
      type: object
      properties:
        locationId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        streetNumber:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        formattedAddress:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        latitude:
          type: string
          nullable: true
        longitude:
          type: string
          nullable: true
        webSiteUrl:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
      additionalProperties: false
    MentionTextModel:
      type: object
      properties:
        value:
          type: string
          nullable: true
      additionalProperties: false
    ModuleType:
      type: integer
      description: |2-


        CompanyUserResume = 1

        Customers = 2

        Assignments = 3

        Partners = 4

        Offers = 5

        Reports = 6

        Recruitment = 8

        Absence = 9

        Api = 10

        ReferenceText = 11

        ProfileCompleteness = 12

        CalendarSync = 13

        AllowWidgetModification = 14

        ConfiguredFilters = 19

        SkillSets = 20

        ProfileUpdateReminders = 21

        OverdueProjectReminders = 22

        ApplicationRegistration = 30

        ApplicationDirectory = 31

        NextGenResume = 40

        HideLinkToMvcProfilePageInSidebarAndRemoveEditAndCopyCVInoldViewAndTheBetaChips = 41

        ImportCv = 42

        ExternalAccounts = 50

        ConvertAccount = 51

        UserProvisioning = 52

        Webhooks = 60

        GrowthPlan = 70

        Intercom = 600
      format: int32
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 19
      - 20
      - 21
      - 22
      - 30
      - 31
      - 40
      - 41
      - 42
      - 50
      - 51
      - 52
      - 60
      - 70
      - 600
      x-enumNames:
      - CompanyUserResume
      - Customers
      - Assignments
      - Partners
      - Offers
      - Reports
      - Recruitment
      - Absence
      - Api
      - ReferenceText
      - ProfileCompleteness
      - CalendarSync
      - AllowWidgetModification
      - ConfiguredFilters
      - SkillSets
      - ProfileUpdateReminders
      - OverdueProjectReminders
      - ApplicationRegistration
      - ApplicationDirectory
      - NextGenResume
      - HideLinkToMvcProfilePageInSidebarAndRemoveEditAndCopyCVInoldViewAndTheBetaChips
      - ImportCv
      - ExternalAccounts
      - ConvertAccount
      - UserProvisioning
      - Webhooks
      - GrowthPlan
      - Intercom
      x-enum-varnames:
      - CompanyUserResume
      - Customers
      - Assignments
      - Partners
      - Offers
      - Reports
      - Recruitment
      - Absence
      - Api
      - ReferenceText
      - ProfileCompleteness
      - CalendarSync
      - AllowWidgetModification
      - ConfiguredFilters
      - SkillSets
      - ProfileUpdateReminders
      - OverdueProjectReminders
      - ApplicationRegistration
      - ApplicationDirectory
      - NextGenResume
      - HideLinkToMvcProfilePageInSidebarAndRemoveEditAndCopyCVInoldViewAndTheBetaChips
      - ImportCv
      - ExternalAccounts
      - ConvertAccount
      - UserProvisioning
      - Webhooks
      - GrowthPlan
      - Intercom
      x-ms-enum:
        name: ModuleType
        values:
        - name: CompanyUserResume
          value: 1
        - name: Customers
          value: 2
        - name: Assignments
          value: 3
        - name: Partners
          value: 4
        - name: Offers
          value: 5
        - name: Reports
          value: 6
        - name: Recruitment
          value: 8
        - name: Absence
          value: 9
        - name: Api
          value: 10
        - name: ReferenceText
          value: 11
        - name: ProfileCompleteness
          value: 12
        - name: CalendarSync
          value: 13
        - name: AllowWidgetModification
          value: 14
        - name: ConfiguredFilters
          value: 19
        - name: SkillSets
          value: 20
        - name: ProfileUpdateReminders
          value: 21
        - name: OverdueProjectReminders
          value: 22
        - name: ApplicationRegistration
          value: 30
        - name: ApplicationDirectory
          value: 31
        - name: NextGenResume
          value: 40
        - name: HideLinkToMvcProfilePageInSidebarAndRemoveEditAndCopyCVInoldViewAndTheBetaChips
          value: 41
        - name: ImportCv
          value: 42
        - name: ExternalAccounts
          value: 50
        - name: ConvertAccount
          value: 51
        - name: UserProvisioning
          value: 52
        - name: Webhooks
          value: 60
        - name: GrowthPlan
          value: 70
        - name: Intercom
          value: 600
    Operation:
      type: object
      properties:
        op:
          type: string
        value:
          type: object
          nullable: true
        path:
          type: string
    PdfEngineType:
      type: integer
      description: |2-


        WkHtmlToPdf = 0

        Puppeteer = 2
      format: int32
      enum:
      - 0
      - 2
      x-enumNames:
      - WkHtmlToPdf
      - Puppeteer
      x-enum-varnames:
      - WkHtmlToPdf
      - Puppeteer
      x-ms-enum:
        name: PdfEngineType
        values:
        - name: WkHtmlToPdf
          value: 0
        - name: Puppeteer
          value: 2
    PdfOrientation:
      type: integer
      description: |2-


        Portrait = 0

        Landscape = 1
      format: int32
      enum:
      - 0
      - 1
      x-enumNames:
      - Portrait
      - Landscape
      x-enum-varnames:
      - Portrait
      - Landscape
      x-ms-enum:
        name: PdfOrientation
        values:
        - name: Portrait
          value: 0
        - name: Landscape
          value: 1
    PresentationBlockModel:
      type: object
      properties:
        discarded:
          type: string
          format: date-time
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        personalDescription:
          type: string
          nullable: true
        personalDescriptionHeading:
          type: string
          nullable: true
          readOnly: true
          deprecated: true
        subHeading:
          type: string
          nullable: true
        useAdvancedFormatting:
          type: boolean
        editorSettings:
          type: string
          nullable: true
        hideSubHeading:
          type: boolean
        personalPresentationLength:
          type: integer
          format: int32
        showPersonalPresentation:
          type: boolean
        titleLength:
          type: integer
          format: int32
        descriptionLength:
          type: integer
          format: int32
        employerLength:
          type: integer
          format: int32
        blockId:
          type: string
          format: uuid
        updated:
          type: string
          format: date-time
          nullable: true
        heading:
          type: string
          nullable: true
      additionalProperties: false
    ProfileLanguageModel:
      type: object
      properties:
        languageId:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
        culture:
          type: string
          nullable: true
        lang:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
      additionalProperties: false
      example:
        country: country
        culture: culture
        languageId: 0
        name: name
        lang: lang
    ProjectAddEditModel:
      required:
      - customerId
      - title
      type: object
      properties:
        title:
          type: string
        customerId:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
        identifier:
          type: string
          nullable: true
        customerIdentifier:
          type: string
          nullable: true
        intermediatorId:
          type: integer
          format: int32
          nullable: true
        estimatedCloseDate:
          type: string
          format: date-time
          nullable: true
        estimatedValue:
          type: integer
          format: int32
          nullable: true
        probability:
          type: integer
          format: int32
          nullable: true
        pipelineId:
          type: integer
          format: int32
          nullable: true
        pipelineStageId:
          type: integer
          format: int32
          nullable: true
        currencyId:
          type: integer
          format: int32
          nullable: true
        projectState:
          allOf:
          - $ref: '#/components/schemas/ProjectState'
        location:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/LocationModel'
        teamId:
          type: integer
          format: int32
          nullable: true
        stateReasonId:
          type: integer
          format: int32
          nullable: true
        priority:
          allOf:
          - $ref: '#/components/schemas/ProjectPriority'
          default: 5
        salesManagerIds:
          type: array
          description: List of sales managers employee ids
          nullable: true
          items:
            type: integer
            format: int32
        projectManagerIds:
          type: array
          description: List of project managers employee ids
          nullable: true
          items:
            type: integer
            format: int32
      additionalProperties: false
    ProjectAssignmentAddModel:
      required:
      - title
      type: object
      properties:
        title:
          type: string
        description:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        rate:
          type: integer
          format: int32
          nullable: true
        extent:
          type: integer
          format: int32
          nullable: true
        oralAgreementToDate:
          type: string
          format: date-time
          nullable: true
        optionToDate:
          type: string
          format: date-time
          nullable: true
        contractType:
          allOf:
          - $ref: '#/components/schemas/ContractType'
        extentType:
          allOf:
          - $ref: '#/components/schemas/ExtentType'
        currencyId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ProjectAssignmentAllocationStatus:
      type: integer
      description: |2-


        NotBooked = 0

        Preliminary = 1

        Assigned = 2
      format: int32
      enum:
      - 0
      - 1
      - 2
      x-enumNames:
      - NotBooked
      - Preliminary
      - Assigned
      x-enum-varnames:
      - NotBooked
      - Preliminary
      - Assigned
      x-ms-enum:
        name: ProjectAssignmentAllocationStatus
        values:
        - name: NotBooked
          value: 0
        - name: Preliminary
          value: 1
        - name: Assigned
          value: 2
    ProjectAssignmentBaseModel:
      type: object
      properties:
        companyId:
          type: integer
          format: int32
        customerId:
          type: integer
          format: int32
        projectId:
          type: integer
          format: int32
        project:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ProjectBaseModel'
        customer:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyCustomerBaseModel'
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 0
        endDate: 2000-01-23T04:56:07.000+00:00
        customerId: 6
        project: ""
        description: description
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 5
        title: title
        projectId: 1
        startDate: 2000-01-23T04:56:07.000+00:00
        customer: ""
    ProjectAssignmentEditModel:
      required:
      - projectAssignmentId
      - title
      type: object
      properties:
        projectAssignmentId:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        rate:
          type: integer
          format: int32
          nullable: true
        extent:
          type: integer
          format: int32
          nullable: true
        oralAgreementToDate:
          type: string
          format: date-time
          nullable: true
        optionToDate:
          type: string
          format: date-time
          nullable: true
        contractType:
          allOf:
          - $ref: '#/components/schemas/ContractType'
        extentType:
          allOf:
          - $ref: '#/components/schemas/ExtentType'
        currencyId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ProjectAssignmentExtentType:
      type: integer
      description: |2-


        Percent = 0

        Hours = 1
      format: int32
      enum:
      - 0
      - 1
      x-enumNames:
      - Percent
      - Hours
      x-enum-varnames:
      - Percent
      - Hours
      x-ms-enum:
        name: ProjectAssignmentExtentType
        values:
        - name: Percent
          value: 0
        - name: Hours
          value: 1
    ProjectAssignmentFilterModel:
      type: object
      properties:
        pipelines:
          type: array
          description: Pipeline Ids can be retrieved from the Project Pipelines endpoint
          nullable: true
          items:
            type: integer
            format: int32
        projectAssignmentMemberTypes:
          type: array
          description: "0 - Employee\r\n1 - Partner consultant\r\n2- Subcontractor"
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectAssignmentMemberType'
        projectAssignmentStatuses:
          type: array
          description: "1 - Upcoming\r\n2 - Ongoing"
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectAssignmentStatus'
        teams:
          type: array
          description: Team Id of Employee assigned to Role
          nullable: true
          items:
            type: integer
            format: int32
        projectStates:
          type: array
          description: "0 - Open\r\n30 - Won\r\n40 - Lost\r\n50 - Abandoned\r\n60\
            \ - Suspended"
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectState'
        projectAssignmentAllocationStatuses:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectAssignmentAllocationStatus'
      additionalProperties: false
    ProjectAssignmentMemberAllocationStatus:
      type: integer
      description: |2-


        None = 0

        Preliminary = 1

        Assigned = 2

        Offered = 3
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      x-enumNames:
      - None
      - Preliminary
      - Assigned
      - Offered
      x-enum-varnames:
      - None
      - Preliminary
      - Assigned
      - Offered
      x-ms-enum:
        name: ProjectAssignmentMemberAllocationStatus
        values:
        - name: None
          value: 0
        - name: Preliminary
          value: 1
        - name: Assigned
          value: 2
        - name: Offered
          value: 3
    ProjectAssignmentMemberEmployeeAddModel:
      required:
      - companyUserId
      - status
      type: object
      properties:
        teamId:
          type: integer
          format: int32
          nullable: true
        companyUserId:
          type: integer
          format: int32
        status:
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentAllocationStatus'
      additionalProperties: false
    ProjectAssignmentMemberEmployeeEditModel:
      required:
      - companyUserId
      - id
      - state
      - status
      type: object
      properties:
        teamId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
        state:
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentMemberState'
        companyUserId:
          type: integer
          format: int32
        status:
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentAllocationStatus'
      additionalProperties: false
    ProjectAssignmentMemberModel:
      type: object
      properties:
        companyUserId:
          type: integer
          format: int32
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        seoId:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        companyUserType:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserType'
        status:
          description: Obsolete
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserStatus'
        projectAssignmentMemberId:
          type: integer
          format: int32
        projectAssignmentMemberState:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentMemberState'
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        firstName: firstName
        lastName: lastName
        companyId: 6
        projectAssignmentMemberState: ""
        companyUserId: 0
        projectAssignmentMemberId: 5
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 1
        seoId: seoId
        companyUserType: ""
        status: ""
    ProjectAssignmentMemberState:
      type: integer
      description: |2-


        Allocated = 0

        Offered = 10

        Rejected = 20

        Revoked = 30

        Deferred = 40
      format: int32
      enum:
      - 0
      - 10
      - 20
      - 30
      - 40
      x-enumNames:
      - Allocated
      - Offered
      - Rejected
      - Revoked
      - Deferred
      x-enum-varnames:
      - Allocated
      - Offered
      - Rejected
      - Revoked
      - Deferred
      x-ms-enum:
        name: ProjectAssignmentMemberState
        values:
        - name: Allocated
          value: 0
        - name: Offered
          value: 10
        - name: Rejected
          value: 20
        - name: Revoked
          value: 30
        - name: Deferred
          value: 40
    ProjectAssignmentMemberSubcontractorAddModel:
      required:
      - companyUserId
      - status
      type: object
      properties:
        groupId:
          type: integer
          format: int32
          nullable: true
        currencyId:
          type: integer
          format: int32
          nullable: true
        tariff:
          type: number
          format: double
          nullable: true
        companyUserId:
          type: integer
          format: int32
        status:
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentAllocationStatus'
      additionalProperties: false
    ProjectAssignmentMemberSubcontractorEditModel:
      required:
      - companyUserId
      - id
      - state
      - status
      type: object
      properties:
        groupId:
          type: integer
          format: int32
          nullable: true
        currencyId:
          type: integer
          format: int32
          nullable: true
        tariff:
          type: number
          format: double
          nullable: true
        id:
          type: integer
          format: int32
        state:
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentMemberState'
        companyUserId:
          type: integer
          format: int32
        status:
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentAllocationStatus'
      additionalProperties: false
    ProjectAssignmentMemberType:
      type: integer
      description: |2-


        Unspecified = 0

        CompanyUser = 1

        PartnerCompanyUser = 2

        CompanyUserSubcontractor = 3
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      x-enumNames:
      - Unspecified
      - CompanyUser
      - PartnerCompanyUser
      - CompanyUserSubcontractor
      x-enum-varnames:
      - Unspecified
      - CompanyUser
      - PartnerCompanyUser
      - CompanyUserSubcontractor
      x-ms-enum:
        name: ProjectAssignmentMemberType
        values:
        - name: Unspecified
          value: 0
        - name: CompanyUser
          value: 1
        - name: PartnerCompanyUser
          value: 2
        - name: CompanyUserSubcontractor
          value: 3
    ProjectAssignmentModel:
      type: object
      properties:
        company:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyBaseModel'
        assigned:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentMemberModel'
        prospects:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectAssignmentMemberModel'
        seoId:
          type: string
          nullable: true
        skills:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectAssignmentSkillBaseModel'
        projectAssignmentMemberId:
          type: integer
          format: int32
          nullable: true
        rate:
          type: integer
          format: int32
          nullable: true
        oralAgreementToDate:
          type: string
          format: date-time
          nullable: true
        optionToDate:
          type: string
          format: date-time
          nullable: true
        contractType:
          allOf:
          - $ref: '#/components/schemas/ContractType'
        extentType:
          allOf:
          - $ref: '#/components/schemas/ExtentType'
        extent:
          type: integer
          format: int32
          nullable: true
        isAssigned:
          type: boolean
          readOnly: true
        currency:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CurrencyModel'
        companyId:
          type: integer
          format: int32
        customerId:
          type: integer
          format: int32
        projectId:
          type: integer
          format: int32
        project:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ProjectBaseModel'
        customer:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyCustomerBaseModel'
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        extent: 1
        oralAgreementToDate: 2000-01-23T04:56:07.000+00:00
        endDate: 2000-01-23T04:56:07.000+00:00
        prospects:
        - firstName: firstName
          lastName: lastName
          companyId: 6
          projectAssignmentMemberState: ""
          companyUserId: 0
          projectAssignmentMemberId: 5
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 1
          seoId: seoId
          companyUserType: ""
          status: ""
        - firstName: firstName
          lastName: lastName
          companyId: 6
          projectAssignmentMemberState: ""
          companyUserId: 0
          projectAssignmentMemberId: 5
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 1
          seoId: seoId
          companyUserType: ""
          status: ""
        contractType: ""
        project: ""
        description: description
        title: title
        optionToDate: 2000-01-23T04:56:07.000+00:00
        skills:
        - keywordId: 3
          companyId: 5
          projectAssignmentId: 9
          level: 2
          customerId: 2
          links:
          - null
          - null
          keyword: ""
          projectId: 7
        - keywordId: 3
          companyId: 5
          projectAssignmentId: 9
          level: 2
          customerId: 2
          links:
          - null
          - null
          keyword: ""
          projectId: 7
        rate: 7
        customerId: 1
        company: ""
        currency: ""
        links:
        - null
        - null
        id: 7
        seoId: seoId
        projectAssignmentMemberId: 4
        extentType: ""
        companyId: 1
        isAssigned: true
        assigned: ""
        projectId: 6
        startDate: 2000-01-23T04:56:07.000+00:00
        customer: ""
    ProjectAssignmentSkillAddModel:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        keywordSynonymId:
          type: integer
          format: int32
          nullable: true
        level:
          type: integer
          format: int32
          nullable: true
        isMandatory:
          type: boolean
          nullable: true
      additionalProperties: false
    ProjectAssignmentSkillBaseModel:
      type: object
      properties:
        companyId:
          type: integer
          format: int32
        customerId:
          type: integer
          format: int32
        projectId:
          type: integer
          format: int32
        projectAssignmentId:
          type: integer
          format: int32
        keywordId:
          type: integer
          format: int32
        level:
          type: integer
          format: int32
        keyword:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/KeywordModel'
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        keywordId: 3
        companyId: 5
        projectAssignmentId: 9
        level: 2
        customerId: 2
        links:
        - null
        - null
        keyword: ""
        projectId: 7
    ProjectAssignmentSkillEditModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        level:
          type: integer
          format: int32
          nullable: true
        isMandatory:
          type: boolean
          nullable: true
      additionalProperties: false
    ProjectAssignmentSkillModel:
      type: object
      properties:
        projectAssignment:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentBaseModel'
        project:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ProjectBaseModel'
        company:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyBaseModel'
        customer:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyCustomerBaseModel'
        keywordSynonymId:
          type: integer
          format: int32
        keywordSynonym:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/KeywordSynonymModel'
        isMandatory:
          type: boolean
        companyId:
          type: integer
          format: int32
        customerId:
          type: integer
          format: int32
        projectId:
          type: integer
          format: int32
        projectAssignmentId:
          type: integer
          format: int32
        keywordId:
          type: integer
          format: int32
        level:
          type: integer
          format: int32
        keyword:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/KeywordModel'
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        keywordSynonym: ""
        keywordId: 2
        keywordSynonymId: 0
        level: 7
        projectAssignment: ""
        project: ""
        companyId: 6
        projectAssignmentId: 5
        customerId: 1
        company: ""
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        keyword: ""
        projectId: 5
        isMandatory: true
        customer: ""
    ProjectAssignmentStatus:
      type: integer
      description: |2-


        Unspecified = 0

        Coming = 1

        Ongoing = 2

        Ended = 3
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      x-enumNames:
      - Unspecified
      - Coming
      - Ongoing
      - Ended
      x-enum-varnames:
      - Unspecified
      - Coming
      - Ongoing
      - Ended
      x-ms-enum:
        name: ProjectAssignmentStatus
        values:
        - name: Unspecified
          value: 0
        - name: Coming
          value: 1
        - name: Ongoing
          value: 2
        - name: Ended
          value: 3
    ProjectAssignmentWithStatusModel:
      type: object
      properties:
        pipelineId:
          type: integer
          format: int32
          nullable: true
        projectPipelineStageTitle:
          type: string
          nullable: true
        customerId:
          type: integer
          format: int32
        projectId:
          type: integer
          format: int32
        projectState:
          description: "0 - Open\r\n30 - Won\r\n40 - Lost\r\n50 - Abandoned\r\n60\
            \ - Suspended"
          allOf:
          - $ref: '#/components/schemas/ProjectState'
        probability:
          type: integer
          format: int32
        projectAssignmentId:
          type: integer
          description: "Unspecified = 0,\r\nComing = 1,\r\nOngoing = 2,\r\nEnded =\
            \ 3"
          format: int32
        projectAssignmentAllocationStatus:
          description: "None = 0,\r\nPreliminary = 1,\r\nAssigned = 2,"
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentMemberAllocationStatus'
        projectAssignmentMemberType:
          description: "Unspecified = 0,\r\nEmployee = 1,\r\nPartner Consultant =\
            \ 2,\r\nSubcontractor = 3"
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentMemberType'
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        optionToDate:
          type: string
          format: date-time
          nullable: true
        oralAgreementToDate:
          type: string
          format: date-time
          nullable: true
        projectAssignmentExtent:
          type: integer
          format: int32
        projectAssignmentExtentType:
          description: "Percent = 0,\r\nHours = 1,"
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentExtentType'
        rate:
          type: integer
          format: int32
          nullable: true
        estimatedCloseDate:
          type: string
          format: date-time
          nullable: true
        assigned:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ProjectAssignmentMemberModel'
      additionalProperties: false
      example:
        projectAssignmentExtent: 2
        oralAgreementToDate: 2000-01-23T04:56:07.000+00:00
        projectAssignmentExtentType: ""
        endDate: 2000-01-23T04:56:07.000+00:00
        probability: 5
        projectAssignmentAllocationStatus: ""
        projectAssignmentMemberType: ""
        pipelineId: 0
        projectState: ""
        optionToDate: 2000-01-23T04:56:07.000+00:00
        estimatedCloseDate: 2000-01-23T04:56:07.000+00:00
        projectAssignmentId: 5
        rate: 7
        customerId: 6
        assigned: ""
        projectId: 1
        startDate: 2000-01-23T04:56:07.000+00:00
        projectPipelineStageTitle: projectPipelineStageTitle
    ProjectAttachmentModel:
      type: object
      properties:
        projectId:
          type: integer
          format: int32
        attachmentType:
          allOf:
          - $ref: '#/components/schemas/AttachmentType'
        companyId:
          type: integer
          format: int32
          nullable: true
        id:
          type: string
          format: uuid
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 7
        attachmentType: ""
        description: description
        links:
        - null
        - null
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
        projectId: 2
    ProjectBaseModel:
      type: object
      properties:
        companyId:
          type: integer
          format: int32
        customerId:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        identifier:
          type: string
          nullable: true
        customerIdentifier:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        identifier: identifier
        companyId: 7
        customerId: 9
        description: description
        links:
        - null
        - null
        id: 3
        customerIdentifier: customerIdentifier
        title: title
    ProjectEventBaseModel:
      type: object
      properties:
        projectId:
          type: integer
          format: int32
          nullable: true
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 5
        description: description
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: ""
        title: title
        projectId: 5
        eventDate: 2000-01-23T04:56:07.000+00:00
    ProjectEventMeetingAddEditModel:
      required:
      - title
      type: object
      properties:
        customerId:
          type: integer
          format: int32
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        timezoneId:
          type: string
          description: "The desired timezone to be used for StartDateTime and EndDateTime\
            \ properties. Valid timezone ids can be found at https://nodatime.org/TimeZones\r\
            \nIf empty, the timezone of the executing user (API account) will be used."
          nullable: true
        assignedToCompanyUserId:
          type: integer
          format: int32
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/EventStatusValue'
        type:
          allOf:
          - $ref: '#/components/schemas/EventType'
        title:
          type: string
        description:
          type: string
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
      additionalProperties: false
    ProjectEventMeetingModel:
      type: object
      properties:
        customerId:
          type: integer
          format: int32
        projectId:
          type: integer
          format: int32
          nullable: true
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        location:
          type: string
          nullable: true
        assignedToCompanyUserId:
          type: integer
          format: int32
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/EventStatusValue'
        createdByCompanyUserId:
          type: integer
          format: int32
        updatedByCompanyUserId:
          type: integer
          format: int32
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EventCommentModel'
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        comments:
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        assignedToCompanyUserId: 1
        createdByCompanyUserId: 5
        visibility: ""
        updatedByCompanyUserId: 5
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        endDateTime: 2000-01-23T04:56:07.000+00:00
        type: ""
        title: title
        companyId: 2
        startDateTime: 2000-01-23T04:56:07.000+00:00
        customerId: 0
        location: location
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        projectId: 6
        updated: 2000-01-23T04:56:07.000+00:00
        status: ""
        eventDate: 2000-01-23T04:56:07.000+00:00
    ProjectEventModel:
      type: object
      properties:
        projectId:
          type: integer
          format: int32
          nullable: true
        createdByCompanyUserId:
          type: integer
          format: int32
        updatedByCompanyUserId:
          type: integer
          format: int32
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EventCommentModel'
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        comments:
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        createdByCompanyUserId: 6
        visibility: ""
        updatedByCompanyUserId: 1
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        type: ""
        title: title
        companyId: 5
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        projectId: 0
        updated: 2000-01-23T04:56:07.000+00:00
        eventDate: 2000-01-23T04:56:07.000+00:00
    ProjectEventNoteAddEditModel:
      required:
      - title
      type: object
      properties:
        customerId:
          type: integer
          format: int32
        noteType:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EventNoteType'
        noteDate:
          type: string
          format: date-time
          nullable: true
        timezoneId:
          type: string
          description: "The desired timezone to be used for NoteDate property. Valid\
            \ timezone ids can be found at https://nodatime.org/TimeZones\r\nIf empty,\
            \ the timezone of the executing user (API account) will be used."
          nullable: true
        type:
          allOf:
          - $ref: '#/components/schemas/EventType'
        title:
          type: string
        description:
          type: string
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
      additionalProperties: false
    ProjectEventNoteModel:
      type: object
      properties:
        customerId:
          type: integer
          format: int32
        projectId:
          type: integer
          format: int32
          nullable: true
        noteType:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EventNoteType'
        noteDate:
          type: string
          format: date-time
          nullable: true
        createdByCompanyUserId:
          type: integer
          format: int32
        updatedByCompanyUserId:
          type: integer
          format: int32
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EventCommentModel'
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        comments:
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        createdByCompanyUserId: 1
        visibility: ""
        updatedByCompanyUserId: 5
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        type: ""
        title: title
        noteType: ""
        companyId: 5
        noteDate: 2000-01-23T04:56:07.000+00:00
        customerId: 0
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        projectId: 6
        updated: 2000-01-23T04:56:07.000+00:00
        eventDate: 2000-01-23T04:56:07.000+00:00
    ProjectEventTaskAddEditModel:
      required:
      - title
      type: object
      properties:
        customerId:
          type: integer
          format: int32
        taskType:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EventTaskType'
        hasTime:
          type: boolean
          nullable: true
        dueDateTime:
          type: string
          format: date-time
          nullable: true
        timezoneId:
          type: string
          description: "The desired timezone to be used for DueDateTime property.\
            \ Valid timezone ids can be found at https://nodatime.org/TimeZones\r\n\
            If empty, the timezone of the executing user (API account) will be used."
          nullable: true
        assignedToCompanyUserId:
          type: integer
          format: int32
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/EventStatusValue'
        type:
          allOf:
          - $ref: '#/components/schemas/EventType'
        title:
          type: string
        description:
          type: string
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
      additionalProperties: false
    ProjectEventTaskModel:
      type: object
      properties:
        customerId:
          type: integer
          format: int32
        projectId:
          type: integer
          format: int32
          nullable: true
        taskType:
          description: "NotSpecified = 0\r\nPhone = 1\r\nEmail = 2"
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EventTaskType'
        hasTime:
          type: boolean
          nullable: true
        dueDateTime:
          type: string
          format: date-time
          nullable: true
        assignedToCompanyUserId:
          type: integer
          format: int32
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/EventStatusValue'
        createdByCompanyUserId:
          type: integer
          format: int32
        updatedByCompanyUserId:
          type: integer
          format: int32
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        visibility:
          allOf:
          - $ref: '#/components/schemas/EventVisibility'
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EventCommentModel'
        type:
          description: "Meeting = 0\r\nNote = 1\r\nTask = 2"
          allOf:
          - $ref: '#/components/schemas/EventType'
        id:
          type: string
          format: uuid
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        eventDate:
          type: string
          format: date-time
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        comments:
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        - eventId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          companyUserId: 5
          created: 2000-01-23T04:56:07.000+00:00
          companyUserName: companyUserName
          id: 5
          text: text
        assignedToCompanyUserId: 1
        createdByCompanyUserId: 5
        visibility: ""
        updatedByCompanyUserId: 5
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        type: ""
        title: title
        hasTime: true
        taskType: ""
        companyId: 2
        dueDateTime: 2000-01-23T04:56:07.000+00:00
        customerId: 0
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        projectId: 6
        updated: 2000-01-23T04:56:07.000+00:00
        status: ""
        eventDate: 2000-01-23T04:56:07.000+00:00
    ProjectModel:
      type: object
      properties:
        company:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyBaseModel'
        customer:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyCustomerBaseModel'
        seoId:
          type: string
          nullable: true
        locationId:
          type: integer
          format: int32
          nullable: true
        googleId:
          type: string
          nullable: true
        probability:
          type: integer
          format: int32
          nullable: true
        estimatedValue:
          type: integer
          format: int32
          nullable: true
        estimatedCloseDate:
          type: string
          format: date-time
          nullable: true
        managers:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserBaseModel'
        salesManager:
          nullable: true
          deprecated: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserBaseModel'
        salesManagers:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserBaseModel'
        intermediator:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyCustomerBaseModel'
        events:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectEventBaseModel'
        customerContacts:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyCustomerContactBaseModel'
        intermediatorContacts:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyCustomerContactBaseModel'
        assignments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectAssignmentBaseModel'
        attachments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectAttachmentModel'
        tags:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyTagBaseModel'
        pipelineId:
          type: integer
          format: int32
          nullable: true
        currentStageId:
          type: integer
          format: int32
          nullable: true
        currency:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CurrencyModel'
        projectReferences:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectReferenceModel'
        currentState:
          description: "0 = Open\r\n30 = Won\r\n40 = Lost\r\n50 = Abandoned\r\n60\
            \ = Suspended"
          allOf:
          - $ref: '#/components/schemas/ProjectState'
        createdBy:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserBaseModel'
        updatedBy:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserBaseModel'
        createdDateTime:
          type: string
          format: date-time
        updatedDateTime:
          type: string
          format: date-time
          nullable: true
        teamId:
          type: integer
          format: int32
          nullable: true
        stateReasonId:
          type: integer
          format: int32
          nullable: true
        salesManagerIds:
          type: array
          description: List of sales managers employee ids
          nullable: true
          items:
            type: integer
            format: int32
        projectManagerIds:
          type: array
          description: List of project managers employee ids
          nullable: true
          items:
            type: integer
            format: int32
        priority:
          allOf:
          - $ref: '#/components/schemas/ProjectPriority'
        companyId:
          type: integer
          format: int32
        customerId:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        identifier:
          type: string
          nullable: true
        customerIdentifier:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        googleId: googleId
        salesManagers:
        - null
        - null
        customerContacts:
        - firstName: firstName
          lastName: lastName
          companyId: 6
          customerId: 1
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 0
          slug: slug
          email: email
        - firstName: firstName
          lastName: lastName
          companyId: 6
          customerId: 1
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 0
          slug: slug
          email: email
        assignments:
        - companyId: 0
          endDate: 2000-01-23T04:56:07.000+00:00
          customerId: 6
          project: ""
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 5
          title: title
          projectId: 1
          startDate: 2000-01-23T04:56:07.000+00:00
          customer: ""
        - companyId: 0
          endDate: 2000-01-23T04:56:07.000+00:00
          customerId: 6
          project: ""
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 5
          title: title
          projectId: 1
          startDate: 2000-01-23T04:56:07.000+00:00
          customer: ""
        attachments:
        - companyId: 7
          attachmentType: ""
          description: description
          links:
          - null
          - null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
          projectId: 2
        - companyId: 7
          attachmentType: ""
          description: description
          links:
          - null
          - null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
          projectId: 2
        intermediatorContacts:
        - null
        - null
        createdDateTime: 2000-01-23T04:56:07.000+00:00
        description: description
        salesManagerIds:
        - 1
        - 1
        projectManagerIds:
        - 6
        - 6
        title: title
        pipelineId: 9
        estimatedValue: 1
        locationId: 0
        salesManager: ""
        customerId: 1
        company: ""
        currency: ""
        links:
        - null
        - null
        id: 4
        customerIdentifier: customerIdentifier
        seoId: seoId
        events:
        - companyId: 5
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: ""
          title: title
          projectId: 5
          eventDate: 2000-01-23T04:56:07.000+00:00
        - companyId: 5
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: ""
          title: title
          projectId: 5
          eventDate: 2000-01-23T04:56:07.000+00:00
        identifier: identifier
        currentStageId: 3
        projectReferences:
        - companyId: 4
          language: language
          links:
          - null
          - null
          id: 2
          text: text
          title: title
          projectId: 7
        - companyId: 4
          language: language
          links:
          - null
          - null
          id: 2
          text: text
          title: title
          projectId: 7
        updatedBy: ""
        probability: 6
        priority: ""
        tags:
        - companyId: 5
          name: name
          id: 5
          seoId: seoId
        - companyId: 5
          name: name
          id: 5
          seoId: seoId
        updatedDateTime: 2000-01-23T04:56:07.000+00:00
        estimatedCloseDate: 2000-01-23T04:56:07.000+00:00
        companyId: 7
        createdBy: ""
        teamId: 1
        intermediator: ""
        currentState: ""
        managers:
        - firstName: firstName
          lastName: lastName
          companyId: 6
          companyUserId: 0
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 1
          seoId: seoId
          companyUserType: ""
        - firstName: firstName
          lastName: lastName
          companyId: 6
          companyUserId: 0
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 1
          seoId: seoId
          companyUserType: ""
        stateReasonId: 1
        customer: ""
    ProjectPipelineModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        stages:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectPipelineStageModel'
      additionalProperties: false
      example:
        stages:
        - probability: 5
          description: description
          id: 6
          title: title
          order: 1
        - probability: 5
          description: description
          id: 6
          title: title
          order: 1
        description: description
        id: 0
        title: title
    ProjectPipelineStageModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        probability:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
      example:
        probability: 5
        description: description
        id: 6
        title: title
        order: 1
    ProjectPriority:
      type: integer
      description: |2-


        Low = 3

        Medium = 5

        High = 8
      format: int32
      enum:
      - 3
      - 5
      - 8
      x-enumNames:
      - Low
      - Medium
      - High
      x-enum-varnames:
      - Low
      - Medium
      - High
      x-ms-enum:
        name: ProjectPriority
        values:
        - name: Low
          value: 3
        - name: Medium
          value: 5
        - name: High
          value: 8
    ProjectQuerySort:
      type: integer
      description: |2-


        CreatedDateTime = 0

        Title = 1

        Identifier = 2

        CustomerIdentifier = 3

        SeoId = 4

        UpdatedDateTime = 5

        LastTouchDateTime = 6
      format: int32
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      x-enumNames:
      - CreatedDateTime
      - Title
      - Identifier
      - CustomerIdentifier
      - SeoId
      - UpdatedDateTime
      - LastTouchDateTime
      x-enum-varnames:
      - CreatedDateTime
      - Title
      - Identifier
      - CustomerIdentifier
      - SeoId
      - UpdatedDateTime
      - LastTouchDateTime
      x-ms-enum:
        name: ProjectQuerySort
        values:
        - name: CreatedDateTime
          value: 0
        - name: Title
          value: 1
        - name: Identifier
          value: 2
        - name: CustomerIdentifier
          value: 3
        - name: SeoId
          value: 4
        - name: UpdatedDateTime
          value: 5
        - name: LastTouchDateTime
          value: 6
    ProjectQuerySortPageAndSortByModel:
      type: object
      properties:
        sortBy:
          allOf:
          - $ref: '#/components/schemas/ProjectQuerySort'
        sortOrder:
          description: "Ascending = 0 (Default)\r\nDescending = 1"
          allOf:
          - $ref: '#/components/schemas/SortOrder'
        page:
          type: integer
          format: int32
          default: 1
        itemsPerPage:
          type: integer
          format: int32
          default: 15
      additionalProperties: false
    ProjectReferenceModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        projectId:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        text:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 4
        language: language
        links:
        - null
        - null
        id: 2
        text: text
        title: title
        projectId: 7
    ProjectState:
      type: integer
      description: |2-


        Open = 0

        Won = 30

        Lost = 40

        Abandoned = 50

        Suspended = 60
      format: int32
      enum:
      - 0
      - 30
      - 40
      - 50
      - 60
      x-enumNames:
      - Open
      - Won
      - Lost
      - Abandoned
      - Suspended
      x-enum-varnames:
      - Open
      - Won
      - Lost
      - Abandoned
      - Suspended
      x-ms-enum:
        name: ProjectState
        values:
        - name: Open
          value: 0
        - name: Won
          value: 30
        - name: Lost
          value: 40
        - name: Abandoned
          value: 50
        - name: Suspended
          value: 60
    RecruitmentSourceModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
      example:
        companyId: 6
        name: name
        id: 0
    ReferenceBlockItemModel:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        telephone:
          type: string
          nullable: true
        company:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        text:
          type: string
          nullable: true
        workExperience:
          type: string
          nullable: true
        workExperienceId:
          type: integer
          format: int32
          nullable: true
        parentBlockItemId:
          type: integer
          format: int32
          nullable: true
        parentBlockItemUpdated:
          type: boolean
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        updated:
          type: string
          format: date-time
          nullable: true
        discarded:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
        disabled:
          type: boolean
      additionalProperties: false
    ReferenceBlockModel:
      type: object
      properties:
        hideDescription:
          type: boolean
        hideInEdit:
          type: boolean
        data:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ReferenceBlockItemModel'
        blockId:
          type: string
          format: uuid
        updated:
          type: string
          format: date-time
          nullable: true
        heading:
          type: string
          nullable: true
      additionalProperties: false
    ResumeModel:
      type: object
      properties:
        presentation:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/PresentationBlockModel'
        highlightedWorkExperience:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/HighlightedWorkExperienceBlockModel'
        skillsByCategory:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/SkillByCategoryBlockModel'
        topSkills:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/TopSkillBlockModel'
        workExperience:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/WorkExperienceBlockModel'
        skills:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/SkillModelModel'
        employer:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EmployerBlockModel'
        training:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/TrainingBlockModel'
        education:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EducationBlockModel'
        language:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/LanguageBlockModel'
        commitment:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CommitmentBlockModel'
        extraSkills:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ExtraSkillBlockModel'
        reference:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ReferenceBlockModel'
        text:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/TextBlockModel'
        id:
          type: integer
          format: int32
      additionalProperties: false
    RoleModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        level:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/AccessLevel'
      additionalProperties: false
      example:
        level: ""
        name: name
        description: description
        id: 1
    SearchCompanyCandidateQueryModel:
      type: object
      properties:
        term:
          type: string
          nullable: true
        rating:
          type: integer
          format: int32
          nullable: true
        states:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyCandidateState'
        pipeline:
          type: integer
          format: int32
          nullable: true
        noRecruiter:
          type: boolean
        recruiters:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        teams:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        sources:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        pageAndSortBy:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyCandidateQuerySortPageAndSortByModel'
      additionalProperties: false
    SearchCompanyCandidateResultModel:
      type: object
      properties:
        pagedAndSortedBy:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyCandidateQuerySortPageAndSortByModel'
        result:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyCandidateBaseModel'
        hits:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int32
      additionalProperties: false
      example:
        result:
        - firstName: firstName
          lastName: lastName
          companyId: 6
          firstname: firstname
          lastTouchDateTime: 2000-01-23T04:56:07.000+00:00
          createdDateTime: 2000-01-23T04:56:07.000+00:00
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 0
          seoId: seoId
          lastname: lastname
          updatedDateTime: 2000-01-23T04:56:07.000+00:00
        - firstName: firstName
          lastName: lastName
          companyId: 6
          firstname: firstname
          lastTouchDateTime: 2000-01-23T04:56:07.000+00:00
          createdDateTime: 2000-01-23T04:56:07.000+00:00
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 0
          seoId: seoId
          lastname: lastname
          updatedDateTime: 2000-01-23T04:56:07.000+00:00
        hits: 0
        totalItems: 6
        pagedAndSortedBy: ""
    SearchCompanyCustomerContactQueryModel:
      type: object
      properties:
        term:
          type: string
          nullable: true
        managers:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        customers:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        tags:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        pageAndSortBy:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyCustomerContactQuerySortPageAndSortByModel'
      additionalProperties: false
    SearchCompanyCustomerContactResultModel:
      type: object
      properties:
        pagedAndSortedBy:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyCustomerContactQuerySortPageAndSortByModel'
        result:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyCustomerContactModel'
        hits:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int32
      additionalProperties: false
      example:
        result:
        - lastName: lastName
          comments: comments
          phone2: phone2
          createdDateTime: 2000-01-23T04:56:07.000+00:00
          title: title
          phone1: phone1
          tags:
          - companyId: 0
            tagType: ""
            name: name
            id: 6
            seoId: seoId
          - companyId: 0
            tagType: ""
            name: name
            id: 6
            seoId: seoId
          firstName: firstName
          companyId: 5
          customerId: 5
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 1
          slug: slug
          email: email
        - lastName: lastName
          comments: comments
          phone2: phone2
          createdDateTime: 2000-01-23T04:56:07.000+00:00
          title: title
          phone1: phone1
          tags:
          - companyId: 0
            tagType: ""
            name: name
            id: 6
            seoId: seoId
          - companyId: 0
            tagType: ""
            name: name
            id: 6
            seoId: seoId
          firstName: firstName
          companyId: 5
          customerId: 5
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 1
          slug: slug
          email: email
        hits: 0
        totalItems: 6
        pagedAndSortedBy: ""
    SearchCompanyCustomerQueryModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        identification:
          type: string
          nullable: true
        corporateIdentityNumber:
          type: string
          nullable: true
        pageAndSortBy:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyCustomerQuerySortPageAndSortByModel'
      additionalProperties: false
    SearchCompanyCustomerResultModel:
      type: object
      properties:
        pagedAndSortedBy:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyCustomerQuerySortPageAndSortByModel'
        result:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyCustomerBaseModel'
        hits:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int32
      additionalProperties: false
      example:
        result:
        - companyId: 6
          identification: identification
          name: name
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 0
          seoId: seoId
          status: ""
        - companyId: 6
          identification: identification
          name: name
          description: description
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 0
          seoId: seoId
          status: ""
        hits: 0
        totalItems: 6
        pagedAndSortedBy: ""
    SearchCompanyUserQueryModel:
      type: object
      properties:
        term:
          type: string
          nullable: true
        pageAndSortBy:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserQuerySortPageAndSortByModel'
      additionalProperties: false
    SearchCompanyUserResultModel:
      type: object
      properties:
        pagedAndSortedBy:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserQuerySortPageAndSortByModel'
        result:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserBaseModel'
        hits:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int32
      additionalProperties: false
      example:
        result:
        - firstName: firstName
          lastName: lastName
          companyId: 6
          companyUserId: 0
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 1
          seoId: seoId
          companyUserType: ""
        - firstName: firstName
          lastName: lastName
          companyId: 6
          companyUserId: 0
          links:
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          - methods:
            - methods
            - methods
            rel: rel
            href: href
          id: 1
          seoId: seoId
          companyUserType: ""
        hits: 0
        totalItems: 6
        pagedAndSortedBy: ""
    SearchProjectQueryModel:
      type: object
      properties:
        title:
          type: string
          nullable: true
        identification:
          type: string
          nullable: true
        customerIdentifier:
          type: string
          nullable: true
        corporateIdentityNumber:
          type: string
          nullable: true
        customerId:
          type: integer
          format: int32
          nullable: true
        pageAndSortBy:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ProjectQuerySortPageAndSortByModel'
        pipelines:
          type: array
          description: Your Project Pipelines can be retrieved from the GET ProjectPipelines
            endpoint
          nullable: true
          items:
            type: integer
            format: int32
        salesManagers:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        customers:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        intermediators:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        projectStates:
          type: array
          description: "Open = 0,\r\nWon = 30,\r\nLost = 40,\r\nAbandoned = 50,\r\n\
            Suspended = 60"
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectState'
      additionalProperties: false
    SearchProjectsResultModel:
      type: object
      properties:
        pagedAndSortedBy:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ProjectQuerySortPageAndSortByModel'
        result:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectBaseModel'
        hits:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int32
      additionalProperties: false
      example:
        result:
        - identifier: identifier
          companyId: 7
          customerId: 9
          description: description
          links:
          - null
          - null
          id: 3
          customerIdentifier: customerIdentifier
          title: title
        - identifier: identifier
          companyId: 7
          customerId: 9
          description: description
          links:
          - null
          - null
          id: 3
          customerIdentifier: customerIdentifier
          title: title
        hits: 0
        totalItems: 6
        pagedAndSortedBy: ""
    SearchSkillModel:
      type: object
      properties:
        keywordId:
          type: integer
          format: int32
          nullable: true
        min:
          type: integer
          format: int32
          nullable: true
        max:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    SearchSkillQueryModel:
      type: object
      properties:
        skills:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/SearchSkillModel'
        filters:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/FilterModel'
      additionalProperties: false
    SearchSkillResultModel:
      type: object
      properties:
        query:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/SearchSkillQueryModel'
        hits:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CompanyUserSearchSkillModel'
      additionalProperties: false
      example:
        hits:
        - lastName: lastName
          firstname: firstname
          teams:
          - companyId: 6
            name: name
            description: description
            links:
            - methods:
              - methods
              - methods
              rel: rel
              href: href
            - methods:
              - methods
              - methods
              rel: rel
              href: href
            id: 0
          - companyId: 6
            name: name
            description: description
            links:
            - methods:
              - methods
              - methods
              rel: rel
              href: href
            - methods:
              - methods
              - methods
              rel: rel
              href: href
            id: 0
          companyCandidateId: 9
          companyUserId: 6
          addressDisplayName: addressDisplayName
          groups:
          - companyId: 1
            name: name
            description: description
            links:
            - methods:
              - methods
              - methods
              rel: rel
              href: href
            - methods:
              - methods
              - methods
              rel: rel
              href: href
            id: 6
          - companyId: 1
            name: name
            description: description
            links:
            - methods:
              - methods
              - methods
              rel: rel
              href: href
            - methods:
              - methods
              - methods
              rel: rel
              href: href
            id: 6
          title: title
          lastname: lastname
          addressId: 1
          companyUserType: ""
          skills:
          - keywordId: 5
            keywordSynonymId: 5
            keywordSynonymName: keywordSynonymName
            level: 7
            masterSynonymName: masterSynonymName
            masterSynonymId: 2
          - keywordId: 5
            keywordSynonymId: 5
            keywordSynonymName: keywordSynonymName
            level: 7
            masterSynonymName: masterSynonymName
            masterSynonymId: 2
          firstName: firstName
          companyId: 0
          seoId: seoId
          status: ""
        - lastName: lastName
          firstname: firstname
          teams:
          - companyId: 6
            name: name
            description: description
            links:
            - methods:
              - methods
              - methods
              rel: rel
              href: href
            - methods:
              - methods
              - methods
              rel: rel
              href: href
            id: 0
          - companyId: 6
            name: name
            description: description
            links:
            - methods:
              - methods
              - methods
              rel: rel
              href: href
            - methods:
              - methods
              - methods
              rel: rel
              href: href
            id: 0
          companyCandidateId: 9
          companyUserId: 6
          addressDisplayName: addressDisplayName
          groups:
          - companyId: 1
            name: name
            description: description
            links:
            - methods:
              - methods
              - methods
              rel: rel
              href: href
            - methods:
              - methods
              - methods
              rel: rel
              href: href
            id: 6
          - companyId: 1
            name: name
            description: description
            links:
            - methods:
              - methods
              - methods
              rel: rel
              href: href
            - methods:
              - methods
              - methods
              rel: rel
              href: href
            id: 6
          title: title
          lastname: lastname
          addressId: 1
          companyUserType: ""
          skills:
          - keywordId: 5
            keywordSynonymId: 5
            keywordSynonymName: keywordSynonymName
            level: 7
            masterSynonymName: masterSynonymName
            masterSynonymId: 2
          - keywordId: 5
            keywordSynonymId: 5
            keywordSynonymName: keywordSynonymName
            level: 7
            masterSynonymName: masterSynonymName
            masterSynonymId: 2
          firstName: firstName
          companyId: 0
          seoId: seoId
          status: ""
        query: ""
    SkillBlockItemModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        level:
          type: integer
          format: int32
        keywordTypeId:
          type: integer
          format: int32
          nullable: true
        keywordTypeName:
          type: string
          nullable: true
        numberOfDaysWorkExperience:
          type: integer
          format: int32
          nullable: true
        lastWorkExperienceDate:
          type: string
          format: date-time
          nullable: true
        parentBlockItemId:
          type: integer
          format: int32
          nullable: true
        parentBlockItemUpdated:
          type: boolean
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        updated:
          type: string
          format: date-time
          nullable: true
        discarded:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
        disabled:
          type: boolean
      additionalProperties: false
    SkillByCategoryBlockItemModel:
      type: object
      properties:
        keywordTypeId:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        skills:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/SkillBlockItemModel'
        parentBlockItemId:
          type: integer
          format: int32
          nullable: true
        parentBlockItemUpdated:
          type: boolean
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        updated:
          type: string
          format: date-time
          nullable: true
        discarded:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
        disabled:
          type: boolean
      additionalProperties: false
    SkillByCategoryBlockModel:
      type: object
      properties:
        data:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/SkillByCategoryBlockItemModel'
        blockId:
          type: string
          format: uuid
        updated:
          type: string
          format: date-time
          nullable: true
        heading:
          type: string
          nullable: true
      additionalProperties: false
    SkillModelModel:
      type: object
      properties:
        hideInEdit:
          type: boolean
        hideTitle:
          type: boolean
        hideDescription:
          type: boolean
        hideText:
          type: boolean
        data:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/SkillBlockItemModel'
        blockId:
          type: string
          format: uuid
        updated:
          type: string
          format: date-time
          nullable: true
        heading:
          type: string
          nullable: true
      additionalProperties: false
    SkillResultModel:
      type: object
      properties:
        keywordId:
          type: integer
          format: int32
          nullable: true
        keywordSynonymId:
          type: integer
          format: int32
          nullable: true
        keywordSynonymName:
          type: string
          nullable: true
        masterSynonymId:
          type: integer
          format: int32
          nullable: true
        masterSynonymName:
          type: string
          nullable: true
        level:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
      example:
        keywordId: 5
        keywordSynonymId: 5
        keywordSynonymName: keywordSynonymName
        level: 7
        masterSynonymName: masterSynonymName
        masterSynonymId: 2
    SkillSearchQueryTermModel:
      required:
      - term
      type: object
      properties:
        term:
          type: string
        min:
          type: integer
          format: int32
          nullable: true
        max:
          type: integer
          format: int32
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    SortOrder:
      type: integer
      description: "0 - Ascending,\r\n1 - Descending"
      format: int32
      enum:
      - 0
      - 1
      x-enumNames:
      - Ascending
      - Descending
      x-enum-varnames:
      - Ascending
      - Descending
      x-ms-enum:
        name: SortOrder
        values:
        - name: Ascending
          value: 0
        - name: Descending
          value: 1
    Status:
      type: integer
      description: |2-


        Inactive = 0

        Active = 1
      format: int32
      enum:
      - 0
      - 1
      x-enumNames:
      - Inactive
      - Active
      x-enum-varnames:
      - Inactive
      - Active
      x-ms-enum:
        name: Status
        values:
        - name: Inactive
          value: 0
        - name: Active
          value: 1
    TeamAddEditModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        internalIdentification:
          type: string
          nullable: true
        corporateIdentityNumber:
          type: string
          nullable: true
        costCenter:
          type: string
          nullable: true
        parentTeamId:
          type: integer
          format: int32
          nullable: true
        locationId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    TeamBaseModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        companyId: 6
        name: name
        description: description
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 0
    TeamManagerEditModel:
      type: object
      properties:
        teamId:
          type: integer
          format: int32
        companyUserId:
          type: integer
          format: int32
      additionalProperties: false
    TeamManagerModel:
      type: object
      properties:
        teamId:
          type: integer
          format: int32
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        companyUser:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserBaseModel'
        team:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/TeamBaseModel'
      additionalProperties: false
      example:
        companyUserId: 6
        teamId: 0
        companyUser: ""
        team: ""
    TeamMemberAddModel:
      type: object
      properties:
        companyUserId:
          type: integer
          format: int32
        availabilityPercent:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    TeamMemberEditModel:
      type: object
      properties:
        availabilityPercent:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    TeamMemberModel:
      type: object
      properties:
        teamId:
          type: integer
          format: int32
          nullable: true
        companyUserId:
          type: integer
          format: int32
          nullable: true
        companyUser:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/CompanyUserBaseModel'
        team:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/TeamBaseModel'
        availabilityPercent:
          type: integer
          format: int32
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        availabilityPercent: 1
        companyUserId: 6
        teamId: 0
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        companyUser: ""
        team: ""
    TeamModel:
      type: object
      properties:
        internalIdentification:
          type: string
          nullable: true
        corporateIdentityNumber:
          type: string
          nullable: true
        costCenter:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        parentTeamId:
          type: integer
          format: int32
          nullable: true
        created:
          type: string
          format: date-time
          nullable: true
        updated:
          type: string
          format: date-time
          nullable: true
        locationId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          format: int32
        companyId:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Link'
      additionalProperties: false
      example:
        internalIdentification: internalIdentification
        costCenter: costCenter
        created: 2000-01-23T04:56:07.000+00:00
        corporateIdentityNumber: corporateIdentityNumber
        description: description
        companyId: 5
        locationId: 6
        name: name
        location: location
        links:
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        - methods:
          - methods
          - methods
          rel: rel
          href: href
        id: 1
        updated: 2000-01-23T04:56:07.000+00:00
        parentTeamId: 0
    TextBlockModel:
      type: object
      properties:
        description:
          type: string
          nullable: true
        text:
          type: string
          nullable: true
        hideInEdit:
          type: boolean
        hideTitle:
          type: boolean
        hideDescription:
          type: boolean
        hideText:
          type: boolean
        blockId:
          type: string
          format: uuid
        updated:
          type: string
          format: date-time
          nullable: true
        heading:
          type: string
          nullable: true
      additionalProperties: false
    TopSkillBlockItemModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        level:
          type: integer
          format: int32
          nullable: true
        parentBlockItemId:
          type: integer
          format: int32
          nullable: true
        parentBlockItemUpdated:
          type: boolean
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        updated:
          type: string
          format: date-time
          nullable: true
        discarded:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
        disabled:
          type: boolean
      additionalProperties: false
    TopSkillBlockModel:
      type: object
      properties:
        useLevel:
          type: boolean
        minValue:
          type: integer
          format: int32
        maxValue:
          type: integer
          format: int32
        numberOfItemsInList:
          type: integer
          format: int32
        data:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/TopSkillBlockItemModel'
        blockId:
          type: string
          format: uuid
        updated:
          type: string
          format: date-time
          nullable: true
        heading:
          type: string
          nullable: true
      additionalProperties: false
    TrainingBlockModel:
      type: object
      properties:
        hideInEdit:
          type: boolean
        hideTitle:
          type: boolean
        hideDescription:
          type: boolean
        hideText:
          type: boolean
        data:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/TrainingItemBlockModel'
        blockId:
          type: string
          format: uuid
        updated:
          type: string
          format: date-time
          nullable: true
        heading:
          type: string
          nullable: true
      additionalProperties: false
    TrainingItemBlockModel:
      type: object
      properties:
        trainingType:
          allOf:
          - $ref: '#/components/schemas/TrainingType'
        url:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        issuer:
          type: string
          nullable: true
        year:
          type: integer
          format: int32
        parentBlockItemId:
          type: integer
          format: int32
          nullable: true
        parentBlockItemUpdated:
          type: boolean
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        updated:
          type: string
          format: date-time
          nullable: true
        discarded:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
        disabled:
          type: boolean
      additionalProperties: false
    TrainingType:
      type: integer
      description: |2-


        Course = 0

        Certification = 1
      format: int32
      enum:
      - 0
      - 1
      x-enumNames:
      - Course
      - Certification
      x-enum-varnames:
      - Course
      - Certification
      x-ms-enum:
        name: TrainingType
        values:
        - name: Course
          value: 0
        - name: Certification
          value: 1
    UpdatedModel:
      type: object
      properties:
        companyUserId:
          type: integer
          format: int32
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        time:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    UserGender:
      type: integer
      description: |2-


        Other = 0

        Male = 1

        Female = 2
      format: int32
      enum:
      - 0
      - 1
      - 2
      x-enumNames:
      - Other
      - Male
      - Female
      x-enum-varnames:
      - Other
      - Male
      - Female
      x-ms-enum:
        name: UserGender
        values:
        - name: Other
          value: 0
        - name: Male
          value: 1
        - name: Female
          value: 2
    ValidationModel:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            nullable: true
            items:
              type: string
          description: Collection of validation errors
          nullable: true
      additionalProperties: false
    WebhookAddModel:
      type: object
      properties:
        companyId:
          type: integer
          format: int32
          nullable: true
        isActive:
          type: boolean
        endpointUrl:
          type: string
          nullable: true
        configurations:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/WebhookConfigurationAddModel'
        credentials:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/WebhookCredentialsAddModel'
      additionalProperties: false
    WebhookConfigurationAddModel:
      type: object
      properties:
        entityType:
          allOf:
          - $ref: '#/components/schemas/WebhookEntityType'
        actionType:
          allOf:
          - $ref: '#/components/schemas/ActionType'
      additionalProperties: false
    WebhookConfigurationModel:
      type: object
      properties:
        entityType:
          allOf:
          - $ref: '#/components/schemas/WebhookEntityType'
        actionType:
          allOf:
          - $ref: '#/components/schemas/ActionType'
      additionalProperties: false
      example:
        actionType: ""
        entityType: ""
    WebhookCredentialsAddModel:
      type: object
      properties:
        headerValue:
          type: string
          nullable: true
        isBasicAuthentication:
          type: boolean
          nullable: true
        headerName:
          type: string
          nullable: true
      additionalProperties: false
    WebhookCredentialsModel:
      type: object
      properties:
        isBasicAuthentication:
          type: boolean
          nullable: true
        headerName:
          type: string
          nullable: true
      additionalProperties: false
      example:
        isBasicAuthentication: true
        headerName: headerName
    WebhookEntityType:
      type: integer
      description: |2-


        All = 1

        CompanyCandidate = 2

        CompanyEmployee = 3

        CompanySubcontractor = 4

        CompanyCustomer = 5

        CompanyProject = 6

        Role = 7

        PublicAnnouncement = 8

        Absence = 9

        CompanyCustomerContact = 10
      format: int32
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      x-enumNames:
      - All
      - CompanyCandidate
      - CompanyEmployee
      - CompanySubcontractor
      - CompanyCustomer
      - CompanyProject
      - Role
      - PublicAnnouncement
      - Absence
      - CompanyCustomerContact
      x-enum-varnames:
      - All
      - CompanyCandidate
      - CompanyEmployee
      - CompanySubcontractor
      - CompanyCustomer
      - CompanyProject
      - Role
      - PublicAnnouncement
      - Absence
      - CompanyCustomerContact
      x-ms-enum:
        name: WebhookEntityType
        values:
        - name: All
          value: 1
        - name: CompanyCandidate
          value: 2
        - name: CompanyEmployee
          value: 3
        - name: CompanySubcontractor
          value: 4
        - name: CompanyCustomer
          value: 5
        - name: CompanyProject
          value: 6
        - name: Role
          value: 7
        - name: PublicAnnouncement
          value: 8
        - name: Absence
          value: 9
        - name: CompanyCustomerContact
          value: 10
    WebhookModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        isActive:
          type: boolean
        endpointUrl:
          type: string
          nullable: true
        configurations:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/WebhookConfigurationModel'
        credentials:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/WebhookCredentialsModel'
      additionalProperties: false
      example:
        credentials:
        - isBasicAuthentication: true
          headerName: headerName
        - isBasicAuthentication: true
          headerName: headerName
        endpointUrl: endpointUrl
        configurations:
        - actionType: ""
          entityType: ""
        - actionType: ""
          entityType: ""
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isActive: true
    WorkExperienceBlockItemModel:
      type: object
      properties:
        skills:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/SkillBlockItemModel'
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        employer:
          type: string
          nullable: true
        location:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/LocationBlockModel'
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
          nullable: true
        url:
          type: string
          nullable: true
        logotype:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/ImageBlockModel'
        parentBlockItemId:
          type: integer
          format: int32
          nullable: true
        parentBlockItemUpdated:
          type: boolean
          nullable: true
        profileTranslationId:
          type: integer
          format: int32
          nullable: true
        updated:
          type: string
          format: date-time
          nullable: true
        discarded:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
        disabled:
          type: boolean
      additionalProperties: false
    WorkExperienceBlockModel:
      type: object
      properties:
        skillsHeading:
          type: string
          nullable: true
          readOnly: true
          deprecated: true
        subHeading:
          type: string
          nullable: true
        hideSubHeading:
          type: boolean
        hideInEdit:
          type: boolean
        hideTitle:
          type: boolean
        hideDescription:
          type: boolean
        hideText:
          type: boolean
        useLogotype:
          type: boolean
        data:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/WorkExperienceBlockItemModel'
        blockId:
          type: string
          format: uuid
        updated:
          type: string
          format: date-time
          nullable: true
        heading:
          type: string
          nullable: true
      additionalProperties: false
    absences_id_body:
      allOf:
      - $ref: '#/components/schemas/AbsenceAddEditModel'
    absences_id_body_1:
      allOf:
      - $ref: '#/components/schemas/AbsenceAddEditModel'
    absences_id_body_2:
      allOf:
      - $ref: '#/components/schemas/AbsenceAddEditModel'
    absences_id_body_3:
      allOf:
      - $ref: '#/components/schemas/AbsenceAddEditModel'
    companyUserId_absences_body:
      allOf:
      - $ref: '#/components/schemas/AbsenceAddEditModel'
    companyUserId_absences_body_1:
      allOf:
      - $ref: '#/components/schemas/AbsenceAddEditModel'
    companyUserId_absences_body_2:
      allOf:
      - $ref: '#/components/schemas/AbsenceAddEditModel'
    companyUserId_absences_body_3:
      allOf:
      - $ref: '#/components/schemas/AbsenceAddEditModel'
    companyId_availability_body:
      allOf:
      - $ref: '#/components/schemas/AvailabilityFilterModel'
    companyId_availability_body_1:
      allOf:
      - $ref: '#/components/schemas/AvailabilityFilterModel'
    companyId_availability_body_2:
      allOf:
      - $ref: '#/components/schemas/AvailabilityFilterModel'
    companyId_availability_body_3:
      allOf:
      - $ref: '#/components/schemas/AvailabilityFilterModel'
    companyId_candidates_body:
      allOf:
      - $ref: '#/components/schemas/CompanyCandidateAddModel'
    companyId_candidates_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyCandidateAddModel'
    companyId_candidates_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyCandidateAddModel'
    companyId_candidates_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyCandidateAddModel'
    meetings_id_body:
      allOf:
      - $ref: '#/components/schemas/EventMeetingAddEditModel'
    meetings_id_body_1:
      allOf:
      - $ref: '#/components/schemas/EventMeetingAddEditModel'
    meetings_id_body_2:
      allOf:
      - $ref: '#/components/schemas/EventMeetingAddEditModel'
    meetings_id_body_3:
      allOf:
      - $ref: '#/components/schemas/EventMeetingAddEditModel'
    events_meetings_body:
      allOf:
      - $ref: '#/components/schemas/EventMeetingAddEditModel'
    events_meetings_body_1:
      allOf:
      - $ref: '#/components/schemas/EventMeetingAddEditModel'
    events_meetings_body_2:
      allOf:
      - $ref: '#/components/schemas/EventMeetingAddEditModel'
    events_meetings_body_3:
      allOf:
      - $ref: '#/components/schemas/EventMeetingAddEditModel'
    notes_id_body:
      allOf:
      - $ref: '#/components/schemas/EventNoteAddEditModel'
    notes_id_body_1:
      allOf:
      - $ref: '#/components/schemas/EventNoteAddEditModel'
    notes_id_body_2:
      allOf:
      - $ref: '#/components/schemas/EventNoteAddEditModel'
    notes_id_body_3:
      allOf:
      - $ref: '#/components/schemas/EventNoteAddEditModel'
    events_notes_body:
      allOf:
      - $ref: '#/components/schemas/EventNoteAddEditModel'
    events_notes_body_1:
      allOf:
      - $ref: '#/components/schemas/EventNoteAddEditModel'
    events_notes_body_2:
      allOf:
      - $ref: '#/components/schemas/EventNoteAddEditModel'
    events_notes_body_3:
      allOf:
      - $ref: '#/components/schemas/EventNoteAddEditModel'
    tasks_id_body:
      allOf:
      - $ref: '#/components/schemas/EventTaskAddEditModel'
    tasks_id_body_1:
      allOf:
      - $ref: '#/components/schemas/EventTaskAddEditModel'
    tasks_id_body_2:
      allOf:
      - $ref: '#/components/schemas/EventTaskAddEditModel'
    tasks_id_body_3:
      allOf:
      - $ref: '#/components/schemas/EventTaskAddEditModel'
    events_tasks_body:
      allOf:
      - $ref: '#/components/schemas/EventTaskAddEditModel'
    events_tasks_body_1:
      allOf:
      - $ref: '#/components/schemas/EventTaskAddEditModel'
    events_tasks_body_2:
      allOf:
      - $ref: '#/components/schemas/EventTaskAddEditModel'
    events_tasks_body_3:
      allOf:
      - $ref: '#/components/schemas/EventTaskAddEditModel'
    id_attachments_body:
      required:
      - Files
      - Title
      type: object
      properties:
        Files:
          type: array
          items:
            type: string
            format: binary
        Title:
          type: string
        Description:
          type: string
    candidateId_skills_body:
      allOf:
      - $ref: '#/components/schemas/CompanyCandidateSkillAddModel'
    candidateId_skills_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyCandidateSkillAddModel'
    candidateId_skills_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyCandidateSkillAddModel'
    candidateId_skills_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyCandidateSkillAddModel'
    customers_id_body:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerAddEditModel'
    customers_id_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerAddEditModel'
    customers_id_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerAddEditModel'
    customers_id_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerAddEditModel'
    customers_id_body_4:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerDeleteModel'
    customers_id_body_5:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerDeleteModel'
    customers_id_body_6:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerDeleteModel'
    customers_id_body_7:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerDeleteModel'
    companyId_customers_body:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerAddEditModel'
    companyId_customers_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerAddEditModel'
    companyId_customers_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerAddEditModel'
    companyId_customers_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerAddEditModel'
    addresses_id_body:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerAddressAddEditModel'
    addresses_id_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerAddressAddEditModel'
    addresses_id_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerAddressAddEditModel'
    addresses_id_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerAddressAddEditModel'
    customerId_addresses_body:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerAddressAddEditModel'
    customerId_addresses_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerAddressAddEditModel'
    customerId_addresses_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerAddressAddEditModel'
    customerId_addresses_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerAddressAddEditModel'
    contacts_id_body:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerContactAddEditModel'
    contacts_id_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerContactAddEditModel'
    contacts_id_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerContactAddEditModel'
    contacts_id_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerContactAddEditModel'
    customerId_contacts_body:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerContactAddEditModel'
    customerId_contacts_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerContactAddEditModel'
    customerId_contacts_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerContactAddEditModel'
    customerId_contacts_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerContactAddEditModel'
    meetings_id_body_4:
      allOf:
      - $ref: '#/components/schemas/CustomerEventMeetingAddEditModel'
    meetings_id_body_5:
      allOf:
      - $ref: '#/components/schemas/CustomerEventMeetingAddEditModel'
    meetings_id_body_6:
      allOf:
      - $ref: '#/components/schemas/CustomerEventMeetingAddEditModel'
    meetings_id_body_7:
      allOf:
      - $ref: '#/components/schemas/CustomerEventMeetingAddEditModel'
    events_meetings_body_4:
      allOf:
      - $ref: '#/components/schemas/CustomerEventMeetingAddEditModel'
    events_meetings_body_5:
      allOf:
      - $ref: '#/components/schemas/CustomerEventMeetingAddEditModel'
    events_meetings_body_6:
      allOf:
      - $ref: '#/components/schemas/CustomerEventMeetingAddEditModel'
    events_meetings_body_7:
      allOf:
      - $ref: '#/components/schemas/CustomerEventMeetingAddEditModel'
    notes_id_body_4:
      allOf:
      - $ref: '#/components/schemas/CustomerEventNoteAddEditModel'
    notes_id_body_5:
      allOf:
      - $ref: '#/components/schemas/CustomerEventNoteAddEditModel'
    notes_id_body_6:
      allOf:
      - $ref: '#/components/schemas/CustomerEventNoteAddEditModel'
    notes_id_body_7:
      allOf:
      - $ref: '#/components/schemas/CustomerEventNoteAddEditModel'
    events_notes_body_4:
      allOf:
      - $ref: '#/components/schemas/CustomerEventNoteAddEditModel'
    events_notes_body_5:
      allOf:
      - $ref: '#/components/schemas/CustomerEventNoteAddEditModel'
    events_notes_body_6:
      allOf:
      - $ref: '#/components/schemas/CustomerEventNoteAddEditModel'
    events_notes_body_7:
      allOf:
      - $ref: '#/components/schemas/CustomerEventNoteAddEditModel'
    tasks_id_body_4:
      allOf:
      - $ref: '#/components/schemas/CustomerEventTaskAddEditModel'
    tasks_id_body_5:
      allOf:
      - $ref: '#/components/schemas/CustomerEventTaskAddEditModel'
    tasks_id_body_6:
      allOf:
      - $ref: '#/components/schemas/CustomerEventTaskAddEditModel'
    tasks_id_body_7:
      allOf:
      - $ref: '#/components/schemas/CustomerEventTaskAddEditModel'
    events_tasks_body_4:
      allOf:
      - $ref: '#/components/schemas/CustomerEventTaskAddEditModel'
    events_tasks_body_5:
      allOf:
      - $ref: '#/components/schemas/CustomerEventTaskAddEditModel'
    events_tasks_body_6:
      allOf:
      - $ref: '#/components/schemas/CustomerEventTaskAddEditModel'
    events_tasks_body_7:
      allOf:
      - $ref: '#/components/schemas/CustomerEventTaskAddEditModel'
    customerId_managers_body:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerManagersAddEditModel'
    customerId_managers_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerManagersAddEditModel'
    customerId_managers_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerManagersAddEditModel'
    customerId_managers_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyCustomerManagersAddEditModel'
    id_images_body:
      required:
      - File
      type: object
      properties:
        File:
          type: string
          format: binary
        SetAsPrimary:
          type: boolean
    companyId_profiles_body:
      allOf:
      - $ref: '#/components/schemas/CompanyProfileFilterModel'
    companyId_profiles_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyProfileFilterModel'
    companyId_profiles_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyProfileFilterModel'
    companyId_profiles_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyProfileFilterModel'
    teams_id_body:
      allOf:
      - $ref: '#/components/schemas/TeamAddEditModel'
    teams_id_body_1:
      allOf:
      - $ref: '#/components/schemas/TeamAddEditModel'
    teams_id_body_2:
      allOf:
      - $ref: '#/components/schemas/TeamAddEditModel'
    teams_id_body_3:
      allOf:
      - $ref: '#/components/schemas/TeamAddEditModel'
    companyId_teams_body:
      allOf:
      - $ref: '#/components/schemas/TeamAddEditModel'
    companyId_teams_body_1:
      allOf:
      - $ref: '#/components/schemas/TeamAddEditModel'
    companyId_teams_body_2:
      allOf:
      - $ref: '#/components/schemas/TeamAddEditModel'
    companyId_teams_body_3:
      allOf:
      - $ref: '#/components/schemas/TeamAddEditModel'
    teamId_managers_body:
      allOf:
      - $ref: '#/components/schemas/TeamManagerEditModel'
    teamId_managers_body_1:
      allOf:
      - $ref: '#/components/schemas/TeamManagerEditModel'
    teamId_managers_body_2:
      allOf:
      - $ref: '#/components/schemas/TeamManagerEditModel'
    teamId_managers_body_3:
      allOf:
      - $ref: '#/components/schemas/TeamManagerEditModel'
    teamId_members_body:
      allOf:
      - $ref: '#/components/schemas/TeamMemberAddModel'
    teamId_members_body_1:
      allOf:
      - $ref: '#/components/schemas/TeamMemberAddModel'
    teamId_members_body_2:
      allOf:
      - $ref: '#/components/schemas/TeamMemberAddModel'
    teamId_members_body_3:
      allOf:
      - $ref: '#/components/schemas/TeamMemberAddModel'
    members_id_body:
      allOf:
      - $ref: '#/components/schemas/TeamMemberEditModel'
    members_id_body_1:
      allOf:
      - $ref: '#/components/schemas/TeamMemberEditModel'
    members_id_body_2:
      allOf:
      - $ref: '#/components/schemas/TeamMemberEditModel'
    members_id_body_3:
      allOf:
      - $ref: '#/components/schemas/TeamMemberEditModel'
    teamId_users_body:
      allOf:
      - $ref: '#/components/schemas/TeamMemberAddModel'
    teamId_users_body_1:
      allOf:
      - $ref: '#/components/schemas/TeamMemberAddModel'
    teamId_users_body_2:
      allOf:
      - $ref: '#/components/schemas/TeamMemberAddModel'
    teamId_users_body_3:
      allOf:
      - $ref: '#/components/schemas/TeamMemberAddModel'
    users_id_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEditModel'
    users_id_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEditModel'
    users_id_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEditModel'
    users_id_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEditModel'
    companyId_users_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserAddModel'
    companyId_users_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserAddModel'
    companyId_users_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserAddModel'
    companyId_users_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserAddModel'
    companyUserId_convertaad_body:
      allOf:
      - $ref: '#/components/schemas/ConvertCompanyUserToAadAccountModel'
    companyUserId_convertaad_body_1:
      allOf:
      - $ref: '#/components/schemas/ConvertCompanyUserToAadAccountModel'
    companyUserId_convertaad_body_2:
      allOf:
      - $ref: '#/components/schemas/ConvertCompanyUserToAadAccountModel'
    companyUserId_convertaad_body_3:
      allOf:
      - $ref: '#/components/schemas/ConvertCompanyUserToAadAccountModel'
    meetings_id_body_8:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventMeetingAddEditModel'
    meetings_id_body_9:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventMeetingAddEditModel'
    meetings_id_body_10:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventMeetingAddEditModel'
    meetings_id_body_11:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventMeetingAddEditModel'
    events_meetings_body_8:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventMeetingAddEditModel'
    events_meetings_body_9:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventMeetingAddEditModel'
    events_meetings_body_10:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventMeetingAddEditModel'
    events_meetings_body_11:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventMeetingAddEditModel'
    notes_id_body_8:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventNoteAddEditModel'
    notes_id_body_9:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventNoteAddEditModel'
    notes_id_body_10:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventNoteAddEditModel'
    notes_id_body_11:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventNoteAddEditModel'
    events_notes_body_8:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventNoteAddEditModel'
    events_notes_body_9:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventNoteAddEditModel'
    events_notes_body_10:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventNoteAddEditModel'
    events_notes_body_11:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventNoteAddEditModel'
    events_tasks_body_8:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventTaskAddEditModel'
    events_tasks_body_9:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventTaskAddEditModel'
    events_tasks_body_10:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventTaskAddEditModel'
    events_tasks_body_11:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventTaskAddEditModel'
    tasks_id_body_8:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventTaskAddEditModel'
    tasks_id_body_9:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventTaskAddEditModel'
    tasks_id_body_10:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventTaskAddEditModel'
    tasks_id_body_11:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventTaskAddEditModel'
    companyUserId_permissions_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserPermissionsEditModel'
    companyUserId_permissions_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserPermissionsEditModel'
    companyUserId_permissions_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserPermissionsEditModel'
    companyUserId_permissions_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserPermissionsEditModel'
    companyUserId_profile_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileAddEditModel'
    companyUserId_profile_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileAddEditModel'
    companyUserId_profile_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileAddEditModel'
    companyUserId_profile_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileAddEditModel'
    commitments_id_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileCommitmentAddEditModel'
    commitments_id_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileCommitmentAddEditModel'
    commitments_id_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileCommitmentAddEditModel'
    commitments_id_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileCommitmentAddEditModel'
    profile_commitments_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileCommitmentAddEditModel'
    profile_commitments_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileCommitmentAddEditModel'
    profile_commitments_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileCommitmentAddEditModel'
    profile_commitments_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileCommitmentAddEditModel'
    educations_id_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileEducationAddEditModel'
    educations_id_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileEducationAddEditModel'
    educations_id_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileEducationAddEditModel'
    educations_id_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileEducationAddEditModel'
    profile_educations_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileEducationAddEditModel'
    profile_educations_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileEducationAddEditModel'
    profile_educations_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileEducationAddEditModel'
    profile_educations_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileEducationAddEditModel'
    employers_id_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileEmployerAddEditModel'
    employers_id_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileEmployerAddEditModel'
    employers_id_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileEmployerAddEditModel'
    employers_id_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileEmployerAddEditModel'
    profile_employers_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileEmployerAddEditModel'
    profile_employers_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileEmployerAddEditModel'
    profile_employers_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileEmployerAddEditModel'
    profile_employers_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileEmployerAddEditModel'
    extskills_id_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileExtSkillAddEditModel'
    extskills_id_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileExtSkillAddEditModel'
    extskills_id_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileExtSkillAddEditModel'
    extskills_id_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileExtSkillAddEditModel'
    profile_extskills_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileExtSkillAddEditModel'
    profile_extskills_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileExtSkillAddEditModel'
    profile_extskills_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileExtSkillAddEditModel'
    profile_extskills_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileExtSkillAddEditModel'
    languages_id_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileLanguageAddEditModel'
    languages_id_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileLanguageAddEditModel'
    languages_id_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileLanguageAddEditModel'
    languages_id_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileLanguageAddEditModel'
    profile_languages_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileLanguageAddEditModel'
    profile_languages_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileLanguageAddEditModel'
    profile_languages_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileLanguageAddEditModel'
    profile_languages_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileLanguageAddEditModel'
    profile_presentation_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfilePresentationEditModel'
    profile_presentation_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfilePresentationEditModel'
    profile_presentation_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfilePresentationEditModel'
    profile_presentation_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfilePresentationEditModel'
    references_id_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileReferenceAddEditModel'
    references_id_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileReferenceAddEditModel'
    references_id_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileReferenceAddEditModel'
    references_id_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileReferenceAddEditModel'
    profile_references_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileReferenceAddEditModel'
    profile_references_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileReferenceAddEditModel'
    profile_references_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileReferenceAddEditModel'
    profile_references_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileReferenceAddEditModel'
    skills_id_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileSkillEditModel'
    skills_id_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileSkillEditModel'
    skills_id_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileSkillEditModel'
    skills_id_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileSkillEditModel'
    profile_skills_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileSkillAddModel'
    profile_skills_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileSkillAddModel'
    profile_skills_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileSkillAddModel'
    profile_skills_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileSkillAddModel'
    trainings_id_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileTrainingAddEditModel'
    trainings_id_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileTrainingAddEditModel'
    trainings_id_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileTrainingAddEditModel'
    trainings_id_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileTrainingAddEditModel'
    profile_trainings_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileTrainingAddEditModel'
    profile_trainings_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileTrainingAddEditModel'
    profile_trainings_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileTrainingAddEditModel'
    profile_trainings_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileTrainingAddEditModel'
    workexperiences_id_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileWorkExperienceAddEditModel'
    workexperiences_id_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileWorkExperienceAddEditModel'
    workexperiences_id_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileWorkExperienceAddEditModel'
    workexperiences_id_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileWorkExperienceAddEditModel'
    profile_workexperiences_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileWorkExperienceAddEditModel'
    profile_workexperiences_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileWorkExperienceAddEditModel'
    profile_workexperiences_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileWorkExperienceAddEditModel'
    profile_workexperiences_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserProfileWorkExperienceAddEditModel'
    companyId_subcontractors_body:
      allOf:
      - $ref: '#/components/schemas/CompanyUserSubcontractorAddEditModel'
    companyId_subcontractors_body_1:
      allOf:
      - $ref: '#/components/schemas/CompanyUserSubcontractorAddEditModel'
    companyId_subcontractors_body_2:
      allOf:
      - $ref: '#/components/schemas/CompanyUserSubcontractorAddEditModel'
    companyId_subcontractors_body_3:
      allOf:
      - $ref: '#/components/schemas/CompanyUserSubcontractorAddEditModel'
    meetings_id_body_12:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventMeetingAddEditModel'
    meetings_id_body_13:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventMeetingAddEditModel'
    meetings_id_body_14:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventMeetingAddEditModel'
    meetings_id_body_15:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventMeetingAddEditModel'
    events_meetings_body_12:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventMeetingAddEditModel'
    events_meetings_body_13:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventMeetingAddEditModel'
    events_meetings_body_14:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventMeetingAddEditModel'
    events_meetings_body_15:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventMeetingAddEditModel'
    notes_id_body_12:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventNoteAddEditModel'
    notes_id_body_13:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventNoteAddEditModel'
    notes_id_body_14:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventNoteAddEditModel'
    notes_id_body_15:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventNoteAddEditModel'
    events_notes_body_12:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventNoteAddEditModel'
    events_notes_body_13:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventNoteAddEditModel'
    events_notes_body_14:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventNoteAddEditModel'
    events_notes_body_15:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventNoteAddEditModel'
    events_tasks_body_12:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventTaskAddEditModel'
    events_tasks_body_13:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventTaskAddEditModel'
    events_tasks_body_14:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventTaskAddEditModel'
    events_tasks_body_15:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventTaskAddEditModel'
    tasks_id_body_12:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventTaskAddEditModel'
    tasks_id_body_13:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventTaskAddEditModel'
    tasks_id_body_14:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventTaskAddEditModel'
    tasks_id_body_15:
      allOf:
      - $ref: '#/components/schemas/CompanyUserEventTaskAddEditModel'
    id_attachments_body_1:
      required:
      - Files
      - Title
      type: object
      properties:
        Files:
          type: array
          items:
            type: string
            format: binary
        Title:
          type: string
        Description:
          type: string
    companyId_webhooks_body:
      allOf:
      - $ref: '#/components/schemas/WebhookAddModel'
    companyId_webhooks_body_1:
      allOf:
      - $ref: '#/components/schemas/WebhookAddModel'
    companyId_webhooks_body_2:
      allOf:
      - $ref: '#/components/schemas/WebhookAddModel'
    companyId_webhooks_body_3:
      allOf:
      - $ref: '#/components/schemas/WebhookAddModel'
    mentions_tonaturaltext_body:
      allOf:
      - $ref: '#/components/schemas/MentionTextModel'
    mentions_tonaturaltext_body_1:
      allOf:
      - $ref: '#/components/schemas/MentionTextModel'
    mentions_tonaturaltext_body_2:
      allOf:
      - $ref: '#/components/schemas/MentionTextModel'
    mentions_tonaturaltext_body_3:
      allOf:
      - $ref: '#/components/schemas/MentionTextModel'
    projects_id_body:
      allOf:
      - $ref: '#/components/schemas/ProjectAddEditModel'
    projects_id_body_1:
      allOf:
      - $ref: '#/components/schemas/ProjectAddEditModel'
    projects_id_body_2:
      allOf:
      - $ref: '#/components/schemas/ProjectAddEditModel'
    projects_id_body_3:
      allOf:
      - $ref: '#/components/schemas/ProjectAddEditModel'
    companyId_projects_body:
      allOf:
      - $ref: '#/components/schemas/ProjectAddEditModel'
    companyId_projects_body_1:
      allOf:
      - $ref: '#/components/schemas/ProjectAddEditModel'
    companyId_projects_body_2:
      allOf:
      - $ref: '#/components/schemas/ProjectAddEditModel'
    companyId_projects_body_3:
      allOf:
      - $ref: '#/components/schemas/ProjectAddEditModel'
    roles_id_body:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentEditModel'
    roles_id_body_1:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentEditModel'
    roles_id_body_2:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentEditModel'
    roles_id_body_3:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentEditModel'
    projectId_roles_body:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentAddModel'
    projectId_roles_body_1:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentAddModel'
    projectId_roles_body_2:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentAddModel'
    projectId_roles_body_3:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentAddModel'
    members_employee_body:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentMemberEmployeeAddModel'
    members_employee_body_1:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentMemberEmployeeAddModel'
    members_employee_body_2:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentMemberEmployeeAddModel'
    members_employee_body_3:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentMemberEmployeeAddModel'
    members_subcontractor_body:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentMemberSubcontractorAddModel'
    members_subcontractor_body_1:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentMemberSubcontractorAddModel'
    members_subcontractor_body_2:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentMemberSubcontractorAddModel'
    members_subcontractor_body_3:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentMemberSubcontractorAddModel'
    employee_id_body:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentMemberEmployeeEditModel'
    employee_id_body_1:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentMemberEmployeeEditModel'
    employee_id_body_2:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentMemberEmployeeEditModel'
    employee_id_body_3:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentMemberEmployeeEditModel'
    subcontractor_id_body:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentMemberSubcontractorEditModel'
    subcontractor_id_body_1:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentMemberSubcontractorEditModel'
    subcontractor_id_body_2:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentMemberSubcontractorEditModel'
    subcontractor_id_body_3:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentMemberSubcontractorEditModel'
    companyId_roles_body:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentFilterModel'
    companyId_roles_body_1:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentFilterModel'
    companyId_roles_body_2:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentFilterModel'
    companyId_roles_body_3:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentFilterModel'
    roleId_skills_body:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentSkillAddModel'
    roleId_skills_body_1:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentSkillAddModel'
    roleId_skills_body_2:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentSkillAddModel'
    roleId_skills_body_3:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentSkillAddModel'
    skills_id_body_4:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentSkillEditModel'
    skills_id_body_5:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentSkillEditModel'
    skills_id_body_6:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentSkillEditModel'
    skills_id_body_7:
      allOf:
      - $ref: '#/components/schemas/ProjectAssignmentSkillEditModel'
    meetings_id_body_16:
      allOf:
      - $ref: '#/components/schemas/ProjectEventMeetingAddEditModel'
    meetings_id_body_17:
      allOf:
      - $ref: '#/components/schemas/ProjectEventMeetingAddEditModel'
    meetings_id_body_18:
      allOf:
      - $ref: '#/components/schemas/ProjectEventMeetingAddEditModel'
    meetings_id_body_19:
      allOf:
      - $ref: '#/components/schemas/ProjectEventMeetingAddEditModel'
    events_meetings_body_16:
      allOf:
      - $ref: '#/components/schemas/ProjectEventMeetingAddEditModel'
    events_meetings_body_17:
      allOf:
      - $ref: '#/components/schemas/ProjectEventMeetingAddEditModel'
    events_meetings_body_18:
      allOf:
      - $ref: '#/components/schemas/ProjectEventMeetingAddEditModel'
    events_meetings_body_19:
      allOf:
      - $ref: '#/components/schemas/ProjectEventMeetingAddEditModel'
    notes_id_body_16:
      allOf:
      - $ref: '#/components/schemas/ProjectEventNoteAddEditModel'
    notes_id_body_17:
      allOf:
      - $ref: '#/components/schemas/ProjectEventNoteAddEditModel'
    notes_id_body_18:
      allOf:
      - $ref: '#/components/schemas/ProjectEventNoteAddEditModel'
    notes_id_body_19:
      allOf:
      - $ref: '#/components/schemas/ProjectEventNoteAddEditModel'
    events_notes_body_16:
      allOf:
      - $ref: '#/components/schemas/ProjectEventNoteAddEditModel'
    events_notes_body_17:
      allOf:
      - $ref: '#/components/schemas/ProjectEventNoteAddEditModel'
    events_notes_body_18:
      allOf:
      - $ref: '#/components/schemas/ProjectEventNoteAddEditModel'
    events_notes_body_19:
      allOf:
      - $ref: '#/components/schemas/ProjectEventNoteAddEditModel'
    tasks_id_body_16:
      allOf:
      - $ref: '#/components/schemas/ProjectEventTaskAddEditModel'
    tasks_id_body_17:
      allOf:
      - $ref: '#/components/schemas/ProjectEventTaskAddEditModel'
    tasks_id_body_18:
      allOf:
      - $ref: '#/components/schemas/ProjectEventTaskAddEditModel'
    tasks_id_body_19:
      allOf:
      - $ref: '#/components/schemas/ProjectEventTaskAddEditModel'
    events_tasks_body_16:
      allOf:
      - $ref: '#/components/schemas/ProjectEventTaskAddEditModel'
    events_tasks_body_17:
      allOf:
      - $ref: '#/components/schemas/ProjectEventTaskAddEditModel'
    events_tasks_body_18:
      allOf:
      - $ref: '#/components/schemas/ProjectEventTaskAddEditModel'
    events_tasks_body_19:
      allOf:
      - $ref: '#/components/schemas/ProjectEventTaskAddEditModel'
    candidates_search_body:
      allOf:
      - $ref: '#/components/schemas/SearchCompanyCandidateQueryModel'
    candidates_search_body_1:
      allOf:
      - $ref: '#/components/schemas/SearchCompanyCandidateQueryModel'
    candidates_search_body_2:
      allOf:
      - $ref: '#/components/schemas/SearchCompanyCandidateQueryModel'
    candidates_search_body_3:
      allOf:
      - $ref: '#/components/schemas/SearchCompanyCandidateQueryModel'
    contacts_search_body:
      allOf:
      - $ref: '#/components/schemas/SearchCompanyCustomerContactQueryModel'
    contacts_search_body_1:
      allOf:
      - $ref: '#/components/schemas/SearchCompanyCustomerContactQueryModel'
    contacts_search_body_2:
      allOf:
      - $ref: '#/components/schemas/SearchCompanyCustomerContactQueryModel'
    contacts_search_body_3:
      allOf:
      - $ref: '#/components/schemas/SearchCompanyCustomerContactQueryModel'
    customers_search_body:
      allOf:
      - $ref: '#/components/schemas/SearchCompanyCustomerQueryModel'
    customers_search_body_1:
      allOf:
      - $ref: '#/components/schemas/SearchCompanyCustomerQueryModel'
    customers_search_body_2:
      allOf:
      - $ref: '#/components/schemas/SearchCompanyCustomerQueryModel'
    customers_search_body_3:
      allOf:
      - $ref: '#/components/schemas/SearchCompanyCustomerQueryModel'
    users_search_body:
      allOf:
      - $ref: '#/components/schemas/SearchCompanyUserQueryModel'
    users_search_body_1:
      allOf:
      - $ref: '#/components/schemas/SearchCompanyUserQueryModel'
    users_search_body_2:
      allOf:
      - $ref: '#/components/schemas/SearchCompanyUserQueryModel'
    users_search_body_3:
      allOf:
      - $ref: '#/components/schemas/SearchCompanyUserQueryModel'
    projects_search_body:
      allOf:
      - $ref: '#/components/schemas/SearchProjectQueryModel'
    projects_search_body_1:
      allOf:
      - $ref: '#/components/schemas/SearchProjectQueryModel'
    projects_search_body_2:
      allOf:
      - $ref: '#/components/schemas/SearchProjectQueryModel'
    projects_search_body_3:
      allOf:
      - $ref: '#/components/schemas/SearchProjectQueryModel'
    skills_search_body:
      allOf:
      - $ref: '#/components/schemas/SearchSkillQueryModel'
    skills_search_body_1:
      allOf:
      - $ref: '#/components/schemas/SearchSkillQueryModel'
    skills_search_body_2:
      allOf:
      - $ref: '#/components/schemas/SearchSkillQueryModel'
    skills_search_body_3:
      allOf:
      - $ref: '#/components/schemas/SearchSkillQueryModel'
    search_term_body:
      allOf:
      - $ref: '#/components/schemas/SkillSearchQueryTermModel'
    search_term_body_1:
      allOf:
      - $ref: '#/components/schemas/SkillSearchQueryTermModel'
    search_term_body_2:
      allOf:
      - $ref: '#/components/schemas/SkillSearchQueryTermModel'
    search_term_body_3:
      allOf:
      - $ref: '#/components/schemas/SkillSearchQueryTermModel'
